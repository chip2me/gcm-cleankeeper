

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed May 06 12:15:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     	;# 
    28  0001                     	;# 
    29  0002                     	;# 
    30  0003                     	;# 
    31  0004                     	;# 
    32  0005                     	;# 
    33  0006                     	;# 
    34  0007                     	;# 
    35  0008                     	;# 
    36  0009                     	;# 
    37  000A                     	;# 
    38  000B                     	;# 
    39  000C                     	;# 
    40  000E                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0015                     	;# 
    45  0016                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001C                     	;# 
    53  008C                     	;# 
    54  008E                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0095                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010E                     	;# 
    71  0111                     	;# 
    72  0112                     	;# 
    73  0113                     	;# 
    74  0114                     	;# 
    75  0115                     	;# 
    76  0116                     	;# 
    77  0117                     	;# 
    78  0118                     	;# 
    79  0119                     	;# 
    80  011D                     	;# 
    81  018C                     	;# 
    82  018E                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0194                     	;# 
    89  0195                     	;# 
    90  0196                     	;# 
    91  0197                     	;# 
    92  020C                     	;# 
    93  0211                     	;# 
    94  0211                     	;# 
    95  0212                     	;# 
    96  0212                     	;# 
    97  0213                     	;# 
    98  0213                     	;# 
    99  0214                     	;# 
   100  0214                     	;# 
   101  0215                     	;# 
   102  0215                     	;# 
   103  0215                     	;# 
   104  0216                     	;# 
   105  0216                     	;# 
   106  0217                     	;# 
   107  0217                     	;# 
   108  0391                     	;# 
   109  0392                     	;# 
   110  0393                     	;# 
   111  0498                     	;# 
   112  0498                     	;# 
   113  0499                     	;# 
   114  049A                     	;# 
   115  049B                     	;# 
   116  049B                     	;# 
   117  049C                     	;# 
   118  049E                     	;# 
   119  049F                     	;# 
   120  0611                     	;# 
   121  0612                     	;# 
   122  0613                     	;# 
   123  0613                     	;# 
   124  0614                     	;# 
   125  0615                     	;# 
   126  0616                     	;# 
   127  0616                     	;# 
   128  0617                     	;# 
   129  0618                     	;# 
   130  0619                     	;# 
   131  0619                     	;# 
   132  061A                     	;# 
   133  061B                     	;# 
   134  061C                     	;# 
   135  061C                     	;# 
   136  0691                     	;# 
   137  0692                     	;# 
   138  0693                     	;# 
   139  0694                     	;# 
   140  0695                     	;# 
   141  0F0F                     	;# 
   142  0F10                     	;# 
   143  0F11                     	;# 
   144  0F12                     	;# 
   145  0F13                     	;# 
   146  0F14                     	;# 
   147  0F15                     	;# 
   148  0F16                     	;# 
   149  0F17                     	;# 
   150  0F18                     	;# 
   151  0F19                     	;# 
   152  0F1A                     	;# 
   153  0F1B                     	;# 
   154  0F1C                     	;# 
   155  0F1D                     	;# 
   156  0F1E                     	;# 
   157  0F1F                     	;# 
   158  0FE3                     	;# 
   159  0FE4                     	;# 
   160  0FE5                     	;# 
   161  0FE6                     	;# 
   162  0FE7                     	;# 
   163  0FE8                     	;# 
   164  0FE9                     	;# 
   165  0FEA                     	;# 
   166  0FEB                     	;# 
   167  0FED                     	;# 
   168  0FEE                     	;# 
   169  0FEF                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000E                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  008C                     	;# 
   197  008E                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  010C                     	;# 
   213  010E                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0113                     	;# 
   217  0114                     	;# 
   218  0115                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  0118                     	;# 
   222  0119                     	;# 
   223  011D                     	;# 
   224  018C                     	;# 
   225  018E                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  020C                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  0391                     	;# 
   252  0392                     	;# 
   253  0393                     	;# 
   254  0498                     	;# 
   255  0498                     	;# 
   256  0499                     	;# 
   257  049A                     	;# 
   258  049B                     	;# 
   259  049B                     	;# 
   260  049C                     	;# 
   261  049E                     	;# 
   262  049F                     	;# 
   263  0611                     	;# 
   264  0612                     	;# 
   265  0613                     	;# 
   266  0613                     	;# 
   267  0614                     	;# 
   268  0615                     	;# 
   269  0616                     	;# 
   270  0616                     	;# 
   271  0617                     	;# 
   272  0618                     	;# 
   273  0619                     	;# 
   274  0619                     	;# 
   275  061A                     	;# 
   276  061B                     	;# 
   277  061C                     	;# 
   278  061C                     	;# 
   279  0691                     	;# 
   280  0692                     	;# 
   281  0693                     	;# 
   282  0694                     	;# 
   283  0695                     	;# 
   284  0F0F                     	;# 
   285  0F10                     	;# 
   286  0F11                     	;# 
   287  0F12                     	;# 
   288  0F13                     	;# 
   289  0F14                     	;# 
   290  0F15                     	;# 
   291  0F16                     	;# 
   292  0F17                     	;# 
   293  0F18                     	;# 
   294  0F19                     	;# 
   295  0F1A                     	;# 
   296  0F1B                     	;# 
   297  0F1C                     	;# 
   298  0F1D                     	;# 
   299  0F1E                     	;# 
   300  0F1F                     	;# 
   301  0FE3                     	;# 
   302  0FE4                     	;# 
   303  0FE5                     	;# 
   304  0FE6                     	;# 
   305  0FE7                     	;# 
   306  0FE8                     	;# 
   307  0FE9                     	;# 
   308  0FEA                     	;# 
   309  0FEB                     	;# 
   310  0FED                     	;# 
   311  0FEE                     	;# 
   312  0FEF                     	;# 
   313  0000                     	;# 
   314  0001                     	;# 
   315  0002                     	;# 
   316  0003                     	;# 
   317  0004                     	;# 
   318  0005                     	;# 
   319  0006                     	;# 
   320  0007                     	;# 
   321  0008                     	;# 
   322  0009                     	;# 
   323  000A                     	;# 
   324  000B                     	;# 
   325  000C                     	;# 
   326  000E                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  008C                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  010C                     	;# 
   356  010E                     	;# 
   357  0111                     	;# 
   358  0112                     	;# 
   359  0113                     	;# 
   360  0114                     	;# 
   361  0115                     	;# 
   362  0116                     	;# 
   363  0117                     	;# 
   364  0118                     	;# 
   365  0119                     	;# 
   366  011D                     	;# 
   367  018C                     	;# 
   368  018E                     	;# 
   369  0191                     	;# 
   370  0191                     	;# 
   371  0192                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0197                     	;# 
   378  020C                     	;# 
   379  0211                     	;# 
   380  0211                     	;# 
   381  0212                     	;# 
   382  0212                     	;# 
   383  0213                     	;# 
   384  0213                     	;# 
   385  0214                     	;# 
   386  0214                     	;# 
   387  0215                     	;# 
   388  0215                     	;# 
   389  0215                     	;# 
   390  0216                     	;# 
   391  0216                     	;# 
   392  0217                     	;# 
   393  0217                     	;# 
   394  0391                     	;# 
   395  0392                     	;# 
   396  0393                     	;# 
   397  0498                     	;# 
   398  0498                     	;# 
   399  0499                     	;# 
   400  049A                     	;# 
   401  049B                     	;# 
   402  049B                     	;# 
   403  049C                     	;# 
   404  049E                     	;# 
   405  049F                     	;# 
   406  0611                     	;# 
   407  0612                     	;# 
   408  0613                     	;# 
   409  0613                     	;# 
   410  0614                     	;# 
   411  0615                     	;# 
   412  0616                     	;# 
   413  0616                     	;# 
   414  0617                     	;# 
   415  0618                     	;# 
   416  0619                     	;# 
   417  0619                     	;# 
   418  061A                     	;# 
   419  061B                     	;# 
   420  061C                     	;# 
   421  061C                     	;# 
   422  0691                     	;# 
   423  0692                     	;# 
   424  0693                     	;# 
   425  0694                     	;# 
   426  0695                     	;# 
   427  0F0F                     	;# 
   428  0F10                     	;# 
   429  0F11                     	;# 
   430  0F12                     	;# 
   431  0F13                     	;# 
   432  0F14                     	;# 
   433  0F15                     	;# 
   434  0F16                     	;# 
   435  0F17                     	;# 
   436  0F18                     	;# 
   437  0F19                     	;# 
   438  0F1A                     	;# 
   439  0F1B                     	;# 
   440  0F1C                     	;# 
   441  0F1D                     	;# 
   442  0F1E                     	;# 
   443  0F1F                     	;# 
   444  0FE3                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000E                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0013                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  008C                     	;# 
   483  008E                     	;# 
   484  0091                     	;# 
   485  0092                     	;# 
   486  0093                     	;# 
   487  0095                     	;# 
   488  0096                     	;# 
   489  0097                     	;# 
   490  0099                     	;# 
   491  009A                     	;# 
   492  009B                     	;# 
   493  009B                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011D                     	;# 
   510  018C                     	;# 
   511  018E                     	;# 
   512  0191                     	;# 
   513  0191                     	;# 
   514  0192                     	;# 
   515  0193                     	;# 
   516  0193                     	;# 
   517  0194                     	;# 
   518  0195                     	;# 
   519  0196                     	;# 
   520  0197                     	;# 
   521  020C                     	;# 
   522  0211                     	;# 
   523  0211                     	;# 
   524  0212                     	;# 
   525  0212                     	;# 
   526  0213                     	;# 
   527  0213                     	;# 
   528  0214                     	;# 
   529  0214                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0215                     	;# 
   533  0216                     	;# 
   534  0216                     	;# 
   535  0217                     	;# 
   536  0217                     	;# 
   537  0391                     	;# 
   538  0392                     	;# 
   539  0393                     	;# 
   540  0498                     	;# 
   541  0498                     	;# 
   542  0499                     	;# 
   543  049A                     	;# 
   544  049B                     	;# 
   545  049B                     	;# 
   546  049C                     	;# 
   547  049E                     	;# 
   548  049F                     	;# 
   549  0611                     	;# 
   550  0612                     	;# 
   551  0613                     	;# 
   552  0613                     	;# 
   553  0614                     	;# 
   554  0615                     	;# 
   555  0616                     	;# 
   556  0616                     	;# 
   557  0617                     	;# 
   558  0618                     	;# 
   559  0619                     	;# 
   560  0619                     	;# 
   561  061A                     	;# 
   562  061B                     	;# 
   563  061C                     	;# 
   564  061C                     	;# 
   565  0691                     	;# 
   566  0692                     	;# 
   567  0693                     	;# 
   568  0694                     	;# 
   569  0695                     	;# 
   570  0F0F                     	;# 
   571  0F10                     	;# 
   572  0F11                     	;# 
   573  0F12                     	;# 
   574  0F13                     	;# 
   575  0F14                     	;# 
   576  0F15                     	;# 
   577  0F16                     	;# 
   578  0F17                     	;# 
   579  0F18                     	;# 
   580  0F19                     	;# 
   581  0F1A                     	;# 
   582  0F1B                     	;# 
   583  0F1C                     	;# 
   584  0F1D                     	;# 
   585  0F1E                     	;# 
   586  0F1F                     	;# 
   587  0FE3                     	;# 
   588  0FE4                     	;# 
   589  0FE5                     	;# 
   590  0FE6                     	;# 
   591  0FE7                     	;# 
   592  0FE8                     	;# 
   593  0FE9                     	;# 
   594  0FEA                     	;# 
   595  0FEB                     	;# 
   596  0FED                     	;# 
   597  0FEE                     	;# 
   598  0FEF                     	;# 
   599  0000                     	;# 
   600  0001                     	;# 
   601  0002                     	;# 
   602  0003                     	;# 
   603  0004                     	;# 
   604  0005                     	;# 
   605  0006                     	;# 
   606  0007                     	;# 
   607  0008                     	;# 
   608  0009                     	;# 
   609  000A                     	;# 
   610  000B                     	;# 
   611  000C                     	;# 
   612  000E                     	;# 
   613  0011                     	;# 
   614  0012                     	;# 
   615  0013                     	;# 
   616  0015                     	;# 
   617  0016                     	;# 
   618  0016                     	;# 
   619  0017                     	;# 
   620  0018                     	;# 
   621  0019                     	;# 
   622  001A                     	;# 
   623  001B                     	;# 
   624  001C                     	;# 
   625  008C                     	;# 
   626  008E                     	;# 
   627  0091                     	;# 
   628  0092                     	;# 
   629  0093                     	;# 
   630  0095                     	;# 
   631  0096                     	;# 
   632  0097                     	;# 
   633  0099                     	;# 
   634  009A                     	;# 
   635  009B                     	;# 
   636  009B                     	;# 
   637  009C                     	;# 
   638  009D                     	;# 
   639  009E                     	;# 
   640  009F                     	;# 
   641  010C                     	;# 
   642  010E                     	;# 
   643  0111                     	;# 
   644  0112                     	;# 
   645  0113                     	;# 
   646  0114                     	;# 
   647  0115                     	;# 
   648  0116                     	;# 
   649  0117                     	;# 
   650  0118                     	;# 
   651  0119                     	;# 
   652  011D                     	;# 
   653  018C                     	;# 
   654  018E                     	;# 
   655  0191                     	;# 
   656  0191                     	;# 
   657  0192                     	;# 
   658  0193                     	;# 
   659  0193                     	;# 
   660  0194                     	;# 
   661  0195                     	;# 
   662  0196                     	;# 
   663  0197                     	;# 
   664  020C                     	;# 
   665  0211                     	;# 
   666  0211                     	;# 
   667  0212                     	;# 
   668  0212                     	;# 
   669  0213                     	;# 
   670  0213                     	;# 
   671  0214                     	;# 
   672  0214                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0215                     	;# 
   676  0216                     	;# 
   677  0216                     	;# 
   678  0217                     	;# 
   679  0217                     	;# 
   680  0391                     	;# 
   681  0392                     	;# 
   682  0393                     	;# 
   683  0498                     	;# 
   684  0498                     	;# 
   685  0499                     	;# 
   686  049A                     	;# 
   687  049B                     	;# 
   688  049B                     	;# 
   689  049C                     	;# 
   690  049E                     	;# 
   691  049F                     	;# 
   692  0611                     	;# 
   693  0612                     	;# 
   694  0613                     	;# 
   695  0613                     	;# 
   696  0614                     	;# 
   697  0615                     	;# 
   698  0616                     	;# 
   699  0616                     	;# 
   700  0617                     	;# 
   701  0618                     	;# 
   702  0619                     	;# 
   703  0619                     	;# 
   704  061A                     	;# 
   705  061B                     	;# 
   706  061C                     	;# 
   707  061C                     	;# 
   708  0691                     	;# 
   709  0692                     	;# 
   710  0693                     	;# 
   711  0694                     	;# 
   712  0695                     	;# 
   713  0F0F                     	;# 
   714  0F10                     	;# 
   715  0F11                     	;# 
   716  0F12                     	;# 
   717  0F13                     	;# 
   718  0F14                     	;# 
   719  0F15                     	;# 
   720  0F16                     	;# 
   721  0F17                     	;# 
   722  0F18                     	;# 
   723  0F19                     	;# 
   724  0F1A                     	;# 
   725  0F1B                     	;# 
   726  0F1C                     	;# 
   727  0F1D                     	;# 
   728  0F1E                     	;# 
   729  0F1F                     	;# 
   730  0FE3                     	;# 
   731  0FE4                     	;# 
   732  0FE5                     	;# 
   733  0FE6                     	;# 
   734  0FE7                     	;# 
   735  0FE8                     	;# 
   736  0FE9                     	;# 
   737  0FEA                     	;# 
   738  0FEB                     	;# 
   739  0FED                     	;# 
   740  0FEE                     	;# 
   741  0FEF                     	;# 
   742  0000                     	;# 
   743  0001                     	;# 
   744  0002                     	;# 
   745  0003                     	;# 
   746  0004                     	;# 
   747  0005                     	;# 
   748  0006                     	;# 
   749  0007                     	;# 
   750  0008                     	;# 
   751  0009                     	;# 
   752  000A                     	;# 
   753  000B                     	;# 
   754  000C                     	;# 
   755  000E                     	;# 
   756  0011                     	;# 
   757  0012                     	;# 
   758  0013                     	;# 
   759  0015                     	;# 
   760  0016                     	;# 
   761  0016                     	;# 
   762  0017                     	;# 
   763  0018                     	;# 
   764  0019                     	;# 
   765  001A                     	;# 
   766  001B                     	;# 
   767  001C                     	;# 
   768  008C                     	;# 
   769  008E                     	;# 
   770  0091                     	;# 
   771  0092                     	;# 
   772  0093                     	;# 
   773  0095                     	;# 
   774  0096                     	;# 
   775  0097                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  009F                     	;# 
   784  010C                     	;# 
   785  010E                     	;# 
   786  0111                     	;# 
   787  0112                     	;# 
   788  0113                     	;# 
   789  0114                     	;# 
   790  0115                     	;# 
   791  0116                     	;# 
   792  0117                     	;# 
   793  0118                     	;# 
   794  0119                     	;# 
   795  011D                     	;# 
   796  018C                     	;# 
   797  018E                     	;# 
   798  0191                     	;# 
   799  0191                     	;# 
   800  0192                     	;# 
   801  0193                     	;# 
   802  0193                     	;# 
   803  0194                     	;# 
   804  0195                     	;# 
   805  0196                     	;# 
   806  0197                     	;# 
   807  020C                     	;# 
   808  0211                     	;# 
   809  0211                     	;# 
   810  0212                     	;# 
   811  0212                     	;# 
   812  0213                     	;# 
   813  0213                     	;# 
   814  0214                     	;# 
   815  0214                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0216                     	;# 
   820  0216                     	;# 
   821  0217                     	;# 
   822  0217                     	;# 
   823  0391                     	;# 
   824  0392                     	;# 
   825  0393                     	;# 
   826  0498                     	;# 
   827  0498                     	;# 
   828  0499                     	;# 
   829  049A                     	;# 
   830  049B                     	;# 
   831  049B                     	;# 
   832  049C                     	;# 
   833  049E                     	;# 
   834  049F                     	;# 
   835  0611                     	;# 
   836  0612                     	;# 
   837  0613                     	;# 
   838  0613                     	;# 
   839  0614                     	;# 
   840  0615                     	;# 
   841  0616                     	;# 
   842  0616                     	;# 
   843  0617                     	;# 
   844  0618                     	;# 
   845  0619                     	;# 
   846  0619                     	;# 
   847  061A                     	;# 
   848  061B                     	;# 
   849  061C                     	;# 
   850  061C                     	;# 
   851  0691                     	;# 
   852  0692                     	;# 
   853  0693                     	;# 
   854  0694                     	;# 
   855  0695                     	;# 
   856  0F0F                     	;# 
   857  0F10                     	;# 
   858  0F11                     	;# 
   859  0F12                     	;# 
   860  0F13                     	;# 
   861  0F14                     	;# 
   862  0F15                     	;# 
   863  0F16                     	;# 
   864  0F17                     	;# 
   865  0F18                     	;# 
   866  0F19                     	;# 
   867  0F1A                     	;# 
   868  0F1B                     	;# 
   869  0F1C                     	;# 
   870  0F1D                     	;# 
   871  0F1E                     	;# 
   872  0F1F                     	;# 
   873  0FE3                     	;# 
   874  0FE4                     	;# 
   875  0FE5                     	;# 
   876  0FE6                     	;# 
   877  0FE7                     	;# 
   878  0FE8                     	;# 
   879  0FE9                     	;# 
   880  0FEA                     	;# 
   881  0FEB                     	;# 
   882  0FED                     	;# 
   883  0FEE                     	;# 
   884  0FEF                     	;# 
   885                           
   886                           	psect	stringtext
   887  0200                     __pstringtext:	
   888  0200                     Wait_ms@iWAIT:	
   889  0200  3474               	retlw	116
   890  0201  3400               	retlw	0
   891  0202                     __end_ofWait_ms@iWAIT:	
   892  000B                     _INTCONbits	set	11
   893  0011                     _PIR1bits	set	17
   894  0012                     _PIR2	set	18
   895  000C                     _PORTAbits	set	12
   896  000E                     _PORTCbits	set	14
   897  001B                     _PR2	set	27
   898  001C                     _T2CON	set	28
   899  009D                     _ADCON0bits	set	157
   900  009E                     _ADCON1bits	set	158
   901  009C                     _ADRESH	set	156
   902  009B                     _ADRESL	set	155
   903  0095                     _OPTION_REGbits	set	149
   904  0099                     _OSCCONbits	set	153
   905  009A                     _OSCSTATbits	set	154
   906  0091                     _PIE1bits	set	145
   907  008C                     _TRISA	set	140
   908  008C                     _TRISAbits	set	140
   909  008E                     _TRISC	set	142
   910  008E                     _TRISCbits	set	142
   911  010C                     _LATA	set	268
   912  010C                     _LATAbits	set	268
   913  010E                     _LATC	set	270
   914  010E                     _LATCbits	set	270
   915  018C                     _ANSELA	set	396
   916  018C                     _ANSELAbits	set	396
   917  018E                     _ANSELC	set	398
   918  018E                     _ANSELCbits	set	398
   919  0192                     _PMADRH	set	402
   920  0191                     _PMADRL	set	401
   921  0195                     _PMCON1bits	set	405
   922  0196                     _PMCON2	set	406
   923  0194                     _PMDATH	set	404
   924  0193                     _PMDATL	set	403
   925  0212                     _SSPADD	set	530
   926  0215                     _SSPCON1	set	533
   927  0215                     _SSPCON1bits	set	533
   928  0216                     _SSPCON2	set	534
   929  0217                     _SSPCON3	set	535
   930  0214                     _SSPSTAT	set	532
   931  020C                     _WPUAbits	set	524
   932  0616                     _PWM2CON	set	1558
   933  0615                     _PWM2DCH	set	1557
   934  0614                     _PWM2DCL	set	1556
   935                           
   936                           ; #config settings
   937  0000                     
   938                           	psect	cinit
   939  07F2                     start_initialization:	
   940  07F2                     __initialization:	
   941                           
   942                           ; Clear objects allocated to BANK0
   943  07F2  01DD               	clrf	__pbssBANK0& (0+127)
   944  07F3  01DE               	clrf	(__pbssBANK0+1)& (0+127)
   945  07F4  01DF               	clrf	(__pbssBANK0+2)& (0+127)
   946  07F5  01E0               	clrf	(__pbssBANK0+3)& (0+127)
   947  07F6  01E1               	clrf	(__pbssBANK0+4)& (0+127)
   948  07F7  01E2               	clrf	(__pbssBANK0+5)& (0+127)
   949  07F8  01E3               	clrf	(__pbssBANK0+6)& (0+127)
   950  07F9  01E4               	clrf	(__pbssBANK0+7)& (0+127)
   951  07FA  01E5               	clrf	(__pbssBANK0+8)& (0+127)
   952  07FB  01E6               	clrf	(__pbssBANK0+9)& (0+127)
   953  07FC  01E7               	clrf	(__pbssBANK0+10)& (0+127)
   954  07FD  01E8               	clrf	(__pbssBANK0+11)& (0+127)
   955  07FE                     end_of_initialization:	
   956                           ;End of C runtime variable initialization code
   957                           
   958  07FE                     __end_of__initialization:	
   959  07FE  0020               	movlb	0
   960  07FF  2A55               	ljmp	_main	;jump to C main() function
   961                           
   962                           	psect	bssBANK0
   963  005D                     __pbssBANK0:	
   964  005D                     CleanKeeperController@iOverLoadTimer:	
   965  005D                     	ds	4
   966  0061                     CleanKeeperController@iTimer:	
   967  0061                     	ds	4
   968  0065                     CleanKeeperController@iState:	
   969  0065                     	ds	2
   970  0067                     CleanKeeperController@bSignalRelay:	
   971  0067                     	ds	1
   972  0068                     _ADDRESS:	
   973  0068                     	ds	1
   974                           
   975                           	psect	cstackCOMMON
   976  0070                     __pcstackCOMMON:	
   977  0070                     ?_ConfigureOscillator:	
   978  0070                     ??_ConfigureOscillator:	
   979                           ; 0 bytes @ 0x0
   980                           
   981  0070                     ?_InitApp:	
   982                           ; 0 bytes @ 0x0
   983                           
   984  0070                     ?_CleanKeeperInit:	
   985                           ; 0 bytes @ 0x0
   986                           
   987  0070                     ?_CleanKeeperController:	
   988                           ; 0 bytes @ 0x0
   989                           
   990  0070                     ??_CleanKeeperController:	
   991                           ; 0 bytes @ 0x0
   992                           
   993  0070                     ?_InitGPIO:	
   994                           ; 0 bytes @ 0x0
   995                           
   996  0070                     ??_InitGPIO:	
   997                           ; 0 bytes @ 0x0
   998                           
   999  0070                     ?_InitAddress:	
  1000                           ; 0 bytes @ 0x0
  1001                           
  1002  0070                     ?_main:	
  1003                           ; 0 bytes @ 0x0
  1004                           
  1005  0070                     ?_SetPWMDutyCycle:	
  1006                           ; 0 bytes @ 0x0
  1007                           
  1008  0070                     ?_ReadFlash:	
  1009                           ; 0 bytes @ 0x0
  1010                           
  1011  0070                     ?_LimitFreq:	
  1012                           ; 2 bytes @ 0x0
  1013                           
  1014  0070                     ?___ftpack:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0070                     ReadFlash@address:	
  1018                           ; 3 bytes @ 0x0
  1019                           
  1020  0070                     LimitFreq@iFreq:	
  1021                           ; 2 bytes @ 0x0
  1022                           
  1023  0070                     SetPWMDutyCycle@DutyCycle:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0070                     ___ftpack@arg:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029                           
  1030                           ; 3 bytes @ 0x0
  1031  0070                     	ds	2
  1032  0072                     ??_ReadFlash:	
  1033  0072                     ??_LimitFreq:	
  1034                           ; 0 bytes @ 0x2
  1035                           
  1036  0072                     ??_SetPWMDutyCycle:	
  1037                           ; 0 bytes @ 0x2
  1038                           
  1039  0072                     LimitFreq@iLimited:	
  1040                           ; 0 bytes @ 0x2
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x2
  1044  0072                     	ds	1
  1045  0073                     ___ftpack@exp:	
  1046                           
  1047                           ; 1 bytes @ 0x3
  1048  0073                     	ds	1
  1049  0074                     CleanKeeperController@bRed:	
  1050  0074                     ___ftpack@sign:	
  1051                           ; 1 bytes @ 0x4
  1052                           
  1053  0074                     ReadFlash@data:	
  1054                           ; 1 bytes @ 0x4
  1055                           
  1056                           
  1057                           ; 2 bytes @ 0x4
  1058  0074                     	ds	1
  1059  0075                     ??___ftpack:	
  1060  0075                     CleanKeeperController@bGreen:	
  1061                           ; 0 bytes @ 0x5
  1062                           
  1063                           
  1064                           ; 1 bytes @ 0x5
  1065  0075                     	ds	1
  1066  0076                     ??_InitAddress:	
  1067                           
  1068                           ; 0 bytes @ 0x6
  1069  0076                     	ds	2
  1070  0078                     ?___lwtoft:	
  1071  0078                     InitAddress@addr:	
  1072                           ; 3 bytes @ 0x8
  1073                           
  1074  0078                     ___lwtoft@c:	
  1075                           ; 2 bytes @ 0x8
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x8
  1079  0078                     	ds	2
  1080  007A                     ??_InitApp:	
  1081                           
  1082                           ; 0 bytes @ 0xA
  1083  007A                     	ds	1
  1084  007B                     ??___lwtoft:	
  1085                           
  1086                           ; 0 bytes @ 0xB
  1087  007B                     	ds	1
  1088  007C                     ??_PulseOut:	
  1089  007C                     PulseOut@iLimitedFreq:	
  1090                           ; 0 bytes @ 0xC
  1091                           
  1092                           
  1093                           ; 2 bytes @ 0xC
  1094  007C                     	ds	2
  1095  007E                     ??_CleanKeeperInit:	
  1096  007E                     ??_main:	
  1097                           ; 0 bytes @ 0xE
  1098                           
  1099                           
  1100                           	psect	cstackBANK0
  1101  0020                     __pcstackBANK0:	
  1102                           ; 0 bytes @ 0xE
  1103                           
  1104  0020                     ?___ftmul:	
  1105  0020                     ___ftmul@f1:	
  1106                           ; 3 bytes @ 0x0
  1107                           
  1108                           
  1109                           ; 3 bytes @ 0x0
  1110  0020                     	ds	3
  1111  0023                     ___ftmul@f2:	
  1112                           
  1113                           ; 3 bytes @ 0x3
  1114  0023                     	ds	3
  1115  0026                     ??___ftmul:	
  1116                           
  1117                           ; 0 bytes @ 0x6
  1118  0026                     	ds	4
  1119  002A                     ___ftmul@exp:	
  1120                           
  1121                           ; 1 bytes @ 0xA
  1122  002A                     	ds	1
  1123  002B                     ___ftmul@f3_as_product:	
  1124                           
  1125                           ; 3 bytes @ 0xB
  1126  002B                     	ds	3
  1127  002E                     ___ftmul@cntr:	
  1128                           
  1129                           ; 1 bytes @ 0xE
  1130  002E                     	ds	1
  1131  002F                     ___ftmul@sign:	
  1132                           
  1133                           ; 1 bytes @ 0xF
  1134  002F                     	ds	1
  1135  0030                     ?___ftdiv:	
  1136  0030                     ___ftdiv@f2:	
  1137                           ; 3 bytes @ 0x10
  1138                           
  1139                           
  1140                           ; 3 bytes @ 0x10
  1141  0030                     	ds	3
  1142  0033                     ___ftdiv@f1:	
  1143                           
  1144                           ; 3 bytes @ 0x13
  1145  0033                     	ds	3
  1146  0036                     ??___ftdiv:	
  1147                           
  1148                           ; 0 bytes @ 0x16
  1149  0036                     	ds	4
  1150  003A                     ___ftdiv@cntr:	
  1151                           
  1152                           ; 1 bytes @ 0x1A
  1153  003A                     	ds	1
  1154  003B                     ___ftdiv@f3:	
  1155                           
  1156                           ; 3 bytes @ 0x1B
  1157  003B                     	ds	3
  1158  003E                     ___ftdiv@exp:	
  1159                           
  1160                           ; 1 bytes @ 0x1E
  1161  003E                     	ds	1
  1162  003F                     ___ftdiv@sign:	
  1163                           
  1164                           ; 1 bytes @ 0x1F
  1165  003F                     	ds	1
  1166  0040                     ?___ftadd:	
  1167  0040                     ___ftadd@f1:	
  1168                           ; 3 bytes @ 0x20
  1169                           
  1170                           
  1171                           ; 3 bytes @ 0x20
  1172  0040                     	ds	3
  1173  0043                     ___ftadd@f2:	
  1174                           
  1175                           ; 3 bytes @ 0x23
  1176  0043                     	ds	3
  1177  0046                     ??___ftadd:	
  1178                           
  1179                           ; 0 bytes @ 0x26
  1180  0046                     	ds	4
  1181  004A                     ___ftadd@sign:	
  1182                           
  1183                           ; 1 bytes @ 0x2A
  1184  004A                     	ds	1
  1185  004B                     ___ftadd@exp2:	
  1186                           
  1187                           ; 1 bytes @ 0x2B
  1188  004B                     	ds	1
  1189  004C                     ___ftadd@exp1:	
  1190                           
  1191                           ; 1 bytes @ 0x2C
  1192  004C                     	ds	1
  1193  004D                     ?___fttol:	
  1194  004D                     ___fttol@f1:	
  1195                           ; 4 bytes @ 0x2D
  1196                           
  1197                           
  1198                           ; 3 bytes @ 0x2D
  1199  004D                     	ds	4
  1200  0051                     ??___fttol:	
  1201                           
  1202                           ; 0 bytes @ 0x31
  1203  0051                     	ds	4
  1204  0055                     ___fttol@sign1:	
  1205                           
  1206                           ; 1 bytes @ 0x35
  1207  0055                     	ds	1
  1208  0056                     ___fttol@lval:	
  1209                           
  1210                           ; 4 bytes @ 0x36
  1211  0056                     	ds	4
  1212  005A                     ___fttol@exp1:	
  1213                           
  1214                           ; 1 bytes @ 0x3A
  1215  005A                     	ds	1
  1216  005B                     ?_PulseOut:	
  1217  005B                     PulseOut@iFreq:	
  1218                           ; 0 bytes @ 0x3B
  1219                           
  1220                           
  1221                           ; 2 bytes @ 0x3B
  1222  005B                     	ds	2
  1223                           
  1224                           	psect	maintext
  1225  0255                     __pmaintext:	
  1226 ;;
  1227 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1228 ;;
  1229 ;; *************** function _main *****************
  1230 ;; Defined at:
  1231 ;;		line 25 in file "main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;		None               void
  1238 ;; Registers used:
  1239 ;;		wreg, status,2, status,0, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : B1F/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1
  1245 ;;      Params:         0       0       0
  1246 ;;      Locals:         0       0       0
  1247 ;;      Temps:          0       0       0
  1248 ;;      Totals:         0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels required when called:    4
  1251 ;; This function calls:
  1252 ;;		_CleanKeeperController
  1253 ;;		_CleanKeeperInit
  1254 ;;		_ConfigureOscillator
  1255 ;;		_InitApp
  1256 ;; This function is called by:
  1257 ;;		Startup code after reset
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _main
  1263  0255                     _main:	
  1264                           
  1265                           ;main.c: 28: ConfigureOscillator();
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1269  0255  225A               	fcall	_ConfigureOscillator
  1270                           
  1271                           ;main.c: 31: InitApp();
  1272  0256  224D               	fcall	_InitApp
  1273                           
  1274                           ;main.c: 32: CleanKeeperInit();
  1275  0257  2262               	fcall	_CleanKeeperInit
  1276  0258                     l13:	
  1277                           ;main.c: 35: while (1)
  1278                           
  1279                           
  1280                           ;main.c: 36: {
  1281                           ;main.c: 37: CleanKeeperController();
  1282  0258  26ED               	fcall	_CleanKeeperController
  1283  0259  2A58               	goto	l13
  1284  025A                     __end_of_main:	
  1285                           
  1286                           	psect	text1
  1287  024D                     __ptext1:	
  1288 ;; *************** function _InitApp *****************
  1289 ;; Defined at:
  1290 ;;		line 18 in file "user.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;		None               void
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1
  1304 ;;      Params:         0       0       0
  1305 ;;      Locals:         0       0       0
  1306 ;;      Temps:          0       0       0
  1307 ;;      Totals:         0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels used:    1
  1310 ;; Hardware stack levels required when called:    2
  1311 ;; This function calls:
  1312 ;;		_InitAddress
  1313 ;;		_InitGPIO
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function _InitApp
  1321  024D                     _InitApp:	
  1322                           
  1323                           ;user.c: 20: InitGPIO();
  1324                           
  1325                           ;incstack = 0
  1326                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1327  024D  229C               	fcall	_InitGPIO
  1328                           
  1329                           ;user.c: 21: InitAddress();
  1330  024E  227D               	fcall	_InitAddress
  1331  024F  0008               	return
  1332  0250                     __end_of_InitApp:	
  1333                           
  1334                           	psect	text2
  1335  029C                     __ptext2:	
  1336 ;; *************** function _InitGPIO *****************
  1337 ;; Defined at:
  1338 ;;		line 35 in file "user.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;		None               void
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1
  1352 ;;      Params:         0       0       0
  1353 ;;      Locals:         0       0       0
  1354 ;;      Temps:          0       0       0
  1355 ;;      Totals:         0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_InitApp
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _InitGPIO
  1367  029C                     _InitGPIO:	
  1368                           
  1369                           ;user.c: 37: ANSELC = 0x00;
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _InitGPIO: [wreg+status,2+status,0]
  1373  029C  0023               	movlb	3	; select bank3
  1374  029D  018E               	clrf	14	;volatile
  1375                           
  1376                           ;user.c: 38: ANSELA = 0x00;
  1377  029E  018C               	clrf	12	;volatile
  1378                           
  1379                           ;user.c: 42: TRISA = 0x00;
  1380  029F  0021               	movlb	1	; select bank1
  1381  02A0  018C               	clrf	12	;volatile
  1382                           
  1383                           ;user.c: 43: TRISC = 0xFF;
  1384  02A1  30FF               	movlw	255
  1385  02A2  008E               	movwf	14	;volatile
  1386                           
  1387                           ;user.c: 46: LATA = 0x00;
  1388  02A3  0022               	movlb	2	; select bank2
  1389  02A4  018C               	clrf	12	;volatile
  1390                           
  1391                           ;user.c: 47: LATC = 0x00;
  1392  02A5  018E               	clrf	14	;volatile
  1393                           
  1394                           ;user.c: 49: TRISCbits.TRISC0 = 1;
  1395  02A6  0021               	movlb	1	; select bank1
  1396  02A7  140E               	bsf	14,0	;volatile
  1397                           
  1398                           ;user.c: 50: TRISCbits.TRISC1 = 1;
  1399  02A8  148E               	bsf	14,1	;volatile
  1400                           
  1401                           ;user.c: 51: LATCbits.LATC0 = 0;
  1402  02A9  0022               	movlb	2	; select bank2
  1403  02AA  100E               	bcf	14,0	;volatile
  1404                           
  1405                           ;user.c: 52: LATCbits.LATC1 = 0;
  1406  02AB  108E               	bcf	14,1	;volatile
  1407                           
  1408                           ;user.c: 54: TRISCbits.TRISC4 = 0;
  1409  02AC  0021               	movlb	1	; select bank1
  1410  02AD  120E               	bcf	14,4	;volatile
  1411                           
  1412                           ;user.c: 55: TRISCbits.TRISC2 = 0;
  1413  02AE  110E               	bcf	14,2	;volatile
  1414                           
  1415                           ;user.c: 56: LATCbits.LATC4 = 0;
  1416  02AF  0022               	movlb	2	; select bank2
  1417  02B0  120E               	bcf	14,4	;volatile
  1418                           
  1419                           ;user.c: 57: LATCbits.LATC2 = 0;
  1420  02B1  110E               	bcf	14,2	;volatile
  1421                           
  1422                           ;user.c: 59: OPTION_REGbits.nWPUEN = 0;
  1423  02B2  0021               	movlb	1	; select bank1
  1424  02B3  1395               	bcf	21,7	;volatile
  1425                           
  1426                           ;user.c: 60: WPUAbits.WPUA = 0xFF;
  1427  02B4  303F               	movlw	63
  1428  02B5  0024               	movlb	4	; select bank4
  1429  02B6  048C               	iorwf	12,f	;volatile
  1430                           
  1431                           ;user.c: 61: TRISAbits.TRISA5 = 1;
  1432  02B7  0021               	movlb	1	; select bank1
  1433  02B8  168C               	bsf	12,5	;volatile
  1434                           
  1435                           ;user.c: 62: LATAbits.LATA5 = 0;
  1436  02B9  0022               	movlb	2	; select bank2
  1437  02BA  128C               	bcf	12,5	;volatile
  1438  02BB  0008               	return
  1439  02BC                     __end_of_InitGPIO:	
  1440                           
  1441                           	psect	text3
  1442  027D                     __ptext3:	
  1443 ;; *************** function _InitAddress *****************
  1444 ;; Defined at:
  1445 ;;		line 74 in file "user.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  addr            2    8[COMMON] unsigned int 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;		None               void
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0, pclath, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1
  1459 ;;      Params:         0       0       0
  1460 ;;      Locals:         2       0       0
  1461 ;;      Temps:          2       0       0
  1462 ;;      Totals:         4       0       0
  1463 ;;Total ram usage:        4 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    1
  1466 ;; This function calls:
  1467 ;;		_ReadFlash
  1468 ;; This function is called by:
  1469 ;;		_InitApp
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function _InitAddress
  1475  027D                     _InitAddress:	
  1476                           
  1477                           ;user.c: 76: unsigned int addr;
  1478                           ;user.c: 77: addr = ReadFlash(0x7FF);
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in _InitAddress: [wreg+status,2+status,0+pclath+cstack]
  1482  027D  30FF               	movlw	255
  1483  027E  00F0               	movwf	ReadFlash@address
  1484  027F  3007               	movlw	7
  1485  0280  00F1               	movwf	ReadFlash@address+1
  1486  0281  22BC               	fcall	_ReadFlash
  1487  0282  0871               	movf	?_ReadFlash+1,w
  1488  0283  00F9               	movwf	InitAddress@addr+1
  1489  0284  0870               	movf	?_ReadFlash,w
  1490  0285  00F8               	movwf	InitAddress@addr
  1491                           
  1492                           ;user.c: 78: if ((addr & 0xFF) == 0xFF)
  1493  0286  30FF               	movlw	255
  1494  0287  0578               	andwf	InitAddress@addr,w
  1495  0288  00F6               	movwf	??_InitAddress
  1496  0289  3000               	movlw	0
  1497  028A  0579               	andwf	InitAddress@addr+1,w
  1498  028B  00F7               	movwf	??_InitAddress+1
  1499  028C  0A76               	incf	??_InitAddress,w
  1500  028D  0477               	iorwf	??_InitAddress+1,w
  1501  028E  1D03               	btfss	3,2
  1502  028F  2A96               	goto	l1643
  1503                           
  1504                           ;user.c: 79: ADDRESS = 0x21;
  1505  0290  3021               	movlw	33
  1506  0291  00F6               	movwf	??_InitAddress
  1507  0292  0876               	movf	??_InitAddress,w
  1508  0293  0020               	movlb	0	; select bank0
  1509  0294  00E8               	movwf	_ADDRESS
  1510  0295  0008               	return
  1511  0296                     l1643:	
  1512                           
  1513                           ;user.c: 80: else
  1514                           ;user.c: 81: ADDRESS = addr & 0xFF;
  1515  0296  0878               	movf	InitAddress@addr,w
  1516  0297  00F6               	movwf	??_InitAddress
  1517  0298  0876               	movf	??_InitAddress,w
  1518  0299  0020               	movlb	0	; select bank0
  1519  029A  00E8               	movwf	_ADDRESS
  1520  029B  0008               	return
  1521  029C                     __end_of_InitAddress:	
  1522                           
  1523                           	psect	text4
  1524  02BC                     __ptext4:	
  1525 ;; *************** function _ReadFlash *****************
  1526 ;; Defined at:
  1527 ;;		line 84 in file "user.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  address         2    0[COMMON] unsigned int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  data            2    4[COMMON] unsigned int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    0[COMMON] unsigned int 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1
  1541 ;;      Params:         2       0       0
  1542 ;;      Locals:         2       0       0
  1543 ;;      Temps:          2       0       0
  1544 ;;      Totals:         6       0       0
  1545 ;;Total ram usage:        6 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; This function calls:
  1548 ;;		Nothing
  1549 ;; This function is called by:
  1550 ;;		_InitAddress
  1551 ;; This function uses a non-reentrant model
  1552 ;;
  1553                           
  1554                           
  1555                           ;psect for function _ReadFlash
  1556  02BC                     _ReadFlash:	
  1557                           
  1558                           ;user.c: 86: unsigned int data = 0;
  1559                           
  1560                           ;incstack = 0
  1561                           ; Regs used in _ReadFlash: [wreg+status,2+status,0]
  1562  02BC  01F4               	clrf	ReadFlash@data
  1563  02BD  01F5               	clrf	ReadFlash@data+1
  1564                           
  1565                           ;user.c: 87: PMADRL = address & 0x00FF;
  1566  02BE  0870               	movf	ReadFlash@address,w
  1567  02BF  0023               	movlb	3	; select bank3
  1568  02C0  0091               	movwf	17	;volatile
  1569                           
  1570                           ;user.c: 88: address >>= 8;
  1571  02C1  3008               	movlw	8
  1572  02C2                     u1235:	
  1573  02C2  36F1               	lsrf	ReadFlash@address+1,f
  1574  02C3  0CF0               	rrf	ReadFlash@address,f
  1575  02C4  0B89               	decfsz	9,f
  1576  02C5  2AC2               	goto	u1235
  1577                           
  1578                           ;user.c: 89: PMADRH = address & 0x00FF;
  1579  02C6  0870               	movf	ReadFlash@address,w
  1580  02C7  0092               	movwf	18	;volatile
  1581                           
  1582                           ;user.c: 90: PMCON1bits.CFGS = 0;
  1583  02C8  1315               	bcf	21,6	;volatile
  1584                           
  1585                           ;user.c: 91: PMCON1bits.RD = 1;
  1586  02C9  1415               	bsf	21,0	;volatile
  1587  02CA  0000               	nop	;# 
  1588  02CB  0000               	nop	;# 
  1589                           
  1590                           ;user.c: 95: data = PMDATH;
  1591  02CC  0023               	movlb	3	; select bank3
  1592  02CD  0814               	movf	20,w	;volatile
  1593  02CE  00F2               	movwf	??_ReadFlash
  1594  02CF  01F3               	clrf	??_ReadFlash+1
  1595  02D0  0872               	movf	??_ReadFlash,w
  1596  02D1  00F4               	movwf	ReadFlash@data
  1597  02D2  0873               	movf	??_ReadFlash+1,w
  1598  02D3  00F5               	movwf	ReadFlash@data+1
  1599                           
  1600                           ;user.c: 96: data <<= 8;
  1601  02D4  3008               	movlw	8
  1602  02D5                     u1245:	
  1603  02D5  35F4               	lslf	ReadFlash@data,f
  1604  02D6  0DF5               	rlf	ReadFlash@data+1,f
  1605  02D7  0B89               	decfsz	9,f
  1606  02D8  2AD5               	goto	u1245
  1607                           
  1608                           ;user.c: 97: data |= PMDATL;
  1609  02D9  0813               	movf	19,w	;volatile
  1610  02DA  00F2               	movwf	??_ReadFlash
  1611  02DB  01F3               	clrf	??_ReadFlash+1
  1612  02DC  0872               	movf	??_ReadFlash,w
  1613  02DD  04F4               	iorwf	ReadFlash@data,f
  1614  02DE  0873               	movf	??_ReadFlash+1,w
  1615  02DF  04F5               	iorwf	ReadFlash@data+1,f
  1616                           
  1617                           ;user.c: 98: return data;
  1618  02E0  0875               	movf	ReadFlash@data+1,w
  1619  02E1  00F1               	movwf	?_ReadFlash+1
  1620  02E2  0874               	movf	ReadFlash@data,w
  1621  02E3  00F0               	movwf	?_ReadFlash
  1622  02E4  0008               	return
  1623  02E5                     __end_of_ReadFlash:	
  1624                           
  1625                           	psect	text5
  1626  025A                     __ptext5:	
  1627 ;; *************** function _ConfigureOscillator *****************
  1628 ;; Defined at:
  1629 ;;		line 10 in file "system.c"
  1630 ;; Parameters:    Size  Location     Type
  1631 ;;		None
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;		None
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMMON   BANK0   BANK1
  1643 ;;      Params:         0       0       0
  1644 ;;      Locals:         0       0       0
  1645 ;;      Temps:          0       0       0
  1646 ;;      Totals:         0       0       0
  1647 ;;Total ram usage:        0 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_main
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           
  1657                           ;psect for function _ConfigureOscillator
  1658  025A                     _ConfigureOscillator:	
  1659                           
  1660                           ;system.c: 12: OSCCONbits.IRCF = 0b1111;
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  1664  025A  3078               	movlw	120
  1665  025B  0021               	movlb	1	; select bank1
  1666  025C  0499               	iorwf	25,f	;volatile
  1667                           
  1668                           ;system.c: 13: OSCCONbits.SCS = 0b11;
  1669  025D  3003               	movlw	3
  1670  025E  0499               	iorwf	25,f	;volatile
  1671  025F                     l23:	
  1672                           ;system.c: 15: while(!OSCSTATbits.HFIOFR);
  1673                           
  1674  025F  1A1A               	btfsc	26,4	;volatile
  1675  0260  0008               	return
  1676  0261  2A5F               	goto	l23
  1677  0262                     __end_of_ConfigureOscillator:	
  1678                           
  1679                           	psect	text6
  1680  0262                     __ptext6:	
  1681 ;; *************** function _CleanKeeperInit *****************
  1682 ;; Defined at:
  1683 ;;		line 26 in file "cleankeeper.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;		None               void
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1
  1697 ;;      Params:         0       0       0
  1698 ;;      Locals:         0       0       0
  1699 ;;      Temps:          0       0       0
  1700 ;;      Totals:         0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    3
  1704 ;; This function calls:
  1705 ;;		_PulseOut
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _CleanKeeperInit
  1713  0262                     _CleanKeeperInit:	
  1714                           
  1715                           ;cleankeeper.c: 29: LATAbits.LATA4 = 1;
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _CleanKeeperInit: [wreg+status,2+status,0+pclath+cstack]
  1719  0262  0022               	movlb	2	; select bank2
  1720  0263  160C               	bsf	12,4	;volatile
  1721                           
  1722                           ;cleankeeper.c: 32: PulseOut(850);
  1723  0264  3052               	movlw	82
  1724  0265  0020               	movlb	0	; select bank0
  1725  0266  00DB               	movwf	PulseOut@iFreq
  1726  0267  3003               	movlw	3
  1727  0268  00DC               	movwf	PulseOut@iFreq+1
  1728  0269  2402               	fcall	_PulseOut
  1729  026A  0008               	return
  1730  026B                     __end_of_CleanKeeperInit:	
  1731                           
  1732                           	psect	text7
  1733  0402                     __ptext7:	
  1734 ;; *************** function _PulseOut *****************
  1735 ;; Defined at:
  1736 ;;		line 398 in file "user.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  iFreq           2   59[BANK0 ] unsigned int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  iLimitedFreq    2   12[COMMON] unsigned int 
  1741 ;;  iPR2            2    0        unsigned int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;		None               void
  1744 ;; Registers used:
  1745 ;;		wreg, status,2, status,0, pclath, cstack
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1
  1751 ;;      Params:         0       2       0
  1752 ;;      Locals:         2       0       0
  1753 ;;      Temps:          0       0       0
  1754 ;;      Totals:         2       2       0
  1755 ;;Total ram usage:        4 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    2
  1758 ;; This function calls:
  1759 ;;		_LimitFreq
  1760 ;;		_SetPWMDutyCycle
  1761 ;;		___ftadd
  1762 ;;		___ftdiv
  1763 ;;		___ftmul
  1764 ;;		___fttol
  1765 ;;		___lwtoft
  1766 ;; This function is called by:
  1767 ;;		_CleanKeeperInit
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _PulseOut
  1773  0402                     _PulseOut:	
  1774                           
  1775                           ;user.c: 400: unsigned int iPR2;
  1776                           ;user.c: 401: unsigned int iLimitedFreq;
  1777                           ;user.c: 403: iLimitedFreq = LimitFreq(iFreq);
  1778                           
  1779                           ;incstack = 0
  1780                           ; Regs used in _PulseOut: [wreg+status,2+status,0+pclath+cstack]
  1781  0402  0020               	movlb	0	; select bank0
  1782  0403  085C               	movf	PulseOut@iFreq+1,w
  1783  0404  00F1               	movwf	LimitFreq@iFreq+1
  1784  0405  085B               	movf	PulseOut@iFreq,w
  1785  0406  00F0               	movwf	LimitFreq@iFreq
  1786  0407  22E5               	fcall	_LimitFreq
  1787  0408  0871               	movf	?_LimitFreq+1,w
  1788  0409  00FD               	movwf	PulseOut@iLimitedFreq+1
  1789  040A  0870               	movf	?_LimitFreq,w
  1790  040B  00FC               	movwf	PulseOut@iLimitedFreq
  1791                           
  1792                           ;user.c: 405: TRISC = 0b11100111;
  1793  040C  30E7               	movlw	231
  1794  040D  0021               	movlb	1	; select bank1
  1795  040E  008E               	movwf	14	;volatile
  1796                           
  1797                           ;user.c: 406: TRISCbits.TRISC3 = 0;
  1798  040F  118E               	bcf	14,3	;volatile
  1799                           
  1800                           ;user.c: 407: PWM2CON = 0xC0;
  1801  0410  30C0               	movlw	192
  1802  0411  002C               	movlb	12	; select bank12
  1803  0412  0096               	movwf	22	;volatile
  1804                           
  1805                           ;user.c: 408: PIR2 = 0x00;
  1806  0413  0020               	movlb	0	; select bank0
  1807  0414  0192               	clrf	18	;volatile
  1808                           
  1809                           ;user.c: 409: SetPWMDutyCycle(64);
  1810  0415  3040               	movlw	64
  1811  0416  00F0               	movwf	SetPWMDutyCycle@DutyCycle
  1812  0417  3000               	movlw	0
  1813  0418  00F1               	movwf	SetPWMDutyCycle@DutyCycle+1
  1814  0419  2250               	fcall	_SetPWMDutyCycle
  1815                           
  1816                           ;user.c: 412: if (iLimitedFreq<=920)
  1817  041A  3003               	movlw	3
  1818  041B  027D               	subwf	PulseOut@iLimitedFreq+1,w
  1819  041C  3099               	movlw	153
  1820  041D  1903               	skipnz
  1821  041E  027C               	subwf	PulseOut@iLimitedFreq,w
  1822  041F  1803               	skipnc
  1823  0420  2C5F               	goto	l1667
  1824                           
  1825                           ;user.c: 413: {
  1826                           ;user.c: 414: PR2 = (1/(iLimitedFreq*0.000016)-1);
  1827  0421  3000               	movlw	0
  1828  0422  0020               	movlb	0	; select bank0
  1829  0423  00B3               	movwf	___ftdiv@f1
  1830  0424  3080               	movlw	128
  1831  0425  00B4               	movwf	___ftdiv@f1+1
  1832  0426  303F               	movlw	63
  1833  0427  00B5               	movwf	___ftdiv@f1+2
  1834  0428  087D               	movf	PulseOut@iLimitedFreq+1,w
  1835  0429  00F9               	movwf	___lwtoft@c+1
  1836  042A  087C               	movf	PulseOut@iLimitedFreq,w
  1837  042B  00F8               	movwf	___lwtoft@c
  1838  042C  226B               	fcall	___lwtoft
  1839  042D  0878               	movf	?___lwtoft,w
  1840  042E  0020               	movlb	0	; select bank0
  1841  042F  00A3               	movwf	___ftmul@f2
  1842  0430  0879               	movf	?___lwtoft+1,w
  1843  0431  00A4               	movwf	___ftmul@f2+1
  1844  0432  087A               	movf	?___lwtoft+2,w
  1845  0433  00A5               	movwf	___ftmul@f2+2
  1846  0434  3038               	movlw	56
  1847  0435  00A0               	movwf	___ftmul@f1
  1848  0436  3086               	movlw	134
  1849  0437  00A1               	movwf	___ftmul@f1+1
  1850  0438  3037               	movlw	55
  1851  0439  00A2               	movwf	___ftmul@f1+2
  1852  043A  2545               	fcall	___ftmul
  1853  043B  0020               	movlb	0	; select bank0
  1854  043C  0820               	movf	?___ftmul,w
  1855  043D  00B0               	movwf	___ftdiv@f2
  1856  043E  0821               	movf	?___ftmul+1,w
  1857  043F  00B1               	movwf	___ftdiv@f2+1
  1858  0440  0822               	movf	?___ftmul+2,w
  1859  0441  00B2               	movwf	___ftdiv@f2+2
  1860  0442  249D               	fcall	___ftdiv
  1861  0443  0020               	movlb	0	; select bank0
  1862  0444  0830               	movf	?___ftdiv,w
  1863  0445  00C3               	movwf	___ftadd@f2
  1864  0446  0831               	movf	?___ftdiv+1,w
  1865  0447  00C4               	movwf	___ftadd@f2+1
  1866  0448  0832               	movf	?___ftdiv+2,w
  1867  0449  00C5               	movwf	___ftadd@f2+2
  1868  044A  3000               	movlw	0
  1869  044B  00C0               	movwf	___ftadd@f1
  1870  044C  3080               	movlw	128
  1871  044D  00C1               	movwf	___ftadd@f1+1
  1872  044E  30BF               	movlw	191
  1873  044F  00C2               	movwf	___ftadd@f1+2
  1874  0450  25F8               	fcall	___ftadd
  1875  0451  0020               	movlb	0	; select bank0
  1876  0452  0840               	movf	?___ftadd,w
  1877  0453  00CD               	movwf	___fttol@f1
  1878  0454  0841               	movf	?___ftadd+1,w
  1879  0455  00CE               	movwf	___fttol@f1+1
  1880  0456  0842               	movf	?___ftadd+2,w
  1881  0457  00CF               	movwf	___fttol@f1+2
  1882  0458  237B               	fcall	___fttol
  1883  0459  0020               	movlb	0	; select bank0
  1884  045A  084D               	movf	?___fttol,w
  1885  045B  009B               	movwf	27	;volatile
  1886                           
  1887                           ;user.c: 415: T2CON = 0x07;
  1888  045C  3007               	movlw	7
  1889  045D  009C               	movwf	28	;volatile
  1890                           
  1891                           ;user.c: 416: }
  1892  045E  0008               	return
  1893  045F                     l1667:	
  1894                           
  1895                           ;user.c: 417: else
  1896                           ;user.c: 418: {
  1897                           ;user.c: 419: PR2 = (1/(iLimitedFreq*0.000004)-1);
  1898  045F  3000               	movlw	0
  1899  0460  0020               	movlb	0	; select bank0
  1900  0461  00B3               	movwf	___ftdiv@f1
  1901  0462  3080               	movlw	128
  1902  0463  00B4               	movwf	___ftdiv@f1+1
  1903  0464  303F               	movlw	63
  1904  0465  00B5               	movwf	___ftdiv@f1+2
  1905  0466  087D               	movf	PulseOut@iLimitedFreq+1,w
  1906  0467  00F9               	movwf	___lwtoft@c+1
  1907  0468  087C               	movf	PulseOut@iLimitedFreq,w
  1908  0469  00F8               	movwf	___lwtoft@c
  1909  046A  226B               	fcall	___lwtoft
  1910  046B  0878               	movf	?___lwtoft,w
  1911  046C  0020               	movlb	0	; select bank0
  1912  046D  00A3               	movwf	___ftmul@f2
  1913  046E  0879               	movf	?___lwtoft+1,w
  1914  046F  00A4               	movwf	___ftmul@f2+1
  1915  0470  087A               	movf	?___lwtoft+2,w
  1916  0471  00A5               	movwf	___ftmul@f2+2
  1917  0472  3038               	movlw	56
  1918  0473  00A0               	movwf	___ftmul@f1
  1919  0474  3086               	movlw	134
  1920  0475  00A1               	movwf	___ftmul@f1+1
  1921  0476  3036               	movlw	54
  1922  0477  00A2               	movwf	___ftmul@f1+2
  1923  0478  2545               	fcall	___ftmul
  1924  0479  0020               	movlb	0	; select bank0
  1925  047A  0820               	movf	?___ftmul,w
  1926  047B  00B0               	movwf	___ftdiv@f2
  1927  047C  0821               	movf	?___ftmul+1,w
  1928  047D  00B1               	movwf	___ftdiv@f2+1
  1929  047E  0822               	movf	?___ftmul+2,w
  1930  047F  00B2               	movwf	___ftdiv@f2+2
  1931  0480  249D               	fcall	___ftdiv
  1932  0481  0020               	movlb	0	; select bank0
  1933  0482  0830               	movf	?___ftdiv,w
  1934  0483  00C3               	movwf	___ftadd@f2
  1935  0484  0831               	movf	?___ftdiv+1,w
  1936  0485  00C4               	movwf	___ftadd@f2+1
  1937  0486  0832               	movf	?___ftdiv+2,w
  1938  0487  00C5               	movwf	___ftadd@f2+2
  1939  0488  3000               	movlw	0
  1940  0489  00C0               	movwf	___ftadd@f1
  1941  048A  3080               	movlw	128
  1942  048B  00C1               	movwf	___ftadd@f1+1
  1943  048C  30BF               	movlw	191
  1944  048D  00C2               	movwf	___ftadd@f1+2
  1945  048E  25F8               	fcall	___ftadd
  1946  048F  0020               	movlb	0	; select bank0
  1947  0490  0840               	movf	?___ftadd,w
  1948  0491  00CD               	movwf	___fttol@f1
  1949  0492  0841               	movf	?___ftadd+1,w
  1950  0493  00CE               	movwf	___fttol@f1+1
  1951  0494  0842               	movf	?___ftadd+2,w
  1952  0495  00CF               	movwf	___fttol@f1+2
  1953  0496  237B               	fcall	___fttol
  1954  0497  0020               	movlb	0	; select bank0
  1955  0498  084D               	movf	?___fttol,w
  1956  0499  009B               	movwf	27	;volatile
  1957                           
  1958                           ;user.c: 420: T2CON = 0x06;
  1959  049A  3006               	movlw	6
  1960  049B  009C               	movwf	28	;volatile
  1961  049C  0008               	return
  1962  049D                     __end_of_PulseOut:	
  1963                           
  1964                           	psect	text8
  1965  026B                     __ptext8:	
  1966 ;; *************** function ___lwtoft *****************
  1967 ;; Defined at:
  1968 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  c               2    8[COMMON] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  3    8[COMMON] float 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, pclath, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1
  1982 ;;      Params:         3       0       0
  1983 ;;      Locals:         0       0       0
  1984 ;;      Temps:          1       0       0
  1985 ;;      Totals:         4       0       0
  1986 ;;Total ram usage:        4 bytes
  1987 ;; Hardware stack levels used:    1
  1988 ;; Hardware stack levels required when called:    1
  1989 ;; This function calls:
  1990 ;;		___ftpack
  1991 ;; This function is called by:
  1992 ;;		_PulseOut
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           
  1997                           ;psect for function ___lwtoft
  1998  026B                     ___lwtoft:	
  1999                           
  2000                           ;incstack = 0
  2001                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2002  026B  0878               	movf	___lwtoft@c,w
  2003  026C  00F0               	movwf	___ftpack@arg
  2004  026D  0879               	movf	___lwtoft@c+1,w
  2005  026E  00F1               	movwf	___ftpack@arg+1
  2006  026F  01F2               	clrf	___ftpack@arg+2
  2007  0270  308E               	movlw	142
  2008  0271  00FB               	movwf	??___lwtoft
  2009  0272  087B               	movf	??___lwtoft,w
  2010  0273  00F3               	movwf	___ftpack@exp
  2011  0274  01F4               	clrf	___ftpack@sign
  2012  0275  2317               	fcall	___ftpack
  2013  0276  0870               	movf	?___ftpack,w
  2014  0277  00F8               	movwf	?___lwtoft
  2015  0278  0871               	movf	?___ftpack+1,w
  2016  0279  00F9               	movwf	?___lwtoft+1
  2017  027A  0872               	movf	?___ftpack+2,w
  2018  027B  00FA               	movwf	?___lwtoft+2
  2019  027C  0008               	return
  2020  027D                     __end_of___lwtoft:	
  2021                           
  2022                           	psect	text9
  2023  037B                     __ptext9:	
  2024 ;; *************** function ___fttol *****************
  2025 ;; Defined at:
  2026 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  f1              3   45[BANK0 ] float 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  lval            4   54[BANK0 ] unsigned long 
  2031 ;;  exp1            1   58[BANK0 ] unsigned char 
  2032 ;;  sign1           1   53[BANK0 ] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  4   45[BANK0 ] long 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMMON   BANK0   BANK1
  2042 ;;      Params:         0       4       0
  2043 ;;      Locals:         0       6       0
  2044 ;;      Temps:          0       4       0
  2045 ;;      Totals:         0      14       0
  2046 ;;Total ram usage:       14 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_PulseOut
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function ___fttol
  2057  037B                     ___fttol:	
  2058                           
  2059                           ;incstack = 0
  2060                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2061  037B  0020               	movlb	0	; select bank0
  2062  037C  084D               	movf	___fttol@f1,w
  2063  037D  00D1               	movwf	??___fttol
  2064  037E  084E               	movf	___fttol@f1+1,w
  2065  037F  00D2               	movwf	??___fttol+1
  2066  0380  084F               	movf	___fttol@f1+2,w
  2067  0381  00D3               	movwf	??___fttol+2
  2068  0382  1003               	clrc
  2069  0383  0D52               	rlf	??___fttol+1,w
  2070  0384  0D53               	rlf	??___fttol+2,w
  2071  0385  00D4               	movwf	??___fttol+3
  2072  0386  0854               	movf	??___fttol+3,w
  2073  0387  00DA               	movwf	___fttol@exp1
  2074  0388  085A               	movf	___fttol@exp1,w
  2075  0389  1D03               	btfss	3,2
  2076  038A  2B94               	goto	l1597
  2077  038B  3000               	movlw	0
  2078  038C  00D0               	movwf	?___fttol+3
  2079  038D  3000               	movlw	0
  2080  038E  00CF               	movwf	?___fttol+2
  2081  038F  3000               	movlw	0
  2082  0390  00CE               	movwf	?___fttol+1
  2083  0391  3000               	movlw	0
  2084  0392  00CD               	movwf	?___fttol
  2085  0393  0008               	return
  2086  0394                     l1597:	
  2087  0394  084D               	movf	___fttol@f1,w
  2088  0395  00D1               	movwf	??___fttol
  2089  0396  084E               	movf	___fttol@f1+1,w
  2090  0397  00D2               	movwf	??___fttol+1
  2091  0398  084F               	movf	___fttol@f1+2,w
  2092  0399  00D3               	movwf	??___fttol+2
  2093  039A  3017               	movlw	23
  2094  039B                     u1735:	
  2095  039B  36D3               	lsrf	??___fttol+2,f
  2096  039C  0CD2               	rrf	??___fttol+1,f
  2097  039D  0CD1               	rrf	??___fttol,f
  2098  039E  0B89               	decfsz	9,f
  2099  039F  2B9B               	goto	u1735
  2100  03A0  0851               	movf	??___fttol,w
  2101  03A1  00D4               	movwf	??___fttol+3
  2102  03A2  0854               	movf	??___fttol+3,w
  2103  03A3  00D5               	movwf	___fttol@sign1
  2104  03A4  17CE               	bsf	___fttol@f1+1,7
  2105  03A5  30FF               	movlw	255
  2106  03A6  05CD               	andwf	___fttol@f1,f
  2107  03A7  30FF               	movlw	255
  2108  03A8  05CE               	andwf	___fttol@f1+1,f
  2109  03A9  3000               	movlw	0
  2110  03AA  05CF               	andwf	___fttol@f1+2,f
  2111  03AB  084D               	movf	___fttol@f1,w
  2112  03AC  00D6               	movwf	___fttol@lval
  2113  03AD  084E               	movf	___fttol@f1+1,w
  2114  03AE  00D7               	movwf	___fttol@lval+1
  2115  03AF  084F               	movf	___fttol@f1+2,w
  2116  03B0  00D8               	movwf	___fttol@lval+2
  2117  03B1  01D9               	clrf	___fttol@lval+3
  2118  03B2  308E               	movlw	142
  2119  03B3  02DA               	subwf	___fttol@exp1,f
  2120  03B4  1FDA               	btfss	___fttol@exp1,7
  2121  03B5  2BD2               	goto	l1617
  2122  03B6  085A               	movf	___fttol@exp1,w
  2123  03B7  3A80               	xorlw	128
  2124  03B8  3E8F               	addlw	143
  2125  03B9  1803               	skipnc
  2126  03BA  2BC4               	goto	l1615
  2127  03BB  3000               	movlw	0
  2128  03BC  00D0               	movwf	?___fttol+3
  2129  03BD  3000               	movlw	0
  2130  03BE  00CF               	movwf	?___fttol+2
  2131  03BF  3000               	movlw	0
  2132  03C0  00CE               	movwf	?___fttol+1
  2133  03C1  3000               	movlw	0
  2134  03C2  00CD               	movwf	?___fttol
  2135  03C3  0008               	return
  2136  03C4                     l1615:	
  2137  03C4  3001               	movlw	1
  2138  03C5                     u1765:	
  2139  03C5  36D9               	lsrf	___fttol@lval+3,f
  2140  03C6  0CD8               	rrf	___fttol@lval+2,f
  2141  03C7  0CD7               	rrf	___fttol@lval+1,f
  2142  03C8  0CD6               	rrf	___fttol@lval,f
  2143  03C9  0B89               	decfsz	9,f
  2144  03CA  2BC5               	goto	u1765
  2145  03CB  3001               	movlw	1
  2146  03CC  00D1               	movwf	??___fttol
  2147  03CD  0851               	movf	??___fttol,w
  2148  03CE  07DA               	addwf	___fttol@exp1,f
  2149  03CF  1903               	btfsc	3,2
  2150  03D0  2BEB               	goto	l1625
  2151  03D1  2BC4               	goto	l1615
  2152  03D2                     l1617:	
  2153  03D2  3018               	movlw	24
  2154  03D3  025A               	subwf	___fttol@exp1,w
  2155  03D4  1C03               	skipc
  2156  03D5  2BE8               	goto	l529
  2157  03D6  3000               	movlw	0
  2158  03D7  00D0               	movwf	?___fttol+3
  2159  03D8  3000               	movlw	0
  2160  03D9  00CF               	movwf	?___fttol+2
  2161  03DA  3000               	movlw	0
  2162  03DB  00CE               	movwf	?___fttol+1
  2163  03DC  3000               	movlw	0
  2164  03DD  00CD               	movwf	?___fttol
  2165  03DE  0008               	return
  2166  03DF                     l1623:	
  2167  03DF  3001               	movlw	1
  2168  03E0                     u1795:	
  2169  03E0  35D6               	lslf	___fttol@lval,f
  2170  03E1  0DD7               	rlf	___fttol@lval+1,f
  2171  03E2  0DD8               	rlf	___fttol@lval+2,f
  2172  03E3  0DD9               	rlf	___fttol@lval+3,f
  2173  03E4  0B89               	decfsz	9,f
  2174  03E5  2BE0               	goto	u1795
  2175  03E6  3001               	movlw	1
  2176  03E7  02DA               	subwf	___fttol@exp1,f
  2177  03E8                     l529:	
  2178  03E8  085A               	movf	___fttol@exp1,w
  2179  03E9  1D03               	btfss	3,2
  2180  03EA  2BDF               	goto	l1623
  2181  03EB                     l1625:	
  2182  03EB  0855               	movf	___fttol@sign1,w
  2183  03EC  1903               	btfsc	3,2
  2184  03ED  2BF9               	goto	l1629
  2185  03EE  09D6               	comf	___fttol@lval,f
  2186  03EF  09D7               	comf	___fttol@lval+1,f
  2187  03F0  09D8               	comf	___fttol@lval+2,f
  2188  03F1  09D9               	comf	___fttol@lval+3,f
  2189  03F2  0AD6               	incf	___fttol@lval,f
  2190  03F3  1903               	skipnz
  2191  03F4  0AD7               	incf	___fttol@lval+1,f
  2192  03F5  1903               	skipnz
  2193  03F6  0AD8               	incf	___fttol@lval+2,f
  2194  03F7  1903               	skipnz
  2195  03F8  0AD9               	incf	___fttol@lval+3,f
  2196  03F9                     l1629:	
  2197  03F9  0859               	movf	___fttol@lval+3,w
  2198  03FA  00D0               	movwf	?___fttol+3
  2199  03FB  0858               	movf	___fttol@lval+2,w
  2200  03FC  00CF               	movwf	?___fttol+2
  2201  03FD  0857               	movf	___fttol@lval+1,w
  2202  03FE  00CE               	movwf	?___fttol+1
  2203  03FF  0856               	movf	___fttol@lval,w
  2204  0400  00CD               	movwf	?___fttol
  2205  0401  0008               	return
  2206  0402                     __end_of___fttol:	
  2207                           
  2208                           	psect	text10
  2209  0545                     __ptext10:	
  2210 ;; *************** function ___ftmul *****************
  2211 ;; Defined at:
  2212 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  f1              3    0[BANK0 ] float 
  2215 ;;  f2              3    3[BANK0 ] float 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2218 ;;  sign            1   15[BANK0 ] unsigned char 
  2219 ;;  cntr            1   14[BANK0 ] unsigned char 
  2220 ;;  exp             1   10[BANK0 ] unsigned char 
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  3    0[BANK0 ] float 
  2223 ;; Registers used:
  2224 ;;		wreg, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1
  2230 ;;      Params:         0       6       0
  2231 ;;      Locals:         0       6       0
  2232 ;;      Temps:          0       4       0
  2233 ;;      Totals:         0      16       0
  2234 ;;Total ram usage:       16 bytes
  2235 ;; Hardware stack levels used:    1
  2236 ;; Hardware stack levels required when called:    1
  2237 ;; This function calls:
  2238 ;;		___ftpack
  2239 ;; This function is called by:
  2240 ;;		_PulseOut
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function ___ftmul
  2246  0545                     ___ftmul:	
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2250  0545  0020               	movlb	0	; select bank0
  2251  0546  0820               	movf	___ftmul@f1,w
  2252  0547  00A6               	movwf	??___ftmul
  2253  0548  0821               	movf	___ftmul@f1+1,w
  2254  0549  00A7               	movwf	??___ftmul+1
  2255  054A  0822               	movf	___ftmul@f1+2,w
  2256  054B  00A8               	movwf	??___ftmul+2
  2257  054C  1003               	clrc
  2258  054D  0D27               	rlf	??___ftmul+1,w
  2259  054E  0D28               	rlf	??___ftmul+2,w
  2260  054F  00A9               	movwf	??___ftmul+3
  2261  0550  0829               	movf	??___ftmul+3,w
  2262  0551  00AA               	movwf	___ftmul@exp
  2263  0552  082A               	movf	___ftmul@exp,w
  2264  0553  1D03               	btfss	3,2
  2265  0554  2D5C               	goto	l1547
  2266  0555  3000               	movlw	0
  2267  0556  00A0               	movwf	?___ftmul
  2268  0557  3000               	movlw	0
  2269  0558  00A1               	movwf	?___ftmul+1
  2270  0559  3000               	movlw	0
  2271  055A  00A2               	movwf	?___ftmul+2
  2272  055B  0008               	return
  2273  055C                     l1547:	
  2274  055C  0823               	movf	___ftmul@f2,w
  2275  055D  00A6               	movwf	??___ftmul
  2276  055E  0824               	movf	___ftmul@f2+1,w
  2277  055F  00A7               	movwf	??___ftmul+1
  2278  0560  0825               	movf	___ftmul@f2+2,w
  2279  0561  00A8               	movwf	??___ftmul+2
  2280  0562  1003               	clrc
  2281  0563  0D27               	rlf	??___ftmul+1,w
  2282  0564  0D28               	rlf	??___ftmul+2,w
  2283  0565  00A9               	movwf	??___ftmul+3
  2284  0566  0829               	movf	??___ftmul+3,w
  2285  0567  00AF               	movwf	___ftmul@sign
  2286  0568  082F               	movf	___ftmul@sign,w
  2287  0569  1D03               	btfss	3,2
  2288  056A  2D72               	goto	l1553
  2289  056B  3000               	movlw	0
  2290  056C  00A0               	movwf	?___ftmul
  2291  056D  3000               	movlw	0
  2292  056E  00A1               	movwf	?___ftmul+1
  2293  056F  3000               	movlw	0
  2294  0570  00A2               	movwf	?___ftmul+2
  2295  0571  0008               	return
  2296  0572                     l1553:	
  2297  0572  082F               	movf	___ftmul@sign,w
  2298  0573  3E7B               	addlw	123
  2299  0574  00A6               	movwf	??___ftmul
  2300  0575  0826               	movf	??___ftmul,w
  2301  0576  07AA               	addwf	___ftmul@exp,f
  2302  0577  0820               	movf	___ftmul@f1,w
  2303  0578  00A6               	movwf	??___ftmul
  2304  0579  0821               	movf	___ftmul@f1+1,w
  2305  057A  00A7               	movwf	??___ftmul+1
  2306  057B  0822               	movf	___ftmul@f1+2,w
  2307  057C  00A8               	movwf	??___ftmul+2
  2308  057D  3010               	movlw	16
  2309  057E                     u1625:	
  2310  057E  36A8               	lsrf	??___ftmul+2,f
  2311  057F  0CA7               	rrf	??___ftmul+1,f
  2312  0580  0CA6               	rrf	??___ftmul,f
  2313  0581  0B89               	decfsz	9,f
  2314  0582  2D7E               	goto	u1625
  2315  0583  0826               	movf	??___ftmul,w
  2316  0584  00A9               	movwf	??___ftmul+3
  2317  0585  0829               	movf	??___ftmul+3,w
  2318  0586  00AF               	movwf	___ftmul@sign
  2319  0587  0823               	movf	___ftmul@f2,w
  2320  0588  00A6               	movwf	??___ftmul
  2321  0589  0824               	movf	___ftmul@f2+1,w
  2322  058A  00A7               	movwf	??___ftmul+1
  2323  058B  0825               	movf	___ftmul@f2+2,w
  2324  058C  00A8               	movwf	??___ftmul+2
  2325  058D  3010               	movlw	16
  2326  058E                     u1635:	
  2327  058E  36A8               	lsrf	??___ftmul+2,f
  2328  058F  0CA7               	rrf	??___ftmul+1,f
  2329  0590  0CA6               	rrf	??___ftmul,f
  2330  0591  0B89               	decfsz	9,f
  2331  0592  2D8E               	goto	u1635
  2332  0593  0826               	movf	??___ftmul,w
  2333  0594  00A9               	movwf	??___ftmul+3
  2334  0595  0829               	movf	??___ftmul+3,w
  2335  0596  06AF               	xorwf	___ftmul@sign,f
  2336  0597  3080               	movlw	128
  2337  0598  00A6               	movwf	??___ftmul
  2338  0599  0826               	movf	??___ftmul,w
  2339  059A  05AF               	andwf	___ftmul@sign,f
  2340  059B  17A1               	bsf	___ftmul@f1+1,7
  2341  059C  17A4               	bsf	___ftmul@f2+1,7
  2342  059D  30FF               	movlw	255
  2343  059E  05A3               	andwf	___ftmul@f2,f
  2344  059F  30FF               	movlw	255
  2345  05A0  05A4               	andwf	___ftmul@f2+1,f
  2346  05A1  3000               	movlw	0
  2347  05A2  05A5               	andwf	___ftmul@f2+2,f
  2348  05A3  3000               	movlw	0
  2349  05A4  00AB               	movwf	___ftmul@f3_as_product
  2350  05A5  3000               	movlw	0
  2351  05A6  00AC               	movwf	___ftmul@f3_as_product+1
  2352  05A7  3000               	movlw	0
  2353  05A8  00AD               	movwf	___ftmul@f3_as_product+2
  2354  05A9  3007               	movlw	7
  2355  05AA  00A6               	movwf	??___ftmul
  2356  05AB  0826               	movf	??___ftmul,w
  2357  05AC  00AE               	movwf	___ftmul@cntr
  2358  05AD                     l1565:	
  2359  05AD  1C20               	btfss	___ftmul@f1,0
  2360  05AE  2DB5               	goto	l1569
  2361  05AF  0823               	movf	___ftmul@f2,w
  2362  05B0  07AB               	addwf	___ftmul@f3_as_product,f
  2363  05B1  0824               	movf	___ftmul@f2+1,w
  2364  05B2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2365  05B3  0825               	movf	___ftmul@f2+2,w
  2366  05B4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2367  05B5                     l1569:	
  2368  05B5  3001               	movlw	1
  2369  05B6                     u1655:	
  2370  05B6  36A2               	lsrf	___ftmul@f1+2,f
  2371  05B7  0CA1               	rrf	___ftmul@f1+1,f
  2372  05B8  0CA0               	rrf	___ftmul@f1,f
  2373  05B9  0B89               	decfsz	9,f
  2374  05BA  2DB6               	goto	u1655
  2375  05BB  3001               	movlw	1
  2376  05BC                     u1665:	
  2377  05BC  35A3               	lslf	___ftmul@f2,f
  2378  05BD  0DA4               	rlf	___ftmul@f2+1,f
  2379  05BE  0DA5               	rlf	___ftmul@f2+2,f
  2380  05BF  0B89               	decfsz	9,f
  2381  05C0  2DBC               	goto	u1665
  2382  05C1  3001               	movlw	1
  2383  05C2  02AE               	subwf	___ftmul@cntr,f
  2384  05C3  1D03               	btfss	3,2
  2385  05C4  2DAD               	goto	l1565
  2386  05C5  3009               	movlw	9
  2387  05C6  00A6               	movwf	??___ftmul
  2388  05C7  0826               	movf	??___ftmul,w
  2389  05C8  00AE               	movwf	___ftmul@cntr
  2390  05C9                     l1577:	
  2391  05C9  1C20               	btfss	___ftmul@f1,0
  2392  05CA  2DD1               	goto	l1581
  2393  05CB  0823               	movf	___ftmul@f2,w
  2394  05CC  07AB               	addwf	___ftmul@f3_as_product,f
  2395  05CD  0824               	movf	___ftmul@f2+1,w
  2396  05CE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2397  05CF  0825               	movf	___ftmul@f2+2,w
  2398  05D0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2399  05D1                     l1581:	
  2400  05D1  3001               	movlw	1
  2401  05D2                     u1695:	
  2402  05D2  36A2               	lsrf	___ftmul@f1+2,f
  2403  05D3  0CA1               	rrf	___ftmul@f1+1,f
  2404  05D4  0CA0               	rrf	___ftmul@f1,f
  2405  05D5  0B89               	decfsz	9,f
  2406  05D6  2DD2               	goto	u1695
  2407  05D7  3001               	movlw	1
  2408  05D8                     u1705:	
  2409  05D8  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2410  05D9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2411  05DA  0CAB               	rrf	___ftmul@f3_as_product,f
  2412  05DB  0B89               	decfsz	9,f
  2413  05DC  2DD8               	goto	u1705
  2414  05DD  3001               	movlw	1
  2415  05DE  02AE               	subwf	___ftmul@cntr,f
  2416  05DF  1D03               	btfss	3,2
  2417  05E0  2DC9               	goto	l1577
  2418  05E1  082B               	movf	___ftmul@f3_as_product,w
  2419  05E2  00F0               	movwf	___ftpack@arg
  2420  05E3  082C               	movf	___ftmul@f3_as_product+1,w
  2421  05E4  00F1               	movwf	___ftpack@arg+1
  2422  05E5  082D               	movf	___ftmul@f3_as_product+2,w
  2423  05E6  00F2               	movwf	___ftpack@arg+2
  2424  05E7  082A               	movf	___ftmul@exp,w
  2425  05E8  00A6               	movwf	??___ftmul
  2426  05E9  0826               	movf	??___ftmul,w
  2427  05EA  00F3               	movwf	___ftpack@exp
  2428  05EB  082F               	movf	___ftmul@sign,w
  2429  05EC  00A7               	movwf	??___ftmul+1
  2430  05ED  0827               	movf	??___ftmul+1,w
  2431  05EE  00F4               	movwf	___ftpack@sign
  2432  05EF  2317               	fcall	___ftpack
  2433  05F0  0870               	movf	?___ftpack,w
  2434  05F1  0020               	movlb	0	; select bank0
  2435  05F2  00A0               	movwf	?___ftmul
  2436  05F3  0871               	movf	?___ftpack+1,w
  2437  05F4  00A1               	movwf	?___ftmul+1
  2438  05F5  0872               	movf	?___ftpack+2,w
  2439  05F6  00A2               	movwf	?___ftmul+2
  2440  05F7  0008               	return
  2441  05F8                     __end_of___ftmul:	
  2442                           
  2443                           	psect	text11
  2444  049D                     __ptext11:	
  2445 ;; *************** function ___ftdiv *****************
  2446 ;; Defined at:
  2447 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  f2              3   16[BANK0 ] float 
  2450 ;;  f1              3   19[BANK0 ] float 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  f3              3   27[BANK0 ] float 
  2453 ;;  sign            1   31[BANK0 ] unsigned char 
  2454 ;;  exp             1   30[BANK0 ] unsigned char 
  2455 ;;  cntr            1   26[BANK0 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  3   16[BANK0 ] float 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1
  2465 ;;      Params:         0       6       0
  2466 ;;      Locals:         0       6       0
  2467 ;;      Temps:          0       4       0
  2468 ;;      Totals:         0      16       0
  2469 ;;Total ram usage:       16 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    1
  2472 ;; This function calls:
  2473 ;;		___ftpack
  2474 ;; This function is called by:
  2475 ;;		_PulseOut
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function ___ftdiv
  2481  049D                     ___ftdiv:	
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2485  049D  0020               	movlb	0	; select bank0
  2486  049E  0833               	movf	___ftdiv@f1,w
  2487  049F  00B6               	movwf	??___ftdiv
  2488  04A0  0834               	movf	___ftdiv@f1+1,w
  2489  04A1  00B7               	movwf	??___ftdiv+1
  2490  04A2  0835               	movf	___ftdiv@f1+2,w
  2491  04A3  00B8               	movwf	??___ftdiv+2
  2492  04A4  1003               	clrc
  2493  04A5  0D37               	rlf	??___ftdiv+1,w
  2494  04A6  0D38               	rlf	??___ftdiv+2,w
  2495  04A7  00B9               	movwf	??___ftdiv+3
  2496  04A8  0839               	movf	??___ftdiv+3,w
  2497  04A9  00BE               	movwf	___ftdiv@exp
  2498  04AA  083E               	movf	___ftdiv@exp,w
  2499  04AB  1D03               	btfss	3,2
  2500  04AC  2CB4               	goto	l1505
  2501  04AD  3000               	movlw	0
  2502  04AE  00B0               	movwf	?___ftdiv
  2503  04AF  3000               	movlw	0
  2504  04B0  00B1               	movwf	?___ftdiv+1
  2505  04B1  3000               	movlw	0
  2506  04B2  00B2               	movwf	?___ftdiv+2
  2507  04B3  0008               	return
  2508  04B4                     l1505:	
  2509  04B4  0830               	movf	___ftdiv@f2,w
  2510  04B5  00B6               	movwf	??___ftdiv
  2511  04B6  0831               	movf	___ftdiv@f2+1,w
  2512  04B7  00B7               	movwf	??___ftdiv+1
  2513  04B8  0832               	movf	___ftdiv@f2+2,w
  2514  04B9  00B8               	movwf	??___ftdiv+2
  2515  04BA  1003               	clrc
  2516  04BB  0D37               	rlf	??___ftdiv+1,w
  2517  04BC  0D38               	rlf	??___ftdiv+2,w
  2518  04BD  00B9               	movwf	??___ftdiv+3
  2519  04BE  0839               	movf	??___ftdiv+3,w
  2520  04BF  00BF               	movwf	___ftdiv@sign
  2521  04C0  083F               	movf	___ftdiv@sign,w
  2522  04C1  1D03               	btfss	3,2
  2523  04C2  2CCA               	goto	l1511
  2524  04C3  3000               	movlw	0
  2525  04C4  00B0               	movwf	?___ftdiv
  2526  04C5  3000               	movlw	0
  2527  04C6  00B1               	movwf	?___ftdiv+1
  2528  04C7  3000               	movlw	0
  2529  04C8  00B2               	movwf	?___ftdiv+2
  2530  04C9  0008               	return
  2531  04CA                     l1511:	
  2532  04CA  3000               	movlw	0
  2533  04CB  00BB               	movwf	___ftdiv@f3
  2534  04CC  3000               	movlw	0
  2535  04CD  00BC               	movwf	___ftdiv@f3+1
  2536  04CE  3000               	movlw	0
  2537  04CF  00BD               	movwf	___ftdiv@f3+2
  2538  04D0  3089               	movlw	137
  2539  04D1  073F               	addwf	___ftdiv@sign,w
  2540  04D2  00B6               	movwf	??___ftdiv
  2541  04D3  0836               	movf	??___ftdiv,w
  2542  04D4  02BE               	subwf	___ftdiv@exp,f
  2543  04D5  0833               	movf	___ftdiv@f1,w
  2544  04D6  00B6               	movwf	??___ftdiv
  2545  04D7  0834               	movf	___ftdiv@f1+1,w
  2546  04D8  00B7               	movwf	??___ftdiv+1
  2547  04D9  0835               	movf	___ftdiv@f1+2,w
  2548  04DA  00B8               	movwf	??___ftdiv+2
  2549  04DB  3010               	movlw	16
  2550  04DC                     u1545:	
  2551  04DC  36B8               	lsrf	??___ftdiv+2,f
  2552  04DD  0CB7               	rrf	??___ftdiv+1,f
  2553  04DE  0CB6               	rrf	??___ftdiv,f
  2554  04DF  0B89               	decfsz	9,f
  2555  04E0  2CDC               	goto	u1545
  2556  04E1  0836               	movf	??___ftdiv,w
  2557  04E2  00B9               	movwf	??___ftdiv+3
  2558  04E3  0839               	movf	??___ftdiv+3,w
  2559  04E4  00BF               	movwf	___ftdiv@sign
  2560  04E5  0830               	movf	___ftdiv@f2,w
  2561  04E6  00B6               	movwf	??___ftdiv
  2562  04E7  0831               	movf	___ftdiv@f2+1,w
  2563  04E8  00B7               	movwf	??___ftdiv+1
  2564  04E9  0832               	movf	___ftdiv@f2+2,w
  2565  04EA  00B8               	movwf	??___ftdiv+2
  2566  04EB  3010               	movlw	16
  2567  04EC                     u1555:	
  2568  04EC  36B8               	lsrf	??___ftdiv+2,f
  2569  04ED  0CB7               	rrf	??___ftdiv+1,f
  2570  04EE  0CB6               	rrf	??___ftdiv,f
  2571  04EF  0B89               	decfsz	9,f
  2572  04F0  2CEC               	goto	u1555
  2573  04F1  0836               	movf	??___ftdiv,w
  2574  04F2  00B9               	movwf	??___ftdiv+3
  2575  04F3  0839               	movf	??___ftdiv+3,w
  2576  04F4  06BF               	xorwf	___ftdiv@sign,f
  2577  04F5  3080               	movlw	128
  2578  04F6  00B6               	movwf	??___ftdiv
  2579  04F7  0836               	movf	??___ftdiv,w
  2580  04F8  05BF               	andwf	___ftdiv@sign,f
  2581  04F9  17B4               	bsf	___ftdiv@f1+1,7
  2582  04FA  30FF               	movlw	255
  2583  04FB  05B3               	andwf	___ftdiv@f1,f
  2584  04FC  30FF               	movlw	255
  2585  04FD  05B4               	andwf	___ftdiv@f1+1,f
  2586  04FE  3000               	movlw	0
  2587  04FF  05B5               	andwf	___ftdiv@f1+2,f
  2588  0500  17B1               	bsf	___ftdiv@f2+1,7
  2589  0501  30FF               	movlw	255
  2590  0502  05B0               	andwf	___ftdiv@f2,f
  2591  0503  30FF               	movlw	255
  2592  0504  05B1               	andwf	___ftdiv@f2+1,f
  2593  0505  3000               	movlw	0
  2594  0506  05B2               	andwf	___ftdiv@f2+2,f
  2595  0507  3018               	movlw	24
  2596  0508  00B6               	movwf	??___ftdiv
  2597  0509  0836               	movf	??___ftdiv,w
  2598  050A  00BA               	movwf	___ftdiv@cntr
  2599  050B                     l1525:	
  2600  050B  3001               	movlw	1
  2601  050C                     u1565:	
  2602  050C  35BB               	lslf	___ftdiv@f3,f
  2603  050D  0DBC               	rlf	___ftdiv@f3+1,f
  2604  050E  0DBD               	rlf	___ftdiv@f3+2,f
  2605  050F  0B89               	decfsz	9,f
  2606  0510  2D0C               	goto	u1565
  2607  0511  0832               	movf	___ftdiv@f2+2,w
  2608  0512  0235               	subwf	___ftdiv@f1+2,w
  2609  0513  1D03               	skipz
  2610  0514  2D1B               	goto	u1575
  2611  0515  0831               	movf	___ftdiv@f2+1,w
  2612  0516  0234               	subwf	___ftdiv@f1+1,w
  2613  0517  1D03               	skipz
  2614  0518  2D1B               	goto	u1575
  2615  0519  0830               	movf	___ftdiv@f2,w
  2616  051A  0233               	subwf	___ftdiv@f1,w
  2617  051B                     u1575:	
  2618  051B  1C03               	skipc
  2619  051C  2D24               	goto	l1533
  2620  051D  0830               	movf	___ftdiv@f2,w
  2621  051E  02B3               	subwf	___ftdiv@f1,f
  2622  051F  0831               	movf	___ftdiv@f2+1,w
  2623  0520  3BB4               	subwfb	___ftdiv@f1+1,f
  2624  0521  0832               	movf	___ftdiv@f2+2,w
  2625  0522  3BB5               	subwfb	___ftdiv@f1+2,f
  2626  0523  143B               	bsf	___ftdiv@f3,0
  2627  0524                     l1533:	
  2628  0524  3001               	movlw	1
  2629  0525                     u1585:	
  2630  0525  35B3               	lslf	___ftdiv@f1,f
  2631  0526  0DB4               	rlf	___ftdiv@f1+1,f
  2632  0527  0DB5               	rlf	___ftdiv@f1+2,f
  2633  0528  0B89               	decfsz	9,f
  2634  0529  2D25               	goto	u1585
  2635  052A  3001               	movlw	1
  2636  052B  02BA               	subwf	___ftdiv@cntr,f
  2637  052C  1D03               	btfss	3,2
  2638  052D  2D0B               	goto	l1525
  2639  052E  083B               	movf	___ftdiv@f3,w
  2640  052F  00F0               	movwf	___ftpack@arg
  2641  0530  083C               	movf	___ftdiv@f3+1,w
  2642  0531  00F1               	movwf	___ftpack@arg+1
  2643  0532  083D               	movf	___ftdiv@f3+2,w
  2644  0533  00F2               	movwf	___ftpack@arg+2
  2645  0534  083E               	movf	___ftdiv@exp,w
  2646  0535  00B6               	movwf	??___ftdiv
  2647  0536  0836               	movf	??___ftdiv,w
  2648  0537  00F3               	movwf	___ftpack@exp
  2649  0538  083F               	movf	___ftdiv@sign,w
  2650  0539  00B7               	movwf	??___ftdiv+1
  2651  053A  0837               	movf	??___ftdiv+1,w
  2652  053B  00F4               	movwf	___ftpack@sign
  2653  053C  2317               	fcall	___ftpack
  2654  053D  0870               	movf	?___ftpack,w
  2655  053E  0020               	movlb	0	; select bank0
  2656  053F  00B0               	movwf	?___ftdiv
  2657  0540  0871               	movf	?___ftpack+1,w
  2658  0541  00B1               	movwf	?___ftdiv+1
  2659  0542  0872               	movf	?___ftpack+2,w
  2660  0543  00B2               	movwf	?___ftdiv+2
  2661  0544  0008               	return
  2662  0545                     __end_of___ftdiv:	
  2663                           
  2664                           	psect	text12
  2665  05F8                     __ptext12:	
  2666 ;; *************** function ___ftadd *****************
  2667 ;; Defined at:
  2668 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  f1              3   32[BANK0 ] float 
  2671 ;;  f2              3   35[BANK0 ] float 
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;  exp1            1   44[BANK0 ] unsigned char 
  2674 ;;  exp2            1   43[BANK0 ] unsigned char 
  2675 ;;  sign            1   42[BANK0 ] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  3   32[BANK0 ] float 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1
  2685 ;;      Params:         0       6       0
  2686 ;;      Locals:         0       3       0
  2687 ;;      Temps:          0       4       0
  2688 ;;      Totals:         0      13       0
  2689 ;;Total ram usage:       13 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; Hardware stack levels required when called:    1
  2692 ;; This function calls:
  2693 ;;		___ftpack
  2694 ;; This function is called by:
  2695 ;;		_PulseOut
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699                           
  2700                           ;psect for function ___ftadd
  2701  05F8                     ___ftadd:	
  2702                           
  2703                           ;incstack = 0
  2704                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2705  05F8  0020               	movlb	0	; select bank0
  2706  05F9  0840               	movf	___ftadd@f1,w
  2707  05FA  00C6               	movwf	??___ftadd
  2708  05FB  0841               	movf	___ftadd@f1+1,w
  2709  05FC  00C7               	movwf	??___ftadd+1
  2710  05FD  0842               	movf	___ftadd@f1+2,w
  2711  05FE  00C8               	movwf	??___ftadd+2
  2712  05FF  1003               	clrc
  2713  0600  0D47               	rlf	??___ftadd+1,w
  2714  0601  0D48               	rlf	??___ftadd+2,w
  2715  0602  00C9               	movwf	??___ftadd+3
  2716  0603  0849               	movf	??___ftadd+3,w
  2717  0604  00CC               	movwf	___ftadd@exp1
  2718  0605  0843               	movf	___ftadd@f2,w
  2719  0606  00C6               	movwf	??___ftadd
  2720  0607  0844               	movf	___ftadd@f2+1,w
  2721  0608  00C7               	movwf	??___ftadd+1
  2722  0609  0845               	movf	___ftadd@f2+2,w
  2723  060A  00C8               	movwf	??___ftadd+2
  2724  060B  1003               	clrc
  2725  060C  0D47               	rlf	??___ftadd+1,w
  2726  060D  0D48               	rlf	??___ftadd+2,w
  2727  060E  00C9               	movwf	??___ftadd+3
  2728  060F  0849               	movf	??___ftadd+3,w
  2729  0610  00CB               	movwf	___ftadd@exp2
  2730  0611  084C               	movf	___ftadd@exp1,w
  2731  0612  1903               	btfsc	3,2
  2732  0613  2E20               	goto	l1435
  2733  0614  084B               	movf	___ftadd@exp2,w
  2734  0615  024C               	subwf	___ftadd@exp1,w
  2735  0616  1803               	skipnc
  2736  0617  2E27               	goto	l1439
  2737  0618  034C               	decf	___ftadd@exp1,w
  2738  0619  3AFF               	xorlw	255
  2739  061A  074B               	addwf	___ftadd@exp2,w
  2740  061B  00C6               	movwf	??___ftadd
  2741  061C  3019               	movlw	25
  2742  061D  0246               	subwf	??___ftadd,w
  2743  061E  1C03               	skipc
  2744  061F  2E27               	goto	l1439
  2745  0620                     l1435:	
  2746  0620  0843               	movf	___ftadd@f2,w
  2747  0621  00C0               	movwf	?___ftadd
  2748  0622  0844               	movf	___ftadd@f2+1,w
  2749  0623  00C1               	movwf	?___ftadd+1
  2750  0624  0845               	movf	___ftadd@f2+2,w
  2751  0625  00C2               	movwf	?___ftadd+2
  2752  0626  0008               	return
  2753  0627                     l1439:	
  2754  0627  084B               	movf	___ftadd@exp2,w
  2755  0628  1903               	btfsc	3,2
  2756  0629  0008               	return
  2757  062A  084C               	movf	___ftadd@exp1,w
  2758  062B  024B               	subwf	___ftadd@exp2,w
  2759  062C  1803               	skipnc
  2760  062D  2E36               	goto	l1445
  2761  062E  034B               	decf	___ftadd@exp2,w
  2762  062F  3AFF               	xorlw	255
  2763  0630  074C               	addwf	___ftadd@exp1,w
  2764  0631  00C6               	movwf	??___ftadd
  2765  0632  3019               	movlw	25
  2766  0633  0246               	subwf	??___ftadd,w
  2767  0634  1803               	btfsc	3,0
  2768  0635  0008               	return
  2769  0636                     l1445:	
  2770  0636  3006               	movlw	6
  2771  0637  00C6               	movwf	??___ftadd
  2772  0638  0846               	movf	??___ftadd,w
  2773  0639  00CA               	movwf	___ftadd@sign
  2774  063A  1BC2               	btfsc	___ftadd@f1+2,7
  2775  063B  17CA               	bsf	___ftadd@sign,7
  2776  063C  1BC5               	btfsc	___ftadd@f2+2,7
  2777  063D  174A               	bsf	___ftadd@sign,6
  2778  063E  17C1               	bsf	___ftadd@f1+1,7
  2779  063F  30FF               	movlw	255
  2780  0640  05C0               	andwf	___ftadd@f1,f
  2781  0641  30FF               	movlw	255
  2782  0642  05C1               	andwf	___ftadd@f1+1,f
  2783  0643  3000               	movlw	0
  2784  0644  05C2               	andwf	___ftadd@f1+2,f
  2785  0645  17C4               	bsf	___ftadd@f2+1,7
  2786  0646  30FF               	movlw	255
  2787  0647  05C3               	andwf	___ftadd@f2,f
  2788  0648  30FF               	movlw	255
  2789  0649  05C4               	andwf	___ftadd@f2+1,f
  2790  064A  3000               	movlw	0
  2791  064B  05C5               	andwf	___ftadd@f2+2,f
  2792  064C  084B               	movf	___ftadd@exp2,w
  2793  064D  024C               	subwf	___ftadd@exp1,w
  2794  064E  1803               	skipnc
  2795  064F  2E72               	goto	l1467
  2796  0650                     l1457:	
  2797  0650  3001               	movlw	1
  2798  0651                     u1385:	
  2799  0651  35C3               	lslf	___ftadd@f2,f
  2800  0652  0DC4               	rlf	___ftadd@f2+1,f
  2801  0653  0DC5               	rlf	___ftadd@f2+2,f
  2802  0654  0B89               	decfsz	9,f
  2803  0655  2E51               	goto	u1385
  2804  0656  3001               	movlw	1
  2805  0657  02CB               	subwf	___ftadd@exp2,f
  2806  0658  084B               	movf	___ftadd@exp2,w
  2807  0659  064C               	xorwf	___ftadd@exp1,w
  2808  065A  1903               	skipnz
  2809  065B  2E6D               	goto	l1465
  2810  065C  3001               	movlw	1
  2811  065D  02CA               	subwf	___ftadd@sign,f
  2812  065E  084A               	movf	___ftadd@sign,w
  2813  065F  3907               	andlw	7
  2814  0660  1903               	btfsc	3,2
  2815  0661  2E6D               	goto	l1465
  2816  0662  2E50               	goto	l1457
  2817  0663                     l1463:	
  2818  0663  3001               	movlw	1
  2819  0664                     u1415:	
  2820  0664  36C2               	lsrf	___ftadd@f1+2,f
  2821  0665  0CC1               	rrf	___ftadd@f1+1,f
  2822  0666  0CC0               	rrf	___ftadd@f1,f
  2823  0667  0B89               	decfsz	9,f
  2824  0668  2E64               	goto	u1415
  2825  0669  3001               	movlw	1
  2826  066A  00C6               	movwf	??___ftadd
  2827  066B  0846               	movf	??___ftadd,w
  2828  066C  07CC               	addwf	___ftadd@exp1,f
  2829  066D                     l1465:	
  2830  066D  084C               	movf	___ftadd@exp1,w
  2831  066E  064B               	xorwf	___ftadd@exp2,w
  2832  066F  1903               	btfsc	3,2
  2833  0670  2E97               	goto	l469
  2834  0671  2E63               	goto	l1463
  2835  0672                     l1467:	
  2836  0672  084C               	movf	___ftadd@exp1,w
  2837  0673  024B               	subwf	___ftadd@exp2,w
  2838  0674  1803               	skipnc
  2839  0675  2E97               	goto	l469
  2840  0676                     l1469:	
  2841  0676  3001               	movlw	1
  2842  0677                     u1445:	
  2843  0677  35C0               	lslf	___ftadd@f1,f
  2844  0678  0DC1               	rlf	___ftadd@f1+1,f
  2845  0679  0DC2               	rlf	___ftadd@f1+2,f
  2846  067A  0B89               	decfsz	9,f
  2847  067B  2E77               	goto	u1445
  2848  067C  3001               	movlw	1
  2849  067D  02CC               	subwf	___ftadd@exp1,f
  2850  067E  084B               	movf	___ftadd@exp2,w
  2851  067F  064C               	xorwf	___ftadd@exp1,w
  2852  0680  1903               	skipnz
  2853  0681  2E93               	goto	l1477
  2854  0682  3001               	movlw	1
  2855  0683  02CA               	subwf	___ftadd@sign,f
  2856  0684  084A               	movf	___ftadd@sign,w
  2857  0685  3907               	andlw	7
  2858  0686  1903               	btfsc	3,2
  2859  0687  2E93               	goto	l1477
  2860  0688  2E76               	goto	l1469
  2861  0689                     l1475:	
  2862  0689  3001               	movlw	1
  2863  068A                     u1475:	
  2864  068A  36C5               	lsrf	___ftadd@f2+2,f
  2865  068B  0CC4               	rrf	___ftadd@f2+1,f
  2866  068C  0CC3               	rrf	___ftadd@f2,f
  2867  068D  0B89               	decfsz	9,f
  2868  068E  2E8A               	goto	u1475
  2869  068F  3001               	movlw	1
  2870  0690  00C6               	movwf	??___ftadd
  2871  0691  0846               	movf	??___ftadd,w
  2872  0692  07CB               	addwf	___ftadd@exp2,f
  2873  0693                     l1477:	
  2874  0693  084C               	movf	___ftadd@exp1,w
  2875  0694  064B               	xorwf	___ftadd@exp2,w
  2876  0695  1D03               	skipz
  2877  0696  2E89               	goto	l1475
  2878  0697                     l469:	
  2879  0697  1FCA               	btfss	___ftadd@sign,7
  2880  0698  2EA9               	goto	l1481
  2881  0699  30FF               	movlw	255
  2882  069A  06C0               	xorwf	___ftadd@f1,f
  2883  069B  30FF               	movlw	255
  2884  069C  06C1               	xorwf	___ftadd@f1+1,f
  2885  069D  30FF               	movlw	255
  2886  069E  06C2               	xorwf	___ftadd@f1+2,f
  2887  069F  3001               	movlw	1
  2888  06A0  07C0               	addwf	___ftadd@f1,f
  2889  06A1  3000               	movlw	0
  2890  06A2  1803               	skipnc
  2891  06A3  3001               	movlw	1
  2892  06A4  07C1               	addwf	___ftadd@f1+1,f
  2893  06A5  3000               	movlw	0
  2894  06A6  1803               	skipnc
  2895  06A7  3001               	movlw	1
  2896  06A8  07C2               	addwf	___ftadd@f1+2,f
  2897  06A9                     l1481:	
  2898  06A9  1F4A               	btfss	___ftadd@sign,6
  2899  06AA  2EBB               	goto	l1485
  2900  06AB  30FF               	movlw	255
  2901  06AC  06C3               	xorwf	___ftadd@f2,f
  2902  06AD  30FF               	movlw	255
  2903  06AE  06C4               	xorwf	___ftadd@f2+1,f
  2904  06AF  30FF               	movlw	255
  2905  06B0  06C5               	xorwf	___ftadd@f2+2,f
  2906  06B1  3001               	movlw	1
  2907  06B2  07C3               	addwf	___ftadd@f2,f
  2908  06B3  3000               	movlw	0
  2909  06B4  1803               	skipnc
  2910  06B5  3001               	movlw	1
  2911  06B6  07C4               	addwf	___ftadd@f2+1,f
  2912  06B7  3000               	movlw	0
  2913  06B8  1803               	skipnc
  2914  06B9  3001               	movlw	1
  2915  06BA  07C5               	addwf	___ftadd@f2+2,f
  2916  06BB                     l1485:	
  2917  06BB  01CA               	clrf	___ftadd@sign
  2918  06BC  0840               	movf	___ftadd@f1,w
  2919  06BD  07C3               	addwf	___ftadd@f2,f
  2920  06BE  0841               	movf	___ftadd@f1+1,w
  2921  06BF  3DC4               	addwfc	___ftadd@f2+1,f
  2922  06C0  0842               	movf	___ftadd@f1+2,w
  2923  06C1  3DC5               	addwfc	___ftadd@f2+2,f
  2924  06C2  1FC5               	btfss	___ftadd@f2+2,7
  2925  06C3  2ED6               	goto	l1495
  2926  06C4  30FF               	movlw	255
  2927  06C5  06C3               	xorwf	___ftadd@f2,f
  2928  06C6  30FF               	movlw	255
  2929  06C7  06C4               	xorwf	___ftadd@f2+1,f
  2930  06C8  30FF               	movlw	255
  2931  06C9  06C5               	xorwf	___ftadd@f2+2,f
  2932  06CA  3001               	movlw	1
  2933  06CB  07C3               	addwf	___ftadd@f2,f
  2934  06CC  3000               	movlw	0
  2935  06CD  1803               	skipnc
  2936  06CE  3001               	movlw	1
  2937  06CF  07C4               	addwf	___ftadd@f2+1,f
  2938  06D0  3000               	movlw	0
  2939  06D1  1803               	skipnc
  2940  06D2  3001               	movlw	1
  2941  06D3  07C5               	addwf	___ftadd@f2+2,f
  2942  06D4  01CA               	clrf	___ftadd@sign
  2943  06D5  0ACA               	incf	___ftadd@sign,f
  2944  06D6                     l1495:	
  2945  06D6  0843               	movf	___ftadd@f2,w
  2946  06D7  00F0               	movwf	___ftpack@arg
  2947  06D8  0844               	movf	___ftadd@f2+1,w
  2948  06D9  00F1               	movwf	___ftpack@arg+1
  2949  06DA  0845               	movf	___ftadd@f2+2,w
  2950  06DB  00F2               	movwf	___ftpack@arg+2
  2951  06DC  084C               	movf	___ftadd@exp1,w
  2952  06DD  00C6               	movwf	??___ftadd
  2953  06DE  0846               	movf	??___ftadd,w
  2954  06DF  00F3               	movwf	___ftpack@exp
  2955  06E0  084A               	movf	___ftadd@sign,w
  2956  06E1  00C7               	movwf	??___ftadd+1
  2957  06E2  0847               	movf	??___ftadd+1,w
  2958  06E3  00F4               	movwf	___ftpack@sign
  2959  06E4  2317               	fcall	___ftpack
  2960  06E5  0870               	movf	?___ftpack,w
  2961  06E6  0020               	movlb	0	; select bank0
  2962  06E7  00C0               	movwf	?___ftadd
  2963  06E8  0871               	movf	?___ftpack+1,w
  2964  06E9  00C1               	movwf	?___ftadd+1
  2965  06EA  0872               	movf	?___ftpack+2,w
  2966  06EB  00C2               	movwf	?___ftadd+2
  2967  06EC  0008               	return
  2968  06ED                     __end_of___ftadd:	
  2969                           
  2970                           	psect	text13
  2971  0317                     __ptext13:	
  2972 ;; *************** function ___ftpack *****************
  2973 ;; Defined at:
  2974 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  arg             3    0[COMMON] unsigned um
  2977 ;;  exp             1    3[COMMON] unsigned char 
  2978 ;;  sign            1    4[COMMON] unsigned char 
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  3    0[COMMON] float 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1
  2990 ;;      Params:         5       0       0
  2991 ;;      Locals:         0       0       0
  2992 ;;      Temps:          3       0       0
  2993 ;;      Totals:         8       0       0
  2994 ;;Total ram usage:        8 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		___ftadd
  3000 ;;		___ftdiv
  3001 ;;		___ftmul
  3002 ;;		___lwtoft
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           
  3007                           ;psect for function ___ftpack
  3008  0317                     ___ftpack:	
  3009                           
  3010                           ;incstack = 0
  3011                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3012  0317  0873               	movf	___ftpack@exp,w
  3013  0318  1903               	btfsc	3,2
  3014  0319  2B1F               	goto	l1357
  3015  031A  0872               	movf	___ftpack@arg+2,w
  3016  031B  0471               	iorwf	___ftpack@arg+1,w
  3017  031C  0470               	iorwf	___ftpack@arg,w
  3018  031D  1D03               	skipz
  3019  031E  2B30               	goto	l1363
  3020  031F                     l1357:	
  3021  031F  3000               	movlw	0
  3022  0320  00F0               	movwf	?___ftpack
  3023  0321  3000               	movlw	0
  3024  0322  00F1               	movwf	?___ftpack+1
  3025  0323  3000               	movlw	0
  3026  0324  00F2               	movwf	?___ftpack+2
  3027  0325  0008               	return
  3028  0326                     l1361:	
  3029  0326  3001               	movlw	1
  3030  0327  00F5               	movwf	??___ftpack
  3031  0328  0875               	movf	??___ftpack,w
  3032  0329  07F3               	addwf	___ftpack@exp,f
  3033  032A  3001               	movlw	1
  3034  032B                     u1135:	
  3035  032B  36F2               	lsrf	___ftpack@arg+2,f
  3036  032C  0CF1               	rrf	___ftpack@arg+1,f
  3037  032D  0CF0               	rrf	___ftpack@arg,f
  3038  032E  0B89               	decfsz	9,f
  3039  032F  2B2B               	goto	u1135
  3040  0330                     l1363:	
  3041  0330  30FE               	movlw	254
  3042  0331  0572               	andwf	___ftpack@arg+2,w
  3043  0332  1903               	btfsc	3,2
  3044  0333  2B49               	goto	l438
  3045  0334  2B26               	goto	l1361
  3046  0335                     l1365:	
  3047  0335  3001               	movlw	1
  3048  0336  00F5               	movwf	??___ftpack
  3049  0337  0875               	movf	??___ftpack,w
  3050  0338  07F3               	addwf	___ftpack@exp,f
  3051  0339  3001               	movlw	1
  3052  033A  07F0               	addwf	___ftpack@arg,f
  3053  033B  3000               	movlw	0
  3054  033C  1803               	skipnc
  3055  033D  3001               	movlw	1
  3056  033E  07F1               	addwf	___ftpack@arg+1,f
  3057  033F  3000               	movlw	0
  3058  0340  1803               	skipnc
  3059  0341  3001               	movlw	1
  3060  0342  07F2               	addwf	___ftpack@arg+2,f
  3061  0343  3001               	movlw	1
  3062  0344                     u1155:	
  3063  0344  36F2               	lsrf	___ftpack@arg+2,f
  3064  0345  0CF1               	rrf	___ftpack@arg+1,f
  3065  0346  0CF0               	rrf	___ftpack@arg,f
  3066  0347  0B89               	decfsz	9,f
  3067  0348  2B44               	goto	u1155
  3068  0349                     l438:	
  3069  0349  30FF               	movlw	255
  3070  034A  0572               	andwf	___ftpack@arg+2,w
  3071  034B  1903               	btfsc	3,2
  3072  034C  2B5A               	goto	l1373
  3073  034D  2B35               	goto	l1365
  3074  034E                     l1375:	
  3075  034E  3002               	movlw	2
  3076  034F  0273               	subwf	___ftpack@exp,w
  3077  0350  1C03               	btfss	3,0
  3078  0351  2B5C               	goto	l445
  3079  0352  3001               	movlw	1
  3080  0353  02F3               	subwf	___ftpack@exp,f
  3081  0354  3001               	movlw	1
  3082  0355                     u1175:	
  3083  0355  35F0               	lslf	___ftpack@arg,f
  3084  0356  0DF1               	rlf	___ftpack@arg+1,f
  3085  0357  0DF2               	rlf	___ftpack@arg+2,f
  3086  0358  0B89               	decfsz	9,f
  3087  0359  2B55               	goto	u1175
  3088  035A                     l1373:	
  3089  035A  1FF1               	btfss	___ftpack@arg+1,7
  3090  035B  2B4E               	goto	l1375
  3091  035C                     l445:	
  3092  035C  1873               	btfsc	___ftpack@exp,0
  3093  035D  2B64               	goto	l446
  3094  035E  30FF               	movlw	255
  3095  035F  05F0               	andwf	___ftpack@arg,f
  3096  0360  307F               	movlw	127
  3097  0361  05F1               	andwf	___ftpack@arg+1,f
  3098  0362  30FF               	movlw	255
  3099  0363  05F2               	andwf	___ftpack@arg+2,f
  3100  0364                     l446:	
  3101  0364  1003               	clrc
  3102  0365  0CF3               	rrf	___ftpack@exp,f
  3103  0366  0873               	movf	___ftpack@exp,w
  3104  0367  00F5               	movwf	??___ftpack
  3105  0368  01F6               	clrf	??___ftpack+1
  3106  0369  01F7               	clrf	??___ftpack+2
  3107  036A  3010               	movlw	16
  3108  036B                     u1215:	
  3109  036B  35F5               	lslf	??___ftpack,f
  3110  036C  0DF6               	rlf	??___ftpack+1,f
  3111  036D  0DF7               	rlf	??___ftpack+2,f
  3112  036E  0B89               	decfsz	9,f
  3113  036F  2B6B               	goto	u1215
  3114  0370  0875               	movf	??___ftpack,w
  3115  0371  04F0               	iorwf	___ftpack@arg,f
  3116  0372  0876               	movf	??___ftpack+1,w
  3117  0373  04F1               	iorwf	___ftpack@arg+1,f
  3118  0374  0877               	movf	??___ftpack+2,w
  3119  0375  04F2               	iorwf	___ftpack@arg+2,f
  3120  0376  0874               	movf	___ftpack@sign,w
  3121  0377  1903               	btfsc	3,2
  3122  0378  0008               	return
  3123  0379  17F2               	bsf	___ftpack@arg+2,7
  3124  037A  0008               	return
  3125  037B                     __end_of___ftpack:	
  3126                           
  3127                           	psect	text14
  3128  0250                     __ptext14:	
  3129 ;; *************** function _SetPWMDutyCycle *****************
  3130 ;; Defined at:
  3131 ;;		line 389 in file "user.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  DutyCycle       2    0[COMMON] unsigned int 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		wreg, status,2
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1
  3145 ;;      Params:         2       0       0
  3146 ;;      Locals:         0       0       0
  3147 ;;      Temps:          0       0       0
  3148 ;;      Totals:         2       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_PulseOut
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           
  3159                           ;psect for function _SetPWMDutyCycle
  3160  0250                     _SetPWMDutyCycle:	
  3161                           
  3162                           ;user.c: 391: PWM2DCH = DutyCycle;
  3163                           
  3164                           ;incstack = 0
  3165                           ; Regs used in _SetPWMDutyCycle: [wreg+status,2]
  3166  0250  0870               	movf	SetPWMDutyCycle@DutyCycle,w
  3167  0251  002C               	movlb	12	; select bank12
  3168  0252  0095               	movwf	21	;volatile
  3169                           
  3170                           ;user.c: 392: PWM2DCL = 0x00;
  3171  0253  0194               	clrf	20	;volatile
  3172  0254  0008               	return
  3173  0255                     __end_of_SetPWMDutyCycle:	
  3174                           
  3175                           	psect	text15
  3176  02E5                     __ptext15:	
  3177 ;; *************** function _LimitFreq *****************
  3178 ;; Defined at:
  3179 ;;		line 374 in file "user.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  iFreq           2    0[COMMON] unsigned int 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  iLimited        2    2[COMMON] unsigned int 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  2    0[COMMON] unsigned int 
  3186 ;; Registers used:
  3187 ;;		wreg
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1
  3193 ;;      Params:         2       0       0
  3194 ;;      Locals:         2       0       0
  3195 ;;      Temps:          0       0       0
  3196 ;;      Totals:         4       0       0
  3197 ;;Total ram usage:        4 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_PulseOut
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           
  3207                           ;psect for function _LimitFreq
  3208  02E5                     _LimitFreq:	
  3209                           
  3210                           ;user.c: 376: unsigned int iLimited;
  3211                           ;user.c: 378: if (iFreq <= 245)
  3212                           
  3213                           ;incstack = 0
  3214                           ; Regs used in _LimitFreq: [wreg]
  3215  02E5  3000               	movlw	0
  3216  02E6  0271               	subwf	LimitFreq@iFreq+1,w
  3217  02E7  30F6               	movlw	246
  3218  02E8  1903               	skipnz
  3219  02E9  0270               	subwf	LimitFreq@iFreq,w
  3220  02EA  1803               	skipnc
  3221  02EB  2AF0               	goto	l1411
  3222                           
  3223                           ;user.c: 379: iLimited = 250;
  3224  02EC  30FA               	movlw	250
  3225  02ED  00F2               	movwf	LimitFreq@iLimited
  3226  02EE  3000               	movlw	0
  3227  02EF  2B0C               	goto	L2
  3228  02F0                     l1411:	
  3229                           
  3230                           ;user.c: 380: else if ((iFreq >= 920) && (iFreq <= 1000))
  3231  02F0  3003               	movlw	3
  3232  02F1  0271               	subwf	LimitFreq@iFreq+1,w
  3233  02F2  3098               	movlw	152
  3234  02F3  1903               	skipnz
  3235  02F4  0270               	subwf	LimitFreq@iFreq,w
  3236  02F5  1C03               	skipc
  3237  02F6  2B02               	goto	l1417
  3238  02F7  3003               	movlw	3
  3239  02F8  0271               	subwf	LimitFreq@iFreq+1,w
  3240  02F9  30E9               	movlw	233
  3241  02FA  1903               	skipnz
  3242  02FB  0270               	subwf	LimitFreq@iFreq,w
  3243  02FC  1803               	skipnc
  3244  02FD  2B02               	goto	l1417
  3245                           
  3246                           ;user.c: 381: iLimited = 1001;
  3247  02FE  30E9               	movlw	233
  3248  02FF  00F2               	movwf	LimitFreq@iLimited
  3249  0300  3003               	movlw	3
  3250  0301  2B0C               	goto	L2
  3251  0302                     l1417:	
  3252                           
  3253                           ;user.c: 382: else if (iFreq >= 10000)
  3254  0302  3027               	movlw	39
  3255  0303  0271               	subwf	LimitFreq@iFreq+1,w
  3256  0304  3010               	movlw	16
  3257  0305  1903               	skipnz
  3258  0306  0270               	subwf	LimitFreq@iFreq,w
  3259  0307  1C03               	skipc
  3260  0308  2B0E               	goto	l1421
  3261                           
  3262                           ;user.c: 383: iLimited = 10000;
  3263  0309  3010               	movlw	16
  3264  030A  00F2               	movwf	LimitFreq@iLimited
  3265  030B  3027               	movlw	39
  3266  030C                     L2:	
  3267  030C  00F3               	movwf	LimitFreq@iLimited+1
  3268  030D  2B12               	goto	l210
  3269  030E                     l1421:	
  3270                           
  3271                           ;user.c: 384: else
  3272                           ;user.c: 385: iLimited = iFreq;
  3273  030E  0871               	movf	LimitFreq@iFreq+1,w
  3274  030F  00F3               	movwf	LimitFreq@iLimited+1
  3275  0310  0870               	movf	LimitFreq@iFreq,w
  3276  0311  00F2               	movwf	LimitFreq@iLimited
  3277  0312                     l210:	
  3278                           
  3279                           ;user.c: 386: return iLimited;
  3280  0312  0873               	movf	LimitFreq@iLimited+1,w
  3281  0313  00F1               	movwf	?_LimitFreq+1
  3282  0314  0872               	movf	LimitFreq@iLimited,w
  3283  0315  00F0               	movwf	?_LimitFreq
  3284  0316  0008               	return
  3285  0317                     __end_of_LimitFreq:	
  3286                           
  3287                           	psect	text16
  3288  06ED                     __ptext16:	
  3289 ;; *************** function _CleanKeeperController *****************
  3290 ;; Defined at:
  3291 ;;		line 40 in file "cleankeeper.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  bGreen          1    5[COMMON] unsigned char 
  3296 ;;  bRed            1    4[COMMON] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;		None               void
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1
  3306 ;;      Params:         0       0       0
  3307 ;;      Locals:         2       0       0
  3308 ;;      Temps:          4       0       0
  3309 ;;      Totals:         6       0       0
  3310 ;;Total ram usage:        6 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_main
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _CleanKeeperController
  3321  06ED                     _CleanKeeperController:	
  3322                           
  3323                           ;cleankeeper.c: 42: static unsigned int iState;
  3324                           ;cleankeeper.c: 43: static unsigned long iTimer;
  3325                           ;cleankeeper.c: 44: static unsigned char bSignalRelay;
  3326                           ;cleankeeper.c: 45: unsigned char bGreen, bRed;
  3327                           ;cleankeeper.c: 46: static long iOverLoadTimer;
  3328                           ;cleankeeper.c: 50: bGreen = PORTAbits.RA0;
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in _CleanKeeperController: [wreg+status,2+status,0]
  3332  06ED  3000               	movlw	0
  3333  06EE  0020               	movlb	0	; select bank0
  3334  06EF  180C               	btfsc	12,0	;volatile
  3335  06F0  3001               	movlw	1
  3336  06F1  00F5               	movwf	CleanKeeperController@bGreen
  3337                           
  3338                           ;cleankeeper.c: 51: bRed = PORTAbits.RA1;
  3339  06F2  3000               	movlw	0
  3340  06F3  188C               	btfsc	12,1	;volatile
  3341  06F4  3001               	movlw	1
  3342  06F5  00F4               	movwf	CleanKeeperController@bRed
  3343                           
  3344                           ;cleankeeper.c: 54: if (iState == 0 )
  3345  06F6  0865               	movf	CleanKeeperController@iState,w
  3346  06F7  0466               	iorwf	CleanKeeperController@iState+1,w
  3347  06F8  1D03               	btfss	3,2
  3348  06F9  2EFE               	goto	l1683
  3349                           
  3350                           ;cleankeeper.c: 55: {
  3351                           ;cleankeeper.c: 56: iState = 1;
  3352  06FA  3001               	movlw	1
  3353  06FB  00E5               	movwf	CleanKeeperController@iState
  3354  06FC  3000               	movlw	0
  3355  06FD  00E6               	movwf	CleanKeeperController@iState+1
  3356  06FE                     l1683:	
  3357                           
  3358                           ;cleankeeper.c: 57: }
  3359                           ;cleankeeper.c: 60: if (iState == 1)
  3360  06FE  0365               	decf	CleanKeeperController@iState,w
  3361  06FF  0466               	iorwf	CleanKeeperController@iState+1,w
  3362  0700  1D03               	btfss	3,2
  3363  0701  2F14               	goto	l1695
  3364                           
  3365                           ;cleankeeper.c: 61: {
  3366                           ;cleankeeper.c: 62: if ((bGreen == 1) || (bRed == 1))
  3367  0702  0375               	decf	CleanKeeperController@bGreen,w
  3368  0703  1D03               	btfss	3,2
  3369  0704  0374               	decf	CleanKeeperController@bRed,w
  3370  0705  1D03               	btfss	3,2
  3371  0706  2F14               	goto	l1695
  3372                           
  3373                           ;cleankeeper.c: 63: {
  3374                           ;cleankeeper.c: 66: if (bGreen == 1)
  3375  0707  0375               	decf	CleanKeeperController@bGreen,w
  3376  0708  1D03               	btfss	3,2
  3377  0709  2F0D               	goto	l250
  3378                           
  3379                           ;cleankeeper.c: 67: {
  3380                           ;cleankeeper.c: 68: LATAbits.LATA2 = 1;
  3381  070A  0022               	movlb	2	; select bank2
  3382  070B  150C               	bsf	12,2	;volatile
  3383                           
  3384                           ;cleankeeper.c: 69: }
  3385  070C  2F0F               	goto	l1693
  3386  070D                     l250:	
  3387                           
  3388                           ;cleankeeper.c: 70: else
  3389                           ;cleankeeper.c: 71: {
  3390                           ;cleankeeper.c: 72: LATAbits.LATA2 = 0;
  3391  070D  0022               	movlb	2	; select bank2
  3392  070E  110C               	bcf	12,2	;volatile
  3393  070F                     l1693:	
  3394                           
  3395                           ;cleankeeper.c: 73: }
  3396                           ;cleankeeper.c: 75: iState = 2;
  3397  070F  3002               	movlw	2
  3398  0710  0020               	movlb	0	; select bank0
  3399  0711  00E5               	movwf	CleanKeeperController@iState
  3400  0712  3000               	movlw	0
  3401  0713  00E6               	movwf	CleanKeeperController@iState+1
  3402  0714                     l1695:	
  3403                           
  3404                           ;cleankeeper.c: 76: }
  3405                           ;cleankeeper.c: 77: }
  3406                           ;cleankeeper.c: 79: if (iState == 2)
  3407  0714  3002               	movlw	2
  3408  0715  0665               	xorwf	CleanKeeperController@iState,w
  3409  0716  0466               	iorwf	CleanKeeperController@iState+1,w
  3410  0717  1D03               	btfss	3,2
  3411  0718  2F2D               	goto	l1707
  3412                           
  3413                           ;cleankeeper.c: 80: {
  3414                           ;cleankeeper.c: 82: iTimer = (30120l*20);
  3415  0719  3000               	movlw	0
  3416  071A  00E4               	movwf	CleanKeeperController@iTimer+3
  3417  071B  3009               	movlw	9
  3418  071C  00E3               	movwf	CleanKeeperController@iTimer+2
  3419  071D  3031               	movlw	49
  3420  071E  00E2               	movwf	CleanKeeperController@iTimer+1
  3421  071F  3020               	movlw	32
  3422  0720  00E1               	movwf	CleanKeeperController@iTimer
  3423                           
  3424                           ;cleankeeper.c: 84: bSignalRelay = 1;
  3425  0721  01E7               	clrf	CleanKeeperController@bSignalRelay
  3426  0722  0AE7               	incf	CleanKeeperController@bSignalRelay,f
  3427                           
  3428                           ;cleankeeper.c: 86: if ((bGreen == 0) && (bRed == 0))
  3429  0723  0875               	movf	CleanKeeperController@bGreen,w
  3430  0724  1D03               	btfss	3,2
  3431  0725  2F2D               	goto	l1707
  3432  0726  0874               	movf	CleanKeeperController@bRed,w
  3433  0727  1D03               	btfss	3,2
  3434  0728  2F2D               	goto	l1707
  3435                           
  3436                           ;cleankeeper.c: 87: iState = 3;
  3437  0729  3003               	movlw	3
  3438  072A  00E5               	movwf	CleanKeeperController@iState
  3439  072B  3000               	movlw	0
  3440  072C  00E6               	movwf	CleanKeeperController@iState+1
  3441  072D                     l1707:	
  3442                           
  3443                           ;cleankeeper.c: 88: }
  3444                           ;cleankeeper.c: 91: if (iState == 3)
  3445  072D  3003               	movlw	3
  3446  072E  0665               	xorwf	CleanKeeperController@iState,w
  3447  072F  0466               	iorwf	CleanKeeperController@iState+1,w
  3448  0730  1D03               	btfss	3,2
  3449  0731  2F5E               	goto	l1723
  3450                           
  3451                           ;cleankeeper.c: 92: {
  3452                           ;cleankeeper.c: 95: iTimer--;
  3453  0732  3001               	movlw	1
  3454  0733  00F0               	movwf	??_CleanKeeperController
  3455  0734  3000               	movlw	0
  3456  0735  00F1               	movwf	??_CleanKeeperController+1
  3457  0736  3000               	movlw	0
  3458  0737  00F2               	movwf	??_CleanKeeperController+2
  3459  0738  3000               	movlw	0
  3460  0739  00F3               	movwf	??_CleanKeeperController+3
  3461  073A  0870               	movf	??_CleanKeeperController,w
  3462  073B  02E1               	subwf	CleanKeeperController@iTimer,f
  3463  073C  0871               	movf	??_CleanKeeperController+1,w
  3464  073D  3BE2               	subwfb	CleanKeeperController@iTimer+1,f
  3465  073E  0872               	movf	??_CleanKeeperController+2,w
  3466  073F  3BE3               	subwfb	CleanKeeperController@iTimer+2,f
  3467  0740  0873               	movf	??_CleanKeeperController+3,w
  3468  0741  3BE4               	subwfb	CleanKeeperController@iTimer+3,f
  3469                           
  3470                           ;cleankeeper.c: 96: if (iTimer == 0)
  3471  0742  0864               	movf	CleanKeeperController@iTimer+3,w
  3472  0743  0463               	iorwf	CleanKeeperController@iTimer+2,w
  3473  0744  0462               	iorwf	CleanKeeperController@iTimer+1,w
  3474  0745  0461               	iorwf	CleanKeeperController@iTimer,w
  3475  0746  1D03               	skipz
  3476  0747  2F4C               	goto	l1713
  3477                           
  3478                           ;cleankeeper.c: 97: {
  3479                           ;cleankeeper.c: 98: iState = 4;
  3480  0748  3004               	movlw	4
  3481  0749  00E5               	movwf	CleanKeeperController@iState
  3482  074A  3000               	movlw	0
  3483  074B  00E6               	movwf	CleanKeeperController@iState+1
  3484  074C                     l1713:	
  3485                           
  3486                           ;cleankeeper.c: 99: }
  3487                           ;cleankeeper.c: 101: if ((bGreen == 1) || (bRed == 1))
  3488  074C  0375               	decf	CleanKeeperController@bGreen,w
  3489  074D  1D03               	btfss	3,2
  3490  074E  0374               	decf	CleanKeeperController@bRed,w
  3491  074F  1D03               	btfss	3,2
  3492  0750  2F5E               	goto	l1723
  3493                           
  3494                           ;cleankeeper.c: 102: {
  3495                           ;cleankeeper.c: 104: if (bGreen == 1)
  3496  0751  0375               	decf	CleanKeeperController@bGreen,w
  3497  0752  1D03               	btfss	3,2
  3498  0753  2F57               	goto	l259
  3499                           
  3500                           ;cleankeeper.c: 105: LATAbits.LATA2 = 1;
  3501  0754  0022               	movlb	2	; select bank2
  3502  0755  150C               	bsf	12,2	;volatile
  3503  0756  2F59               	goto	l1721
  3504  0757                     l259:	
  3505                           
  3506                           ;cleankeeper.c: 106: else
  3507                           ;cleankeeper.c: 107: LATAbits.LATA2 = 0;
  3508  0757  0022               	movlb	2	; select bank2
  3509  0758  110C               	bcf	12,2	;volatile
  3510  0759                     l1721:	
  3511                           
  3512                           ;cleankeeper.c: 108: iState = 2;
  3513  0759  3002               	movlw	2
  3514  075A  0020               	movlb	0	; select bank0
  3515  075B  00E5               	movwf	CleanKeeperController@iState
  3516  075C  3000               	movlw	0
  3517  075D  00E6               	movwf	CleanKeeperController@iState+1
  3518  075E                     l1723:	
  3519                           
  3520                           ;cleankeeper.c: 109: }
  3521                           ;cleankeeper.c: 110: }
  3522                           ;cleankeeper.c: 112: if (iState == 4)
  3523  075E  3004               	movlw	4
  3524  075F  0665               	xorwf	CleanKeeperController@iState,w
  3525  0760  0466               	iorwf	CleanKeeperController@iState+1,w
  3526  0761  1D03               	btfss	3,2
  3527  0762  2F6E               	goto	l1733
  3528                           
  3529                           ;cleankeeper.c: 113: {
  3530                           ;cleankeeper.c: 115: bSignalRelay = 0;
  3531  0763  01E7               	clrf	CleanKeeperController@bSignalRelay
  3532                           
  3533                           ;cleankeeper.c: 117: if ((bGreen == 0) && (bRed == 0))
  3534  0764  0875               	movf	CleanKeeperController@bGreen,w
  3535  0765  1D03               	btfss	3,2
  3536  0766  2F6E               	goto	l1733
  3537  0767  0874               	movf	CleanKeeperController@bRed,w
  3538  0768  1D03               	btfss	3,2
  3539  0769  2F6E               	goto	l1733
  3540                           
  3541                           ;cleankeeper.c: 118: {
  3542                           ;cleankeeper.c: 119: iState = 1;
  3543  076A  3001               	movlw	1
  3544  076B  00E5               	movwf	CleanKeeperController@iState
  3545  076C  3000               	movlw	0
  3546  076D  00E6               	movwf	CleanKeeperController@iState+1
  3547  076E                     l1733:	
  3548                           
  3549                           ;cleankeeper.c: 120: }
  3550                           ;cleankeeper.c: 121: }
  3551                           ;cleankeeper.c: 124: if (iState == 99)
  3552  076E  3063               	movlw	99
  3553  076F  0665               	xorwf	CleanKeeperController@iState,w
  3554  0770  0466               	iorwf	CleanKeeperController@iState+1,w
  3555  0771  1D03               	btfss	3,2
  3556  0772  2F8D               	goto	l1741
  3557                           
  3558                           ;cleankeeper.c: 125: {
  3559                           ;cleankeeper.c: 127: if ( iOverLoadTimer > 0 )
  3560  0773  1BE0               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  3561  0774  2F86               	goto	l264
  3562  0775  0860               	movf	CleanKeeperController@iOverLoadTimer+3,w
  3563  0776  1D03               	btfss	3,2
  3564  0777  2F82               	goto	l1737
  3565  0778  085F               	movf	CleanKeeperController@iOverLoadTimer+2,w
  3566  0779  1D03               	btfss	3,2
  3567  077A  2F82               	goto	l1737
  3568  077B  085E               	movf	CleanKeeperController@iOverLoadTimer+1,w
  3569  077C  1D03               	btfss	3,2
  3570  077D  2F82               	goto	l1737
  3571  077E  3001               	movlw	1
  3572  077F  025D               	subwf	CleanKeeperController@iOverLoadTimer,w
  3573  0780  1C03               	btfss	3,0
  3574  0781  2F86               	goto	l264
  3575  0782                     l1737:	
  3576                           
  3577                           ;cleankeeper.c: 128: {
  3578                           ;cleankeeper.c: 129: LATCbits.LATC4 = 0;
  3579  0782  0022               	movlb	2	; select bank2
  3580  0783  120E               	bcf	14,4	;volatile
  3581                           
  3582                           ;cleankeeper.c: 130: LATAbits.LATA4 = 0;
  3583  0784  120C               	bcf	12,4	;volatile
  3584                           
  3585                           ;cleankeeper.c: 131: }
  3586  0785  2F8D               	goto	l1741
  3587  0786                     l264:	
  3588                           
  3589                           ;cleankeeper.c: 132: else
  3590                           ;cleankeeper.c: 133: {
  3591                           ;cleankeeper.c: 134: LATAbits.LATA4 = 1;
  3592  0786  0022               	movlb	2	; select bank2
  3593  0787  160C               	bsf	12,4	;volatile
  3594                           
  3595                           ;cleankeeper.c: 135: iState = 4;
  3596  0788  3004               	movlw	4
  3597  0789  0020               	movlb	0	; select bank0
  3598  078A  00E5               	movwf	CleanKeeperController@iState
  3599  078B  3000               	movlw	0
  3600  078C  00E6               	movwf	CleanKeeperController@iState+1
  3601  078D                     l1741:	
  3602                           
  3603                           ;cleankeeper.c: 136: }
  3604                           ;cleankeeper.c: 137: }
  3605                           ;cleankeeper.c: 140: if ((bSignalRelay == 1) && (iState != 99))
  3606  078D  0020               	movlb	0	; select bank0
  3607  078E  0367               	decf	CleanKeeperController@bSignalRelay,w
  3608  078F  1D03               	btfss	3,2
  3609  0790  2FB6               	goto	l1753
  3610  0791  3063               	movlw	99
  3611  0792  0665               	xorwf	CleanKeeperController@iState,w
  3612  0793  0466               	iorwf	CleanKeeperController@iState+1,w
  3613  0794  1903               	btfsc	3,2
  3614  0795  2FB6               	goto	l1753
  3615                           
  3616                           ;cleankeeper.c: 141: {
  3617                           ;cleankeeper.c: 143: LATCbits.LATC4 = 1;
  3618  0796  0022               	movlb	2	; select bank2
  3619  0797  160E               	bsf	14,4	;volatile
  3620                           
  3621                           ;cleankeeper.c: 145: iOverLoadTimer++;
  3622  0798  3001               	movlw	1
  3623  0799  0020               	movlb	0	; select bank0
  3624  079A  07DD               	addwf	CleanKeeperController@iOverLoadTimer,f
  3625  079B  3000               	movlw	0
  3626  079C  3DDE               	addwfc	CleanKeeperController@iOverLoadTimer+1,f
  3627  079D  3000               	movlw	0
  3628  079E  3DDF               	addwfc	CleanKeeperController@iOverLoadTimer+2,f
  3629  079F  3000               	movlw	0
  3630  07A0  3DE0               	addwfc	CleanKeeperController@iOverLoadTimer+3,f
  3631                           
  3632                           ;cleankeeper.c: 146: if (iOverLoadTimer > (30120l*62))
  3633  07A1  1BE0               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  3634  07A2  2FB6               	goto	l1753
  3635  07A3  0860               	movf	CleanKeeperController@iOverLoadTimer+3,w
  3636  07A4  1D03               	btfss	3,2
  3637  07A5  2FAE               	goto	l1751
  3638  07A6  30B1               	movlw	177
  3639  07A7  025D               	subwf	CleanKeeperController@iOverLoadTimer,w
  3640  07A8  307E               	movlw	126
  3641  07A9  3B5E               	subwfb	CleanKeeperController@iOverLoadTimer+1,w
  3642  07AA  301C               	movlw	28
  3643  07AB  3B5F               	subwfb	CleanKeeperController@iOverLoadTimer+2,w
  3644  07AC  1C03               	btfss	3,0
  3645  07AD  2FB6               	goto	l1753
  3646  07AE                     l1751:	
  3647                           
  3648                           ;cleankeeper.c: 147: {
  3649                           ;cleankeeper.c: 148: iOverLoadTimer = (30120l*62);
  3650  07AE  3000               	movlw	0
  3651  07AF  00E0               	movwf	CleanKeeperController@iOverLoadTimer+3
  3652  07B0  301C               	movlw	28
  3653  07B1  00DF               	movwf	CleanKeeperController@iOverLoadTimer+2
  3654  07B2  307E               	movlw	126
  3655  07B3  00DE               	movwf	CleanKeeperController@iOverLoadTimer+1
  3656  07B4  30B0               	movlw	176
  3657  07B5  00DD               	movwf	CleanKeeperController@iOverLoadTimer
  3658  07B6                     l1753:	
  3659                           
  3660                           ;cleankeeper.c: 149: }
  3661                           ;cleankeeper.c: 150: }
  3662                           ;cleankeeper.c: 152: if ((bSignalRelay == 0) || (iState == 99))
  3663  07B6  0867               	movf	CleanKeeperController@bSignalRelay,w
  3664  07B7  1903               	btfsc	3,2
  3665  07B8  2FBE               	goto	l270
  3666  07B9  3063               	movlw	99
  3667  07BA  0665               	xorwf	CleanKeeperController@iState,w
  3668  07BB  0466               	iorwf	CleanKeeperController@iState+1,w
  3669  07BC  1D03               	btfss	3,2
  3670  07BD  2FE0               	goto	l1763
  3671  07BE                     l270:	
  3672                           
  3673                           ;cleankeeper.c: 153: {
  3674                           ;cleankeeper.c: 155: LATCbits.LATC4 = 0;
  3675  07BE  0022               	movlb	2	; select bank2
  3676  07BF  120E               	bcf	14,4	;volatile
  3677                           
  3678                           ;cleankeeper.c: 156: iOverLoadTimer--;
  3679  07C0  30FF               	movlw	255
  3680  07C1  0020               	movlb	0	; select bank0
  3681  07C2  07DD               	addwf	CleanKeeperController@iOverLoadTimer,f
  3682  07C3  30FF               	movlw	255
  3683  07C4  3DDE               	addwfc	CleanKeeperController@iOverLoadTimer+1,f
  3684  07C5  30FF               	movlw	255
  3685  07C6  3DDF               	addwfc	CleanKeeperController@iOverLoadTimer+2,f
  3686  07C7  30FF               	movlw	255
  3687  07C8  3DE0               	addwfc	CleanKeeperController@iOverLoadTimer+3,f
  3688                           
  3689                           ;cleankeeper.c: 157: if (iOverLoadTimer <= 0)
  3690  07C9  1BE0               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  3691  07CA  2FD8               	goto	l1761
  3692  07CB  0860               	movf	CleanKeeperController@iOverLoadTimer+3,w
  3693  07CC  1D03               	btfss	3,2
  3694  07CD  2FE0               	goto	l1763
  3695  07CE  085F               	movf	CleanKeeperController@iOverLoadTimer+2,w
  3696  07CF  1D03               	btfss	3,2
  3697  07D0  2FE0               	goto	l1763
  3698  07D1  085E               	movf	CleanKeeperController@iOverLoadTimer+1,w
  3699  07D2  1D03               	btfss	3,2
  3700  07D3  2FE0               	goto	l1763
  3701  07D4  3001               	movlw	1
  3702  07D5  025D               	subwf	CleanKeeperController@iOverLoadTimer,w
  3703  07D6  1803               	btfsc	3,0
  3704  07D7  2FE0               	goto	l1763
  3705  07D8                     l1761:	
  3706                           
  3707                           ;cleankeeper.c: 158: {
  3708                           ;cleankeeper.c: 159: iOverLoadTimer = 0;
  3709  07D8  3000               	movlw	0
  3710  07D9  00E0               	movwf	CleanKeeperController@iOverLoadTimer+3
  3711  07DA  3000               	movlw	0
  3712  07DB  00DF               	movwf	CleanKeeperController@iOverLoadTimer+2
  3713  07DC  3000               	movlw	0
  3714  07DD  00DE               	movwf	CleanKeeperController@iOverLoadTimer+1
  3715  07DE  3000               	movlw	0
  3716  07DF  00DD               	movwf	CleanKeeperController@iOverLoadTimer
  3717  07E0                     l1763:	
  3718                           
  3719                           ;cleankeeper.c: 160: }
  3720                           ;cleankeeper.c: 161: }
  3721                           ;cleankeeper.c: 164: if (iOverLoadTimer >= (30120l*62))
  3722  07E0  1BE0               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  3723  07E1  0008               	return
  3724  07E2  0860               	movf	CleanKeeperController@iOverLoadTimer+3,w
  3725  07E3  1D03               	btfss	3,2
  3726  07E4  2FED               	goto	l1765
  3727  07E5  30B0               	movlw	176
  3728  07E6  025D               	subwf	CleanKeeperController@iOverLoadTimer,w
  3729  07E7  307E               	movlw	126
  3730  07E8  3B5E               	subwfb	CleanKeeperController@iOverLoadTimer+1,w
  3731  07E9  301C               	movlw	28
  3732  07EA  3B5F               	subwfb	CleanKeeperController@iOverLoadTimer+2,w
  3733  07EB  1C03               	btfss	3,0
  3734  07EC  0008               	return
  3735  07ED                     l1765:	
  3736                           
  3737                           ;cleankeeper.c: 165: {
  3738                           ;cleankeeper.c: 166: iState = 99;
  3739  07ED  3063               	movlw	99
  3740  07EE  00E5               	movwf	CleanKeeperController@iState
  3741  07EF  3000               	movlw	0
  3742  07F0  00E6               	movwf	CleanKeeperController@iState+1
  3743  07F1  0008               	return
  3744  07F2                     __end_of_CleanKeeperController:	
  3745  007E                     btemp	set	126	;btemp
  3746  007E                     wtemp	set	126
  3747  007E                     wtemp0	set	126
  3748  0080                     wtemp1	set	128
  3749  0082                     wtemp2	set	130
  3750  0084                     wtemp3	set	132
  3751  0086                     wtemp4	set	134
  3752  0088                     wtemp5	set	136
  3753  007F                     wtemp6	set	127
  3754  007E                     ttemp	set	126
  3755  007E                     ttemp0	set	126
  3756  0081                     ttemp1	set	129
  3757  0084                     ttemp2	set	132
  3758  0087                     ttemp3	set	135
  3759  007F                     ttemp4	set	127
  3760  007E                     ltemp	set	126
  3761  007E                     ltemp0	set	126
  3762  0082                     ltemp1	set	130
  3763  0086                     ltemp2	set	134
  3764  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    2
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     61      73
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _InitApp->_InitAddress
    _InitAddress->_ReadFlash
    _CleanKeeperInit->_PulseOut
    _PulseOut->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft

Critical Paths under _main in BANK0

    _CleanKeeperInit->_PulseOut
    _PulseOut->___fttol
    ___fttol->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11967
              _CleanKeeperController
                    _CleanKeeperInit
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0     180
                        _InitAddress
                           _InitGPIO
 ---------------------------------------------------------------------------------
 (2) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAddress                                          4     4      0     180
                                              6 COMMON     4     4      0
                          _ReadFlash
 ---------------------------------------------------------------------------------
 (3) _ReadFlash                                            6     4      2     135
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CleanKeeperInit                                      0     0      0   11565
                           _PulseOut
 ---------------------------------------------------------------------------------
 (2) _PulseOut                                             6     4      2   11565
                                             12 COMMON     2     2      0
                                             59 BANK0      2     0      2
                          _LimitFreq
                    _SetPWMDutyCycle
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2220
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             45 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2652
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2606
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3268
                                             32 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _SetPWMDutyCycle                                      2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _LimitFreq                                            4     2      2     200
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _CleanKeeperController                                6     6      0     222
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CleanKeeperController
   _CleanKeeperInit
     _PulseOut
       _LimitFreq
       _SetPWMDutyCycle
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _ConfigureOscillator
   _InitApp
     _InitAddress
       _ReadFlash
     _InitGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      57       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     3D      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      57       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed May 06 12:15:58 2015

                      PulseOut@iFreq 005B                                   l13 0258  
                                 l23 025F                         ___ftadd@exp1 004C  
                       ___ftadd@exp2 004B                         ___ftadd@sign 004A  
                                l210 0312                                  l250 070D  
                                l270 07BE                                  l264 0786  
                                l259 0757                                  l445 035C  
                                l446 0364                                  l438 0349  
                                l529 03E8                                  l469 0697  
                                _PR2 001B                                  wreg 0009  
                       ___ftdiv@cntr 003A                         ___ftdiv@sign 003F  
                               l1411 02F0                                 l1421 030E  
                               l1511 04CA                                 l1417 0302  
                               l1361 0326                                 l1505 04B4  
                               l1363 0330                                 l1435 0620  
                               l1373 035A                                 l1365 0335  
                               l1357 031F                                 l1445 0636  
                               l1533 0524                                 l1525 050B  
                               l1375 034E                                 l1463 0663  
                               l1439 0627                                 l1623 03DF  
                               l1615 03C4                                 l1721 0759  
                               l1713 074C                                 l1481 06A9  
                               l1465 066D                                 l1457 0650  
                               l1553 0572                                 l1625 03EB  
                               l1617 03D2                                 l1723 075E  
                               l1707 072D                                 l1475 0689  
                               l1467 0672                                 l1547 055C  
                               l1643 0296                                 l1741 078D  
                               l1733 076E                                 l1485 06BB  
                               l1477 0693                                 l1469 0676  
                               l1581 05D1                                 l1565 05AD  
                               l1629 03F9                                 l1751 07AE  
                               l1495 06D6                                 l1761 07D8  
                               l1753 07B6                                 l1737 0782  
                               l1577 05C9                                 l1569 05B5  
                               l1763 07E0                                 l1683 06FE  
                               l1667 045F                                 l1765 07ED  
                               l1693 070F                                 l1597 0394  
                               l1695 0714                                 u1215 036B  
                               u1135 032B                                 u1155 0344  
                               u1235 02C2                                 u1245 02D5  
                               _LATA 010C                                 u1175 0355  
                               u1415 0664                                 _LATC 010E  
                               u1445 0677                                 u1385 0651  
                               u1545 04DC                                 u1705 05D8  
                               u1625 057E                                 u1475 068A  
                               u1555 04EC                                 u1635 058E  
                               u1565 050C                                 u1575 051B  
                               u1655 05B6                                 u1735 039B  
                               u1585 0525                                 u1665 05BC  
                               u1765 03C5                                 u1695 05D2  
                               u1795 03E0                                 _PIR2 0012  
                      ??_InitAddress 0076                                 _main 0255  
                       ___ftpack@arg 0070                         ___ftpack@exp 0073  
                               btemp 007E                                 ltemp 007E  
                               start 0002                                 ttemp 007E  
                               wtemp 007E                         ___ftmul@cntr 002E  
                       ___ftmul@sign 002F                      InitAddress@addr 0078  
                    __end_of_InitApp 0250                      _SetPWMDutyCycle 0250  
                       ___fttol@exp1 005A               ?_CleanKeeperController 0070  
                       ___fttol@lval 0056                                ?_main 0070  
                    __end_of___ftadd 06ED                        __CFG_WDTE$OFF 0000  
                    __end_of___ftdiv 0545                      __end_of___ftmul 05F8  
                    __end_of___fttol 0402                                _T2CON 001C  
                              _TRISA 008C                                _TRISC 008E  
                _ConfigureOscillator 025A                        __CFG_PWRTE$ON 0000  
           SetPWMDutyCycle@DutyCycle 0070                        ___ftpack@sign 0074  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                              ttemp0 007E                                ttemp1 0081  
                              ttemp2 0084                                ttemp3 0087  
                              ttemp4 007F                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                 ?_ConfigureOscillator 0070  
                __end_of_InitAddress 029C                      __initialization 07F2  
                       __end_of_main 025A                     __end_of_InitGPIO 02BC  
                             ??_main 007E                        ___fttol@sign1 0055  
                   ReadFlash@address 0070                     __end_of_PulseOut 049D  
                             _ADRESH 009C                               _ADRESL 009B  
                             _ANSELA 018C                               _ANSELC 018E  
                   __end_of___ftpack 037B            CleanKeeperController@bRed 0074  
                             _PMADRH 0192                               _PMADRL 0191  
                   __end_of___lwtoft 027D                               _PMDATH 0194  
                             _PMDATL 0193                               _PMCON2 0196  
                 __size_of_ReadFlash 0029                               _SSPADD 0212  
            __end_of_SetPWMDutyCycle 0255                            ??_InitApp 007A  
              ??_ConfigureOscillator 0070                   __size_of_LimitFreq 0032  
                     LimitFreq@iFreq 0070                            ??___ftadd 0046  
                          ??___ftdiv 0036                            ??___ftmul 0026  
                          ??___fttol 0051                ___ftmul@f3_as_product 002B  
CleanKeeperController@iOverLoadTimer 005D                          _InitAddress 027D  
            __end_of__initialization 07FE                           ___ftadd@f1 0040  
                         ___ftadd@f2 0043                           ___ftdiv@f1 0033  
                         ___ftdiv@f2 0030                           ___ftdiv@f3 003B  
                         ___ftmul@f1 0020                           ___ftmul@f2 0023  
                         ___fttol@f1 004D                       __pcstackCOMMON 0070  
                         ___lwtoft@c 0078                    __end_of_ReadFlash 02E5  
                     _OPTION_REGbits 0095                    __end_of_LimitFreq 0317  
        CleanKeeperController@bGreen 0075          CleanKeeperController@iTimer 0061  
        CleanKeeperController@iState 0065                           __pbssBANK0 005D  
                          ?_InitGPIO 0070             __size_of_CleanKeeperInit 0009  
                   ?_SetPWMDutyCycle 0070              ??_CleanKeeperController 0070  
                         __pmaintext 0255                            ?_PulseOut 005B  
                            _ADDRESS 0068                            ?___ftpack 0070  
                          ?___lwtoft 0078                              _PWM2DCH 0615  
                            _PWM2DCL 0614                              _PWM2CON 0616  
                            _SSPCON1 0215                              _SSPCON2 0216  
                            _SSPCON3 0217                              _SSPSTAT 0214  
                         ??_InitGPIO 0070                              _InitApp 024D  
                      ReadFlash@data 0074                              ___ftadd 05F8  
                            ___ftdiv 049D                           ??_PulseOut 007C  
                            ___ftmul 0545                              ___fttol 037B  
                         ??___ftpack 0075                              __ptext1 024D  
                            __ptext2 029C                              __ptext3 027D  
                            __ptext4 02BC                              __ptext5 025A  
                            __ptext6 0262                              __ptext7 0402  
                            __ptext8 026B                              __ptext9 037B  
                         ??___lwtoft 007B                 end_of_initialization 07FE  
                  ??_CleanKeeperInit 007E                         __pstringtext 0200  
                          _PORTAbits 000C                            _PORTCbits 000E  
                   __CFG_FOSC$INTOSC 0000                            _TRISAbits 008C  
                          _TRISCbits 008E    CleanKeeperController@bSignalRelay 0067  
               PulseOut@iLimitedFreq 007C          __end_of_ConfigureOscillator 0262  
                       ?_InitAddress 0070                          ___ftdiv@exp 003E  
                        ___ftmul@exp 002A                 __end_ofWait_ms@iWAIT 0202  
                start_initialization 07F2                    LimitFreq@iLimited 0072  
                          _ReadFlash 02BC                            _LimitFreq 02E5  
                  __size_of_InitGPIO 0020       __size_of_CleanKeeperController 0105  
      __end_of_CleanKeeperController 07F2                    __size_of_PulseOut 009B  
                  __size_of___ftpack 0064                            ___latbits 0000  
                  __size_of___lwtoft 0012                        __pcstackBANK0 0020  
                         ?_ReadFlash 0070                           ?_LimitFreq 0070  
                           ?_InitApp 0070                             ?___ftadd 0040  
                           ?___ftdiv 0030                             ?___ftmul 0020  
                           ?___fttol 004D             __size_of_SetPWMDutyCycle 0005  
                    _CleanKeeperInit 0262                             _LATAbits 010C  
                           _LATCbits 010E                             _PIE1bits 0091  
               __size_of_InitAddress 001F                             _PIR1bits 0011  
                         _ADCON0bits 009D                           _ADCON1bits 009E  
                           _WPUAbits 020C                          ??_ReadFlash 0072  
                       Wait_ms@iWAIT 0200                          ??_LimitFreq 0072  
                           _InitGPIO 029C                     __size_of_InitApp 0003  
                           _PulseOut 0402                     __size_of___ftadd 00F5  
                   __size_of___ftdiv 00A8                     __size_of___ftmul 00B3  
                   __size_of___fttol 0087                             ___ftpack 0317  
                         _ANSELAbits 018C                             ___lwtoft 026B  
                         _ANSELCbits 018E                    ??_SetPWMDutyCycle 0072  
            __end_of_CleanKeeperInit 026B                             __ptext10 0545  
                           __ptext11 049D                             __ptext12 05F8  
                           __ptext13 0317                             __ptext14 0250  
                           __ptext15 02E5                             __ptext16 06ED  
                      __size_of_main 0005         __size_of_ConfigureOscillator 0008  
                        _OSCSTATbits 009A                           _INTCONbits 000B  
                         _PMCON1bits 0195                           _OSCCONbits 0099  
              _CleanKeeperController 06ED                          _SSPCON1bits 0215  
                   ?_CleanKeeperInit 0070  
