

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Sep 17 11:37:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     	;# 
    32  0001                     	;# 
    33  0002                     	;# 
    34  0003                     	;# 
    35  0004                     	;# 
    36  0005                     	;# 
    37  0006                     	;# 
    38  0007                     	;# 
    39  0008                     	;# 
    40  0009                     	;# 
    41  000A                     	;# 
    42  000B                     	;# 
    43  000C                     	;# 
    44  000E                     	;# 
    45  0011                     	;# 
    46  0012                     	;# 
    47  0013                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0016                     	;# 
    51  0017                     	;# 
    52  0018                     	;# 
    53  0019                     	;# 
    54  001A                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  008C                     	;# 
    58  008E                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0095                     	;# 
    63  0096                     	;# 
    64  0097                     	;# 
    65  0099                     	;# 
    66  009A                     	;# 
    67  009B                     	;# 
    68  009B                     	;# 
    69  009C                     	;# 
    70  009D                     	;# 
    71  009E                     	;# 
    72  009F                     	;# 
    73  010C                     	;# 
    74  010E                     	;# 
    75  0111                     	;# 
    76  0112                     	;# 
    77  0113                     	;# 
    78  0114                     	;# 
    79  0115                     	;# 
    80  0116                     	;# 
    81  0117                     	;# 
    82  0118                     	;# 
    83  0119                     	;# 
    84  011D                     	;# 
    85  018C                     	;# 
    86  018E                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0194                     	;# 
    93  0195                     	;# 
    94  0196                     	;# 
    95  0197                     	;# 
    96  020C                     	;# 
    97  0211                     	;# 
    98  0211                     	;# 
    99  0212                     	;# 
   100  0212                     	;# 
   101  0213                     	;# 
   102  0213                     	;# 
   103  0214                     	;# 
   104  0214                     	;# 
   105  0215                     	;# 
   106  0215                     	;# 
   107  0215                     	;# 
   108  0216                     	;# 
   109  0216                     	;# 
   110  0217                     	;# 
   111  0217                     	;# 
   112  0391                     	;# 
   113  0392                     	;# 
   114  0393                     	;# 
   115  0498                     	;# 
   116  0498                     	;# 
   117  0499                     	;# 
   118  049A                     	;# 
   119  049B                     	;# 
   120  049B                     	;# 
   121  049C                     	;# 
   122  049E                     	;# 
   123  049F                     	;# 
   124  0611                     	;# 
   125  0612                     	;# 
   126  0613                     	;# 
   127  0613                     	;# 
   128  0614                     	;# 
   129  0615                     	;# 
   130  0616                     	;# 
   131  0616                     	;# 
   132  0617                     	;# 
   133  0618                     	;# 
   134  0619                     	;# 
   135  0619                     	;# 
   136  061A                     	;# 
   137  061B                     	;# 
   138  061C                     	;# 
   139  061C                     	;# 
   140  0691                     	;# 
   141  0692                     	;# 
   142  0693                     	;# 
   143  0694                     	;# 
   144  0695                     	;# 
   145  0F0F                     	;# 
   146  0F10                     	;# 
   147  0F11                     	;# 
   148  0F12                     	;# 
   149  0F13                     	;# 
   150  0F14                     	;# 
   151  0F15                     	;# 
   152  0F16                     	;# 
   153  0F17                     	;# 
   154  0F18                     	;# 
   155  0F19                     	;# 
   156  0F1A                     	;# 
   157  0F1B                     	;# 
   158  0F1C                     	;# 
   159  0F1D                     	;# 
   160  0F1E                     	;# 
   161  0F1F                     	;# 
   162  0FE3                     	;# 
   163  0FE4                     	;# 
   164  0FE5                     	;# 
   165  0FE6                     	;# 
   166  0FE7                     	;# 
   167  0FE8                     	;# 
   168  0FE9                     	;# 
   169  0FEA                     	;# 
   170  0FEB                     	;# 
   171  0FED                     	;# 
   172  0FEE                     	;# 
   173  0FEF                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000E                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  008C                     	;# 
   201  008E                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  010C                     	;# 
   217  010E                     	;# 
   218  0111                     	;# 
   219  0112                     	;# 
   220  0113                     	;# 
   221  0114                     	;# 
   222  0115                     	;# 
   223  0116                     	;# 
   224  0117                     	;# 
   225  0118                     	;# 
   226  0119                     	;# 
   227  011D                     	;# 
   228  018C                     	;# 
   229  018E                     	;# 
   230  0191                     	;# 
   231  0191                     	;# 
   232  0192                     	;# 
   233  0193                     	;# 
   234  0193                     	;# 
   235  0194                     	;# 
   236  0195                     	;# 
   237  0196                     	;# 
   238  0197                     	;# 
   239  020C                     	;# 
   240  0211                     	;# 
   241  0211                     	;# 
   242  0212                     	;# 
   243  0212                     	;# 
   244  0213                     	;# 
   245  0213                     	;# 
   246  0214                     	;# 
   247  0214                     	;# 
   248  0215                     	;# 
   249  0215                     	;# 
   250  0215                     	;# 
   251  0216                     	;# 
   252  0216                     	;# 
   253  0217                     	;# 
   254  0217                     	;# 
   255  0391                     	;# 
   256  0392                     	;# 
   257  0393                     	;# 
   258  0498                     	;# 
   259  0498                     	;# 
   260  0499                     	;# 
   261  049A                     	;# 
   262  049B                     	;# 
   263  049B                     	;# 
   264  049C                     	;# 
   265  049E                     	;# 
   266  049F                     	;# 
   267  0611                     	;# 
   268  0612                     	;# 
   269  0613                     	;# 
   270  0613                     	;# 
   271  0614                     	;# 
   272  0615                     	;# 
   273  0616                     	;# 
   274  0616                     	;# 
   275  0617                     	;# 
   276  0618                     	;# 
   277  0619                     	;# 
   278  0619                     	;# 
   279  061A                     	;# 
   280  061B                     	;# 
   281  061C                     	;# 
   282  061C                     	;# 
   283  0691                     	;# 
   284  0692                     	;# 
   285  0693                     	;# 
   286  0694                     	;# 
   287  0695                     	;# 
   288  0F0F                     	;# 
   289  0F10                     	;# 
   290  0F11                     	;# 
   291  0F12                     	;# 
   292  0F13                     	;# 
   293  0F14                     	;# 
   294  0F15                     	;# 
   295  0F16                     	;# 
   296  0F17                     	;# 
   297  0F18                     	;# 
   298  0F19                     	;# 
   299  0F1A                     	;# 
   300  0F1B                     	;# 
   301  0F1C                     	;# 
   302  0F1D                     	;# 
   303  0F1E                     	;# 
   304  0F1F                     	;# 
   305  0FE3                     	;# 
   306  0FE4                     	;# 
   307  0FE5                     	;# 
   308  0FE6                     	;# 
   309  0FE7                     	;# 
   310  0FE8                     	;# 
   311  0FE9                     	;# 
   312  0FEA                     	;# 
   313  0FEB                     	;# 
   314  0FED                     	;# 
   315  0FEE                     	;# 
   316  0FEF                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000E                     	;# 
   331  0011                     	;# 
   332  0012                     	;# 
   333  0013                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  008C                     	;# 
   344  008E                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010E                     	;# 
   361  0111                     	;# 
   362  0112                     	;# 
   363  0113                     	;# 
   364  0114                     	;# 
   365  0115                     	;# 
   366  0116                     	;# 
   367  0117                     	;# 
   368  0118                     	;# 
   369  0119                     	;# 
   370  011D                     	;# 
   371  018C                     	;# 
   372  018E                     	;# 
   373  0191                     	;# 
   374  0191                     	;# 
   375  0192                     	;# 
   376  0193                     	;# 
   377  0193                     	;# 
   378  0194                     	;# 
   379  0195                     	;# 
   380  0196                     	;# 
   381  0197                     	;# 
   382  020C                     	;# 
   383  0211                     	;# 
   384  0211                     	;# 
   385  0212                     	;# 
   386  0212                     	;# 
   387  0213                     	;# 
   388  0213                     	;# 
   389  0214                     	;# 
   390  0214                     	;# 
   391  0215                     	;# 
   392  0215                     	;# 
   393  0215                     	;# 
   394  0216                     	;# 
   395  0216                     	;# 
   396  0217                     	;# 
   397  0217                     	;# 
   398  0391                     	;# 
   399  0392                     	;# 
   400  0393                     	;# 
   401  0498                     	;# 
   402  0498                     	;# 
   403  0499                     	;# 
   404  049A                     	;# 
   405  049B                     	;# 
   406  049B                     	;# 
   407  049C                     	;# 
   408  049E                     	;# 
   409  049F                     	;# 
   410  0611                     	;# 
   411  0612                     	;# 
   412  0613                     	;# 
   413  0613                     	;# 
   414  0614                     	;# 
   415  0615                     	;# 
   416  0616                     	;# 
   417  0616                     	;# 
   418  0617                     	;# 
   419  0618                     	;# 
   420  0619                     	;# 
   421  0619                     	;# 
   422  061A                     	;# 
   423  061B                     	;# 
   424  061C                     	;# 
   425  061C                     	;# 
   426  0691                     	;# 
   427  0692                     	;# 
   428  0693                     	;# 
   429  0694                     	;# 
   430  0695                     	;# 
   431  0F0F                     	;# 
   432  0F10                     	;# 
   433  0F11                     	;# 
   434  0F12                     	;# 
   435  0F13                     	;# 
   436  0F14                     	;# 
   437  0F15                     	;# 
   438  0F16                     	;# 
   439  0F17                     	;# 
   440  0F18                     	;# 
   441  0F19                     	;# 
   442  0F1A                     	;# 
   443  0F1B                     	;# 
   444  0F1C                     	;# 
   445  0F1D                     	;# 
   446  0F1E                     	;# 
   447  0F1F                     	;# 
   448  0FE3                     	;# 
   449  0FE4                     	;# 
   450  0FE5                     	;# 
   451  0FE6                     	;# 
   452  0FE7                     	;# 
   453  0FE8                     	;# 
   454  0FE9                     	;# 
   455  0FEA                     	;# 
   456  0FEB                     	;# 
   457  0FED                     	;# 
   458  0FEE                     	;# 
   459  0FEF                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000E                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  008C                     	;# 
   487  008E                     	;# 
   488  0091                     	;# 
   489  0092                     	;# 
   490  0093                     	;# 
   491  0095                     	;# 
   492  0096                     	;# 
   493  0097                     	;# 
   494  0099                     	;# 
   495  009A                     	;# 
   496  009B                     	;# 
   497  009B                     	;# 
   498  009C                     	;# 
   499  009D                     	;# 
   500  009E                     	;# 
   501  009F                     	;# 
   502  010C                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011D                     	;# 
   514  018C                     	;# 
   515  018E                     	;# 
   516  0191                     	;# 
   517  0191                     	;# 
   518  0192                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0197                     	;# 
   525  020C                     	;# 
   526  0211                     	;# 
   527  0211                     	;# 
   528  0212                     	;# 
   529  0212                     	;# 
   530  0213                     	;# 
   531  0213                     	;# 
   532  0214                     	;# 
   533  0214                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0215                     	;# 
   537  0216                     	;# 
   538  0216                     	;# 
   539  0217                     	;# 
   540  0217                     	;# 
   541  0391                     	;# 
   542  0392                     	;# 
   543  0393                     	;# 
   544  0498                     	;# 
   545  0498                     	;# 
   546  0499                     	;# 
   547  049A                     	;# 
   548  049B                     	;# 
   549  049B                     	;# 
   550  049C                     	;# 
   551  049E                     	;# 
   552  049F                     	;# 
   553  0611                     	;# 
   554  0612                     	;# 
   555  0613                     	;# 
   556  0613                     	;# 
   557  0614                     	;# 
   558  0615                     	;# 
   559  0616                     	;# 
   560  0616                     	;# 
   561  0617                     	;# 
   562  0618                     	;# 
   563  0619                     	;# 
   564  0619                     	;# 
   565  061A                     	;# 
   566  061B                     	;# 
   567  061C                     	;# 
   568  061C                     	;# 
   569  0691                     	;# 
   570  0692                     	;# 
   571  0693                     	;# 
   572  0694                     	;# 
   573  0695                     	;# 
   574  0F0F                     	;# 
   575  0F10                     	;# 
   576  0F11                     	;# 
   577  0F12                     	;# 
   578  0F13                     	;# 
   579  0F14                     	;# 
   580  0F15                     	;# 
   581  0F16                     	;# 
   582  0F17                     	;# 
   583  0F18                     	;# 
   584  0F19                     	;# 
   585  0F1A                     	;# 
   586  0F1B                     	;# 
   587  0F1C                     	;# 
   588  0F1D                     	;# 
   589  0F1E                     	;# 
   590  0F1F                     	;# 
   591  0FE3                     	;# 
   592  0FE4                     	;# 
   593  0FE5                     	;# 
   594  0FE6                     	;# 
   595  0FE7                     	;# 
   596  0FE8                     	;# 
   597  0FE9                     	;# 
   598  0FEA                     	;# 
   599  0FEB                     	;# 
   600  0FED                     	;# 
   601  0FEE                     	;# 
   602  0FEF                     	;# 
   603  0000                     	;# 
   604  0001                     	;# 
   605  0002                     	;# 
   606  0003                     	;# 
   607  0004                     	;# 
   608  0005                     	;# 
   609  0006                     	;# 
   610  0007                     	;# 
   611  0008                     	;# 
   612  0009                     	;# 
   613  000A                     	;# 
   614  000B                     	;# 
   615  000C                     	;# 
   616  000E                     	;# 
   617  0011                     	;# 
   618  0012                     	;# 
   619  0013                     	;# 
   620  0015                     	;# 
   621  0016                     	;# 
   622  0016                     	;# 
   623  0017                     	;# 
   624  0018                     	;# 
   625  0019                     	;# 
   626  001A                     	;# 
   627  001B                     	;# 
   628  001C                     	;# 
   629  008C                     	;# 
   630  008E                     	;# 
   631  0091                     	;# 
   632  0092                     	;# 
   633  0093                     	;# 
   634  0095                     	;# 
   635  0096                     	;# 
   636  0097                     	;# 
   637  0099                     	;# 
   638  009A                     	;# 
   639  009B                     	;# 
   640  009B                     	;# 
   641  009C                     	;# 
   642  009D                     	;# 
   643  009E                     	;# 
   644  009F                     	;# 
   645  010C                     	;# 
   646  010E                     	;# 
   647  0111                     	;# 
   648  0112                     	;# 
   649  0113                     	;# 
   650  0114                     	;# 
   651  0115                     	;# 
   652  0116                     	;# 
   653  0117                     	;# 
   654  0118                     	;# 
   655  0119                     	;# 
   656  011D                     	;# 
   657  018C                     	;# 
   658  018E                     	;# 
   659  0191                     	;# 
   660  0191                     	;# 
   661  0192                     	;# 
   662  0193                     	;# 
   663  0193                     	;# 
   664  0194                     	;# 
   665  0195                     	;# 
   666  0196                     	;# 
   667  0197                     	;# 
   668  020C                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0216                     	;# 
   681  0216                     	;# 
   682  0217                     	;# 
   683  0217                     	;# 
   684  0391                     	;# 
   685  0392                     	;# 
   686  0393                     	;# 
   687  0498                     	;# 
   688  0498                     	;# 
   689  0499                     	;# 
   690  049A                     	;# 
   691  049B                     	;# 
   692  049B                     	;# 
   693  049C                     	;# 
   694  049E                     	;# 
   695  049F                     	;# 
   696  0611                     	;# 
   697  0612                     	;# 
   698  0613                     	;# 
   699  0613                     	;# 
   700  0614                     	;# 
   701  0615                     	;# 
   702  0616                     	;# 
   703  0616                     	;# 
   704  0617                     	;# 
   705  0618                     	;# 
   706  0619                     	;# 
   707  0619                     	;# 
   708  061A                     	;# 
   709  061B                     	;# 
   710  061C                     	;# 
   711  061C                     	;# 
   712  0691                     	;# 
   713  0692                     	;# 
   714  0693                     	;# 
   715  0694                     	;# 
   716  0695                     	;# 
   717  0F0F                     	;# 
   718  0F10                     	;# 
   719  0F11                     	;# 
   720  0F12                     	;# 
   721  0F13                     	;# 
   722  0F14                     	;# 
   723  0F15                     	;# 
   724  0F16                     	;# 
   725  0F17                     	;# 
   726  0F18                     	;# 
   727  0F19                     	;# 
   728  0F1A                     	;# 
   729  0F1B                     	;# 
   730  0F1C                     	;# 
   731  0F1D                     	;# 
   732  0F1E                     	;# 
   733  0F1F                     	;# 
   734  0FE3                     	;# 
   735  0FE4                     	;# 
   736  0FE5                     	;# 
   737  0FE6                     	;# 
   738  0FE7                     	;# 
   739  0FE8                     	;# 
   740  0FE9                     	;# 
   741  0FEA                     	;# 
   742  0FEB                     	;# 
   743  0FED                     	;# 
   744  0FEE                     	;# 
   745  0FEF                     	;# 
   746  0000                     	;# 
   747  0001                     	;# 
   748  0002                     	;# 
   749  0003                     	;# 
   750  0004                     	;# 
   751  0005                     	;# 
   752  0006                     	;# 
   753  0007                     	;# 
   754  0008                     	;# 
   755  0009                     	;# 
   756  000A                     	;# 
   757  000B                     	;# 
   758  000C                     	;# 
   759  000E                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0015                     	;# 
   764  0016                     	;# 
   765  0016                     	;# 
   766  0017                     	;# 
   767  0018                     	;# 
   768  0019                     	;# 
   769  001A                     	;# 
   770  001B                     	;# 
   771  001C                     	;# 
   772  008C                     	;# 
   773  008E                     	;# 
   774  0091                     	;# 
   775  0092                     	;# 
   776  0093                     	;# 
   777  0095                     	;# 
   778  0096                     	;# 
   779  0097                     	;# 
   780  0099                     	;# 
   781  009A                     	;# 
   782  009B                     	;# 
   783  009B                     	;# 
   784  009C                     	;# 
   785  009D                     	;# 
   786  009E                     	;# 
   787  009F                     	;# 
   788  010C                     	;# 
   789  010E                     	;# 
   790  0111                     	;# 
   791  0112                     	;# 
   792  0113                     	;# 
   793  0114                     	;# 
   794  0115                     	;# 
   795  0116                     	;# 
   796  0117                     	;# 
   797  0118                     	;# 
   798  0119                     	;# 
   799  011D                     	;# 
   800  018C                     	;# 
   801  018E                     	;# 
   802  0191                     	;# 
   803  0191                     	;# 
   804  0192                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0197                     	;# 
   811  020C                     	;# 
   812  0211                     	;# 
   813  0211                     	;# 
   814  0212                     	;# 
   815  0212                     	;# 
   816  0213                     	;# 
   817  0213                     	;# 
   818  0214                     	;# 
   819  0214                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  0391                     	;# 
   828  0392                     	;# 
   829  0393                     	;# 
   830  0498                     	;# 
   831  0498                     	;# 
   832  0499                     	;# 
   833  049A                     	;# 
   834  049B                     	;# 
   835  049B                     	;# 
   836  049C                     	;# 
   837  049E                     	;# 
   838  049F                     	;# 
   839  0611                     	;# 
   840  0612                     	;# 
   841  0613                     	;# 
   842  0613                     	;# 
   843  0614                     	;# 
   844  0615                     	;# 
   845  0616                     	;# 
   846  0616                     	;# 
   847  0617                     	;# 
   848  0618                     	;# 
   849  0619                     	;# 
   850  0619                     	;# 
   851  061A                     	;# 
   852  061B                     	;# 
   853  061C                     	;# 
   854  061C                     	;# 
   855  0691                     	;# 
   856  0692                     	;# 
   857  0693                     	;# 
   858  0694                     	;# 
   859  0695                     	;# 
   860  0F0F                     	;# 
   861  0F10                     	;# 
   862  0F11                     	;# 
   863  0F12                     	;# 
   864  0F13                     	;# 
   865  0F14                     	;# 
   866  0F15                     	;# 
   867  0F16                     	;# 
   868  0F17                     	;# 
   869  0F18                     	;# 
   870  0F19                     	;# 
   871  0F1A                     	;# 
   872  0F1B                     	;# 
   873  0F1C                     	;# 
   874  0F1D                     	;# 
   875  0F1E                     	;# 
   876  0F1F                     	;# 
   877  0FE3                     	;# 
   878  0FE4                     	;# 
   879  0FE5                     	;# 
   880  0FE6                     	;# 
   881  0FE7                     	;# 
   882  0FE8                     	;# 
   883  0FE9                     	;# 
   884  0FEA                     	;# 
   885  0FEB                     	;# 
   886  0FED                     	;# 
   887  0FEE                     	;# 
   888  0FEF                     	;# 
   889                           
   890                           	psect	stringtext
   891  0100                     __pstringtext:	
   892  0100                     ConvertRpm2Hz@iScale:	
   893  0100  3464               	retlw	100
   894  0101  3400               	retlw	0
   895  0102  3400               	retlw	0
   896  0103  3400               	retlw	0
   897  0104                     __end_ofConvertRpm2Hz@iScale:	
   898  0104                     Wait_ms@iWAIT:	
   899  0104  3474               	retlw	116
   900  0105  3400               	retlw	0
   901  0106                     __end_ofWait_ms@iWAIT:	
   902  000B                     _INTCONbits	set	11
   903  0011                     _PIR1bits	set	17
   904  0012                     _PIR2	set	18
   905  000C                     _PORTAbits	set	12
   906  000E                     _PORTCbits	set	14
   907  001B                     _PR2	set	27
   908  001C                     _T2CON	set	28
   909  009D                     _ADCON0bits	set	157
   910  009E                     _ADCON1bits	set	158
   911  009C                     _ADRESH	set	156
   912  009B                     _ADRESL	set	155
   913  0095                     _OPTION_REGbits	set	149
   914  0099                     _OSCCONbits	set	153
   915  009A                     _OSCSTATbits	set	154
   916  0091                     _PIE1bits	set	145
   917  008C                     _TRISA	set	140
   918  008C                     _TRISAbits	set	140
   919  008E                     _TRISC	set	142
   920  008E                     _TRISCbits	set	142
   921  010C                     _LATA	set	268
   922  010C                     _LATAbits	set	268
   923  010E                     _LATC	set	270
   924  010E                     _LATCbits	set	270
   925  018C                     _ANSELA	set	396
   926  018C                     _ANSELAbits	set	396
   927  018E                     _ANSELC	set	398
   928  018E                     _ANSELCbits	set	398
   929  0192                     _PMADRH	set	402
   930  0191                     _PMADRL	set	401
   931  0195                     _PMCON1bits	set	405
   932  0196                     _PMCON2	set	406
   933  0194                     _PMDATH	set	404
   934  0193                     _PMDATL	set	403
   935  0212                     _SSPADD	set	530
   936  0215                     _SSPCON1	set	533
   937  0215                     _SSPCON1bits	set	533
   938  0216                     _SSPCON2	set	534
   939  0217                     _SSPCON3	set	535
   940  0214                     _SSPSTAT	set	532
   941  020C                     _WPUAbits	set	524
   942  0616                     _PWM2CON	set	1558
   943  0615                     _PWM2DCH	set	1557
   944  0614                     _PWM2DCL	set	1556
   945                           
   946                           ; #config settings
   947  0000                     
   948                           	psect	cinit
   949  07EF                     start_initialization:	
   950  07EF                     __initialization:	
   951                           
   952                           ; Clear objects allocated to BANK0
   953  07EF  01E3               	clrf	__pbssBANK0& (0+127)
   954  07F0  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   955  07F1  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   956  07F2  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   957  07F3  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   958  07F4  01E8               	clrf	(__pbssBANK0+5)& (0+127)
   959  07F5  01E9               	clrf	(__pbssBANK0+6)& (0+127)
   960  07F6  01EA               	clrf	(__pbssBANK0+7)& (0+127)
   961  07F7  01EB               	clrf	(__pbssBANK0+8)& (0+127)
   962  07F8  01EC               	clrf	(__pbssBANK0+9)& (0+127)
   963                           
   964                           ; Clear objects allocated to BANK1
   965  07F9  0021               	movlb	1	; select bank1
   966  07FA  01A0               	clrf	__pbssBANK1& (0+127)
   967  07FB  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   968  07FC  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   969  07FD  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   970  07FE                     end_of_initialization:	
   971                           ;End of C runtime variable initialization code
   972                           
   973  07FE                     __end_of__initialization:	
   974  07FE  0020               	movlb	0
   975  07FF  2906               	ljmp	_main	;jump to C main() function
   976                           
   977                           	psect	bssBANK0
   978  0063                     __pbssBANK0:	
   979  0063                     CleanKeeperController@iOverLoadTimer:	
   980  0063                     	ds	4
   981  0067                     CleanKeeperController@iState:	
   982  0067                     	ds	2
   983  0069                     CleanKeeperController@bSignalDirection:	
   984  0069                     	ds	1
   985  006A                     CleanKeeperController@bSignalOverload:	
   986  006A                     	ds	1
   987  006B                     CleanKeeperController@bSignalRelay:	
   988  006B                     	ds	1
   989  006C                     _ADDRESS:	
   990  006C                     	ds	1
   991                           
   992                           	psect	bssBANK1
   993  00A0                     __pbssBANK1:	
   994  00A0                     CleanKeeperController@iTimer:	
   995  00A0                     	ds	4
   996                           
   997                           	psect	cstackCOMMON
   998  0070                     __pcstackCOMMON:	
   999  0070                     ?_InitGPIO:	
  1000  0070                     ??_InitGPIO:	
  1001                           ; 0 bytes @ 0x0
  1002                           
  1003  0070                     ?_InitAddress:	
  1004                           ; 0 bytes @ 0x0
  1005                           
  1006  0070                     ?_ConfigureOscillator:	
  1007                           ; 0 bytes @ 0x0
  1008                           
  1009  0070                     ??_ConfigureOscillator:	
  1010                           ; 0 bytes @ 0x0
  1011                           
  1012  0070                     ?_InitApp:	
  1013                           ; 0 bytes @ 0x0
  1014                           
  1015  0070                     ?_SetPWMDutyCycle:	
  1016                           ; 0 bytes @ 0x0
  1017                           
  1018  0070                     ?_CleanKeeperInit:	
  1019                           ; 0 bytes @ 0x0
  1020                           
  1021  0070                     ?_CleanKeeperController:	
  1022                           ; 0 bytes @ 0x0
  1023                           
  1024  0070                     ??_CleanKeeperController:	
  1025                           ; 0 bytes @ 0x0
  1026                           
  1027  0070                     ?_main:	
  1028                           ; 0 bytes @ 0x0
  1029                           
  1030  0070                     ?_ReadFlash:	
  1031                           ; 0 bytes @ 0x0
  1032                           
  1033  0070                     ?_LimitFreq:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     ?___ftpack:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039  0070                     ?___lmul:	
  1040                           ; 3 bytes @ 0x0
  1041                           
  1042  0070                     ReadFlash@address:	
  1043                           ; 4 bytes @ 0x0
  1044                           
  1045  0070                     LimitFreq@iFreq:	
  1046                           ; 2 bytes @ 0x0
  1047                           
  1048  0070                     SetPWMDutyCycle@DutyCycle:	
  1049                           ; 2 bytes @ 0x0
  1050                           
  1051  0070                     ___ftpack@arg:	
  1052                           ; 2 bytes @ 0x0
  1053                           
  1054  0070                     ___lmul@multiplier:	
  1055                           ; 3 bytes @ 0x0
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x0
  1059  0070                     	ds	2
  1060  0072                     ??_ReadFlash:	
  1061  0072                     ??_LimitFreq:	
  1062                           ; 0 bytes @ 0x2
  1063                           
  1064  0072                     ??_SetPWMDutyCycle:	
  1065                           ; 0 bytes @ 0x2
  1066                           
  1067  0072                     LimitFreq@iLimited:	
  1068                           ; 0 bytes @ 0x2
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x2
  1072  0072                     	ds	1
  1073  0073                     ___ftpack@exp:	
  1074                           
  1075                           ; 1 bytes @ 0x3
  1076  0073                     	ds	1
  1077  0074                     CleanKeeperController@bRed:	
  1078  0074                     ___ftpack@sign:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081  0074                     ReadFlash@data:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0074                     ___lmul@multiplicand:	
  1085                           ; 2 bytes @ 0x4
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x4
  1089  0074                     	ds	1
  1090  0075                     ??___ftpack:	
  1091  0075                     CleanKeeperController@bGreen:	
  1092                           ; 0 bytes @ 0x5
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x5
  1096  0075                     	ds	1
  1097  0076                     ??_InitAddress:	
  1098                           
  1099                           ; 0 bytes @ 0x6
  1100  0076                     	ds	2
  1101  0078                     ??___lmul:	
  1102  0078                     ?___lwtoft:	
  1103                           ; 0 bytes @ 0x8
  1104                           
  1105  0078                     InitAddress@addr:	
  1106                           ; 3 bytes @ 0x8
  1107                           
  1108  0078                     ___lwtoft@c:	
  1109                           ; 2 bytes @ 0x8
  1110                           
  1111  0078                     ___lmul@product:	
  1112                           ; 2 bytes @ 0x8
  1113                           
  1114                           
  1115                           ; 4 bytes @ 0x8
  1116  0078                     	ds	2
  1117  007A                     ??_InitApp:	
  1118                           
  1119                           ; 0 bytes @ 0xA
  1120  007A                     	ds	1
  1121  007B                     ??___lwtoft:	
  1122                           
  1123                           ; 0 bytes @ 0xB
  1124  007B                     	ds	1
  1125  007C                     ??_PulseOut:	
  1126  007C                     ??___aldiv:	
  1127                           ; 0 bytes @ 0xC
  1128                           
  1129                           
  1130                           ; 0 bytes @ 0xC
  1131  007C                     	ds	1
  1132  007D                     ??_ConvertRpm2Hz:	
  1133                           
  1134                           ; 0 bytes @ 0xD
  1135  007D                     	ds	1
  1136  007E                     ??_CleanKeeperInit:	
  1137  007E                     ??_main:	
  1138                           ; 0 bytes @ 0xE
  1139                           
  1140                           
  1141                           	psect	cstackBANK0
  1142  0020                     __pcstackBANK0:	
  1143                           ; 0 bytes @ 0xE
  1144                           
  1145  0020                     ?___ftmul:	
  1146  0020                     ?___aldiv:	
  1147                           ; 3 bytes @ 0x0
  1148                           
  1149  0020                     ___ftmul@f1:	
  1150                           ; 4 bytes @ 0x0
  1151                           
  1152  0020                     ___aldiv@divisor:	
  1153                           ; 3 bytes @ 0x0
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x0
  1157  0020                     	ds	3
  1158  0023                     ___ftmul@f2:	
  1159                           
  1160                           ; 3 bytes @ 0x3
  1161  0023                     	ds	1
  1162  0024                     ___aldiv@dividend:	
  1163                           
  1164                           ; 4 bytes @ 0x4
  1165  0024                     	ds	2
  1166  0026                     ??___ftmul:	
  1167                           
  1168                           ; 0 bytes @ 0x6
  1169  0026                     	ds	2
  1170  0028                     ___aldiv@counter:	
  1171                           
  1172                           ; 1 bytes @ 0x8
  1173  0028                     	ds	1
  1174  0029                     ___aldiv@sign:	
  1175                           
  1176                           ; 1 bytes @ 0x9
  1177  0029                     	ds	1
  1178  002A                     ___ftmul@exp:	
  1179  002A                     ___aldiv@quotient:	
  1180                           ; 1 bytes @ 0xA
  1181                           
  1182                           
  1183                           ; 4 bytes @ 0xA
  1184  002A                     	ds	1
  1185  002B                     ___ftmul@f3_as_product:	
  1186                           
  1187                           ; 3 bytes @ 0xB
  1188  002B                     	ds	3
  1189  002E                     ?_ConvertRpm2Hz:	
  1190  002E                     ___ftmul@cntr:	
  1191                           ; 2 bytes @ 0xE
  1192                           
  1193  002E                     ConvertRpm2Hz@iRpm:	
  1194                           ; 1 bytes @ 0xE
  1195                           
  1196                           
  1197                           ; 2 bytes @ 0xE
  1198  002E                     	ds	1
  1199  002F                     ___ftmul@sign:	
  1200                           
  1201                           ; 1 bytes @ 0xF
  1202  002F                     	ds	1
  1203  0030                     ?___ftdiv:	
  1204  0030                     ___ftdiv@f2:	
  1205                           ; 3 bytes @ 0x10
  1206                           
  1207  0030                     _ConvertRpm2Hz$1026:	
  1208                           ; 3 bytes @ 0x10
  1209                           
  1210                           
  1211                           ; 4 bytes @ 0x10
  1212  0030                     	ds	3
  1213  0033                     ___ftdiv@f1:	
  1214                           
  1215                           ; 3 bytes @ 0x13
  1216  0033                     	ds	1
  1217  0034                     ConvertRpm2Hz@iHertz:	
  1218                           
  1219                           ; 4 bytes @ 0x14
  1220  0034                     	ds	2
  1221  0036                     ??___ftdiv:	
  1222                           
  1223                           ; 0 bytes @ 0x16
  1224  0036                     	ds	4
  1225  003A                     ___ftdiv@cntr:	
  1226                           
  1227                           ; 1 bytes @ 0x1A
  1228  003A                     	ds	1
  1229  003B                     ___ftdiv@f3:	
  1230                           
  1231                           ; 3 bytes @ 0x1B
  1232  003B                     	ds	3
  1233  003E                     ___ftdiv@exp:	
  1234                           
  1235                           ; 1 bytes @ 0x1E
  1236  003E                     	ds	1
  1237  003F                     ___ftdiv@sign:	
  1238                           
  1239                           ; 1 bytes @ 0x1F
  1240  003F                     	ds	1
  1241  0040                     ?___ftadd:	
  1242  0040                     ___ftadd@f1:	
  1243                           ; 3 bytes @ 0x20
  1244                           
  1245                           
  1246                           ; 3 bytes @ 0x20
  1247  0040                     	ds	3
  1248  0043                     ___ftadd@f2:	
  1249                           
  1250                           ; 3 bytes @ 0x23
  1251  0043                     	ds	3
  1252  0046                     ??___ftadd:	
  1253                           
  1254                           ; 0 bytes @ 0x26
  1255  0046                     	ds	4
  1256  004A                     ___ftadd@sign:	
  1257                           
  1258                           ; 1 bytes @ 0x2A
  1259  004A                     	ds	1
  1260  004B                     ___ftadd@exp2:	
  1261                           
  1262                           ; 1 bytes @ 0x2B
  1263  004B                     	ds	1
  1264  004C                     ___ftadd@exp1:	
  1265                           
  1266                           ; 1 bytes @ 0x2C
  1267  004C                     	ds	1
  1268  004D                     ?___fttol:	
  1269  004D                     ___fttol@f1:	
  1270                           ; 4 bytes @ 0x2D
  1271                           
  1272                           
  1273                           ; 3 bytes @ 0x2D
  1274  004D                     	ds	4
  1275  0051                     ??___fttol:	
  1276                           
  1277                           ; 0 bytes @ 0x31
  1278  0051                     	ds	4
  1279  0055                     ___fttol@sign1:	
  1280                           
  1281                           ; 1 bytes @ 0x35
  1282  0055                     	ds	1
  1283  0056                     ___fttol@lval:	
  1284                           
  1285                           ; 4 bytes @ 0x36
  1286  0056                     	ds	4
  1287  005A                     ___fttol@exp1:	
  1288                           
  1289                           ; 1 bytes @ 0x3A
  1290  005A                     	ds	1
  1291  005B                     ?_PulseOut:	
  1292  005B                     PulseOut@iFreq:	
  1293                           ; 0 bytes @ 0x3B
  1294                           
  1295                           
  1296                           ; 2 bytes @ 0x3B
  1297  005B                     	ds	2
  1298  005D                     PulseOut@iPR2:	
  1299                           
  1300                           ; 2 bytes @ 0x3D
  1301  005D                     	ds	2
  1302  005F                     PulseOut@iLimitedFreq:	
  1303                           
  1304                           ; 2 bytes @ 0x3F
  1305  005F                     	ds	2
  1306  0061                     CleanKeeperInit@iHertz:	
  1307                           
  1308                           ; 2 bytes @ 0x41
  1309  0061                     	ds	2
  1310                           
  1311                           	psect	maintext
  1312  0106                     __pmaintext:	
  1313 ;;
  1314 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1315 ;;
  1316 ;; *************** function _main *****************
  1317 ;; Defined at:
  1318 ;;		line 25 in file "main.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : B1F/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         0       0       0
  1334 ;;      Temps:          0       0       0
  1335 ;;      Totals:         0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels required when called:    4
  1338 ;; This function calls:
  1339 ;;		_CleanKeeperController
  1340 ;;		_CleanKeeperInit
  1341 ;;		_ConfigureOscillator
  1342 ;;		_InitApp
  1343 ;; This function is called by:
  1344 ;;		Startup code after reset
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _main
  1350  0106                     _main:	
  1351                           
  1352                           ;main.c: 28: ConfigureOscillator();
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1356  0106  2111               	fcall	_ConfigureOscillator
  1357                           
  1358                           ;main.c: 31: InitApp();
  1359  0107  20FD               	fcall	_InitApp
  1360                           
  1361                           ;main.c: 32: CleanKeeperInit();
  1362  0108  214A               	fcall	_CleanKeeperInit
  1363  0109                     l2015:	
  1364                           ;main.c: 35: while (1)
  1365                           
  1366                           
  1367                           ;main.c: 36: {
  1368                           ;main.c: 37: CleanKeeperController();
  1369  0109  26EB               	fcall	_CleanKeeperController
  1370  010A  2909               	goto	l2015
  1371  010B                     __end_of_main:	
  1372                           
  1373                           	psect	text1
  1374  00FD                     __ptext1:	
  1375 ;; *************** function _InitApp *****************
  1376 ;; Defined at:
  1377 ;;		line 19 in file "user.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1
  1391 ;;      Params:         0       0       0
  1392 ;;      Locals:         0       0       0
  1393 ;;      Temps:          0       0       0
  1394 ;;      Totals:         0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    2
  1398 ;; This function calls:
  1399 ;;		_InitAddress
  1400 ;;		_InitGPIO
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           
  1407                           ;psect for function _InitApp
  1408  00FD                     _InitApp:	
  1409                           
  1410                           ;user.c: 21: InitGPIO();
  1411                           
  1412                           ;incstack = 0
  1413                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1414  00FD  216B               	fcall	_InitGPIO
  1415                           
  1416                           ;user.c: 22: InitAddress();
  1417  00FE  212B               	fcall	_InitAddress
  1418  00FF  0008               	return
  1419  0100                     __end_of_InitApp:	
  1420                           
  1421                           	psect	text2
  1422  016B                     __ptext2:	
  1423 ;; *************** function _InitGPIO *****************
  1424 ;; Defined at:
  1425 ;;		line 36 in file "user.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;		None               void
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1
  1439 ;;      Params:         0       0       0
  1440 ;;      Locals:         0       0       0
  1441 ;;      Temps:          0       0       0
  1442 ;;      Totals:         0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_InitApp
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _InitGPIO
  1454  016B                     _InitGPIO:	
  1455                           
  1456                           ;user.c: 38: ANSELC = 0x00;
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _InitGPIO: [wreg+status,2+status,0]
  1460  016B  0023               	movlb	3	; select bank3
  1461  016C  018E               	clrf	14	;volatile
  1462                           
  1463                           ;user.c: 39: ANSELA = 0x00;
  1464  016D  018C               	clrf	12	;volatile
  1465                           
  1466                           ;user.c: 42: TRISA = 0x00;
  1467  016E  0021               	movlb	1	; select bank1
  1468  016F  018C               	clrf	12	;volatile
  1469                           
  1470                           ;user.c: 43: TRISC = 0xFF;
  1471  0170  30FF               	movlw	255
  1472  0171  008E               	movwf	14	;volatile
  1473                           
  1474                           ;user.c: 46: LATA = 0x00;
  1475  0172  0022               	movlb	2	; select bank2
  1476  0173  018C               	clrf	12	;volatile
  1477                           
  1478                           ;user.c: 47: LATC = 0x00;
  1479  0174  018E               	clrf	14	;volatile
  1480                           
  1481                           ;user.c: 49: TRISCbits.TRISC0 = 1;
  1482  0175  0021               	movlb	1	; select bank1
  1483  0176  140E               	bsf	14,0	;volatile
  1484                           
  1485                           ;user.c: 50: TRISCbits.TRISC1 = 1;
  1486  0177  148E               	bsf	14,1	;volatile
  1487                           
  1488                           ;user.c: 51: LATCbits.LATC0 = 0;
  1489  0178  0022               	movlb	2	; select bank2
  1490  0179  100E               	bcf	14,0	;volatile
  1491                           
  1492                           ;user.c: 52: LATCbits.LATC1 = 0;
  1493  017A  108E               	bcf	14,1	;volatile
  1494                           
  1495                           ;user.c: 54: TRISCbits.TRISC4 = 0;
  1496  017B  0021               	movlb	1	; select bank1
  1497  017C  120E               	bcf	14,4	;volatile
  1498                           
  1499                           ;user.c: 55: TRISCbits.TRISC2 = 0;
  1500  017D  110E               	bcf	14,2	;volatile
  1501                           
  1502                           ;user.c: 56: LATCbits.LATC4 = 0;
  1503  017E  0022               	movlb	2	; select bank2
  1504  017F  120E               	bcf	14,4	;volatile
  1505                           
  1506                           ;user.c: 57: LATCbits.LATC2 = 0;
  1507  0180  110E               	bcf	14,2	;volatile
  1508                           
  1509                           ;user.c: 59: OPTION_REGbits.nWPUEN = 0;
  1510  0181  0021               	movlb	1	; select bank1
  1511  0182  1395               	bcf	21,7	;volatile
  1512                           
  1513                           ;user.c: 60: WPUAbits.WPUA = 0x20;
  1514  0183  0024               	movlb	4	; select bank4
  1515  0184  080C               	movf	12,w	;volatile
  1516  0185  39C0               	andlw	-64
  1517  0186  3820               	iorlw	32
  1518  0187  008C               	movwf	12	;volatile
  1519                           
  1520                           ;user.c: 61: TRISAbits.TRISA5 = 1;
  1521  0188  0021               	movlb	1	; select bank1
  1522  0189  168C               	bsf	12,5	;volatile
  1523                           
  1524                           ;user.c: 62: LATAbits.LATA5 = 0;
  1525  018A  0022               	movlb	2	; select bank2
  1526  018B  128C               	bcf	12,5	;volatile
  1527  018C  0008               	return
  1528  018D                     __end_of_InitGPIO:	
  1529                           
  1530                           	psect	text3
  1531  012B                     __ptext3:	
  1532 ;; *************** function _InitAddress *****************
  1533 ;; Defined at:
  1534 ;;		line 74 in file "user.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  addr            2    8[COMMON] unsigned int 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1
  1548 ;;      Params:         0       0       0
  1549 ;;      Locals:         2       0       0
  1550 ;;      Temps:          2       0       0
  1551 ;;      Totals:         4       0       0
  1552 ;;Total ram usage:        4 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    1
  1555 ;; This function calls:
  1556 ;;		_ReadFlash
  1557 ;; This function is called by:
  1558 ;;		_InitApp
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _InitAddress
  1564  012B                     _InitAddress:	
  1565                           
  1566                           ;user.c: 76: unsigned int addr;
  1567                           ;user.c: 77: addr = ReadFlash(0x7FF);
  1568                           
  1569                           ;incstack = 0
  1570                           ; Regs used in _InitAddress: [wreg+status,2+status,0+pclath+cstack]
  1571  012B  30FF               	movlw	255
  1572  012C  00F0               	movwf	ReadFlash@address
  1573  012D  3007               	movlw	7
  1574  012E  00F1               	movwf	ReadFlash@address+1
  1575  012F  218D               	fcall	_ReadFlash
  1576  0130  0871               	movf	?_ReadFlash+1,w
  1577  0131  00F9               	movwf	InitAddress@addr+1
  1578  0132  0870               	movf	?_ReadFlash,w
  1579  0133  00F8               	movwf	InitAddress@addr
  1580                           
  1581                           ;user.c: 78: if ((addr & 0xFF) == 0xFF)
  1582  0134  30FF               	movlw	255
  1583  0135  0578               	andwf	InitAddress@addr,w
  1584  0136  00F6               	movwf	??_InitAddress
  1585  0137  3000               	movlw	0
  1586  0138  0579               	andwf	InitAddress@addr+1,w
  1587  0139  00F7               	movwf	??_InitAddress+1
  1588  013A  0A76               	incf	??_InitAddress,w
  1589  013B  0477               	iorwf	??_InitAddress+1,w
  1590  013C  1D03               	btfss	3,2
  1591  013D  2944               	goto	l1795
  1592                           
  1593                           ;user.c: 79: ADDRESS = 0x21;
  1594  013E  3021               	movlw	33
  1595  013F  00F6               	movwf	??_InitAddress
  1596  0140  0876               	movf	??_InitAddress,w
  1597  0141  0020               	movlb	0	; select bank0
  1598  0142  00EC               	movwf	_ADDRESS
  1599  0143  0008               	return
  1600  0144                     l1795:	
  1601                           
  1602                           ;user.c: 80: else
  1603                           ;user.c: 81: ADDRESS = addr & 0xFF;
  1604  0144  0878               	movf	InitAddress@addr,w
  1605  0145  00F6               	movwf	??_InitAddress
  1606  0146  0876               	movf	??_InitAddress,w
  1607  0147  0020               	movlb	0	; select bank0
  1608  0148  00EC               	movwf	_ADDRESS
  1609  0149  0008               	return
  1610  014A                     __end_of_InitAddress:	
  1611                           
  1612                           	psect	text4
  1613  018D                     __ptext4:	
  1614 ;; *************** function _ReadFlash *****************
  1615 ;; Defined at:
  1616 ;;		line 84 in file "user.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  address         2    0[COMMON] unsigned int 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  data            2    4[COMMON] unsigned int 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  2    0[COMMON] unsigned int 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMMON   BANK0   BANK1
  1630 ;;      Params:         2       0       0
  1631 ;;      Locals:         2       0       0
  1632 ;;      Temps:          2       0       0
  1633 ;;      Totals:         6       0       0
  1634 ;;Total ram usage:        6 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_InitAddress
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function _ReadFlash
  1645  018D                     _ReadFlash:	
  1646                           
  1647                           ;user.c: 86: unsigned int data = 0;
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in _ReadFlash: [wreg+status,2+status,0]
  1651  018D  01F4               	clrf	ReadFlash@data
  1652  018E  01F5               	clrf	ReadFlash@data+1
  1653                           
  1654                           ;user.c: 87: PMADRL = address & 0x00FF;
  1655  018F  0870               	movf	ReadFlash@address,w
  1656  0190  0023               	movlb	3	; select bank3
  1657  0191  0091               	movwf	17	;volatile
  1658                           
  1659                           ;user.c: 88: address >>= 8;
  1660  0192  3008               	movlw	8
  1661  0193                     u1415:	
  1662  0193  36F1               	lsrf	ReadFlash@address+1,f
  1663  0194  0CF0               	rrf	ReadFlash@address,f
  1664  0195  0B89               	decfsz	9,f
  1665  0196  2993               	goto	u1415
  1666                           
  1667                           ;user.c: 89: PMADRH = address & 0x00FF;
  1668  0197  0870               	movf	ReadFlash@address,w
  1669  0198  0092               	movwf	18	;volatile
  1670                           
  1671                           ;user.c: 90: PMCON1bits.CFGS = 0;
  1672  0199  1315               	bcf	21,6	;volatile
  1673                           
  1674                           ;user.c: 91: PMCON1bits.RD = 1;
  1675  019A  1415               	bsf	21,0	;volatile
  1676  019B  0000               	nop	;# 
  1677  019C  0000               	nop	;# 
  1678                           
  1679                           ;user.c: 95: data = PMDATH;
  1680  019D  0023               	movlb	3	; select bank3
  1681  019E  0814               	movf	20,w	;volatile
  1682  019F  00F2               	movwf	??_ReadFlash
  1683  01A0  01F3               	clrf	??_ReadFlash+1
  1684  01A1  0872               	movf	??_ReadFlash,w
  1685  01A2  00F4               	movwf	ReadFlash@data
  1686  01A3  0873               	movf	??_ReadFlash+1,w
  1687  01A4  00F5               	movwf	ReadFlash@data+1
  1688                           
  1689                           ;user.c: 96: data <<= 8;
  1690  01A5  3008               	movlw	8
  1691  01A6                     u1425:	
  1692  01A6  35F4               	lslf	ReadFlash@data,f
  1693  01A7  0DF5               	rlf	ReadFlash@data+1,f
  1694  01A8  0B89               	decfsz	9,f
  1695  01A9  29A6               	goto	u1425
  1696                           
  1697                           ;user.c: 97: data |= PMDATL;
  1698  01AA  0813               	movf	19,w	;volatile
  1699  01AB  00F2               	movwf	??_ReadFlash
  1700  01AC  01F3               	clrf	??_ReadFlash+1
  1701  01AD  0872               	movf	??_ReadFlash,w
  1702  01AE  04F4               	iorwf	ReadFlash@data,f
  1703  01AF  0873               	movf	??_ReadFlash+1,w
  1704  01B0  04F5               	iorwf	ReadFlash@data+1,f
  1705                           
  1706                           ;user.c: 98: return data;
  1707  01B1  0875               	movf	ReadFlash@data+1,w
  1708  01B2  00F1               	movwf	?_ReadFlash+1
  1709  01B3  0874               	movf	ReadFlash@data,w
  1710  01B4  00F0               	movwf	?_ReadFlash
  1711  01B5  0008               	return
  1712  01B6                     __end_of_ReadFlash:	
  1713                           
  1714                           	psect	text5
  1715  0111                     __ptext5:	
  1716 ;; *************** function _ConfigureOscillator *****************
  1717 ;; Defined at:
  1718 ;;		line 10 in file "system.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMMON   BANK0   BANK1
  1732 ;;      Params:         0       0       0
  1733 ;;      Locals:         0       0       0
  1734 ;;      Temps:          0       0       0
  1735 ;;      Totals:         0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _ConfigureOscillator
  1747  0111                     _ConfigureOscillator:	
  1748                           
  1749                           ;system.c: 12: OSCCONbits.IRCF = 0b1111;
  1750                           
  1751                           ;incstack = 0
  1752                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  1753  0111  3078               	movlw	120
  1754  0112  0021               	movlb	1	; select bank1
  1755  0113  0499               	iorwf	25,f	;volatile
  1756                           
  1757                           ;system.c: 13: OSCCONbits.SCS = 0b11;
  1758  0114  3003               	movlw	3
  1759  0115  0499               	iorwf	25,f	;volatile
  1760  0116                     l7:	
  1761                           ;system.c: 15: while(!OSCSTATbits.HFIOFR);
  1762                           
  1763  0116  1A1A               	btfsc	26,4	;volatile
  1764  0117  0008               	return
  1765  0118  2916               	goto	l7
  1766  0119                     __end_of_ConfigureOscillator:	
  1767                           
  1768                           	psect	text6
  1769  014A                     __ptext6:	
  1770 ;; *************** function _CleanKeeperInit *****************
  1771 ;; Defined at:
  1772 ;;		line 119 in file "cleankeeper.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  iHertz          2   65[BANK0 ] int 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;		None               void
  1779 ;; Registers used:
  1780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMMON   BANK0   BANK1
  1786 ;;      Params:         0       0       0
  1787 ;;      Locals:         0       2       0
  1788 ;;      Temps:          0       0       0
  1789 ;;      Totals:         0       2       0
  1790 ;;Total ram usage:        2 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    3
  1793 ;; This function calls:
  1794 ;;		_ConvertRpm2Hz
  1795 ;;		_PulseOut
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _CleanKeeperInit
  1803  014A                     _CleanKeeperInit:	
  1804                           
  1805                           ;cleankeeper.c: 121: int iHertz;
  1806                           ;cleankeeper.c: 124: LATAbits.LATA4 = 0;
  1807                           
  1808                           ;incstack = 0
  1809                           ; Regs used in _CleanKeeperInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1810  014A  0022               	movlb	2	; select bank2
  1811  014B  120C               	bcf	12,4	;volatile
  1812                           
  1813                           ;cleankeeper.c: 127: iHertz = ConvertRpm2Hz(51);
  1814  014C  3033               	movlw	51
  1815  014D  0020               	movlb	0	; select bank0
  1816  014E  00AE               	movwf	ConvertRpm2Hz@iRpm
  1817  014F  3000               	movlw	0
  1818  0150  00AF               	movwf	ConvertRpm2Hz@iRpm+1
  1819  0151  227B               	fcall	_ConvertRpm2Hz
  1820  0152  0020               	movlb	0	; select bank0
  1821  0153  082F               	movf	?_ConvertRpm2Hz+1,w
  1822  0154  00E2               	movwf	CleanKeeperInit@iHertz+1
  1823  0155  082E               	movf	?_ConvertRpm2Hz,w
  1824  0156  00E1               	movwf	CleanKeeperInit@iHertz
  1825                           
  1826                           ;cleankeeper.c: 128: if (PORTAbits.RA0 == 1)
  1827  0157  1C0C               	btfss	12,0	;volatile
  1828  0158  295E               	goto	l1885
  1829                           
  1830                           ;cleankeeper.c: 129: iHertz*=4;
  1831  0159  3002               	movlw	2
  1832  015A                     u2205:	
  1833  015A  35E1               	lslf	CleanKeeperInit@iHertz,f
  1834  015B  0DE2               	rlf	CleanKeeperInit@iHertz+1,f
  1835  015C  0B89               	decfsz	9,f
  1836  015D  295A               	goto	u2205
  1837  015E                     l1885:	
  1838                           
  1839                           ;cleankeeper.c: 130: if (PORTAbits.RA1 == 1)
  1840  015E  1C8C               	btfss	12,1	;volatile
  1841  015F  2965               	goto	l1889
  1842                           
  1843                           ;cleankeeper.c: 131: iHertz*=16;
  1844  0160  3004               	movlw	4
  1845  0161                     u2225:	
  1846  0161  35E1               	lslf	CleanKeeperInit@iHertz,f
  1847  0162  0DE2               	rlf	CleanKeeperInit@iHertz+1,f
  1848  0163  0B89               	decfsz	9,f
  1849  0164  2961               	goto	u2225
  1850  0165                     l1889:	
  1851                           
  1852                           ;cleankeeper.c: 132: PulseOut(iHertz);
  1853  0165  0862               	movf	CleanKeeperInit@iHertz+1,w
  1854  0166  00DC               	movwf	PulseOut@iFreq+1
  1855  0167  0861               	movf	CleanKeeperInit@iHertz,w
  1856  0168  00DB               	movwf	PulseOut@iFreq
  1857  0169  249B               	fcall	_PulseOut
  1858  016A  0008               	return
  1859  016B                     __end_of_CleanKeeperInit:	
  1860                           
  1861                           	psect	text7
  1862  049B                     __ptext7:	
  1863 ;; *************** function _PulseOut *****************
  1864 ;; Defined at:
  1865 ;;		line 404 in file "user.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  iFreq           2   59[BANK0 ] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  iLimitedFreq    2   63[BANK0 ] unsigned int 
  1870 ;;  iPR2            2   61[BANK0 ] unsigned int 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;		None               void
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0, pclath, cstack
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1
  1880 ;;      Params:         0       2       0
  1881 ;;      Locals:         0       4       0
  1882 ;;      Temps:          2       0       0
  1883 ;;      Totals:         2       6       0
  1884 ;;Total ram usage:        8 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    2
  1887 ;; This function calls:
  1888 ;;		_LimitFreq
  1889 ;;		_SetPWMDutyCycle
  1890 ;;		___ftadd
  1891 ;;		___ftdiv
  1892 ;;		___ftmul
  1893 ;;		___fttol
  1894 ;;		___lwtoft
  1895 ;; This function is called by:
  1896 ;;		_CleanKeeperInit
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _PulseOut
  1902  049B                     _PulseOut:	
  1903                           
  1904                           ;user.c: 406: unsigned int iPR2;
  1905                           ;user.c: 407: unsigned int iLimitedFreq;
  1906                           ;user.c: 409: iLimitedFreq = LimitFreq(iFreq);
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _PulseOut: [wreg+status,2+status,0+pclath+cstack]
  1910  049B  0020               	movlb	0	; select bank0
  1911  049C  085C               	movf	PulseOut@iFreq+1,w
  1912  049D  00F1               	movwf	LimitFreq@iFreq+1
  1913  049E  085B               	movf	PulseOut@iFreq,w
  1914  049F  00F0               	movwf	LimitFreq@iFreq
  1915  04A0  21E5               	fcall	_LimitFreq
  1916  04A1  0871               	movf	?_LimitFreq+1,w
  1917  04A2  0020               	movlb	0	; select bank0
  1918  04A3  00E0               	movwf	PulseOut@iLimitedFreq+1
  1919  04A4  0870               	movf	?_LimitFreq,w
  1920  04A5  00DF               	movwf	PulseOut@iLimitedFreq
  1921                           
  1922                           ;user.c: 414: TRISCbits.TRISC3 = 0;
  1923  04A6  0021               	movlb	1	; select bank1
  1924  04A7  118E               	bcf	14,3	;volatile
  1925                           
  1926                           ;user.c: 415: PWM2CON = 0xC0;
  1927  04A8  30C0               	movlw	192
  1928  04A9  002C               	movlb	12	; select bank12
  1929  04AA  0096               	movwf	22	;volatile
  1930                           
  1931                           ;user.c: 416: PIR2 = 0x00;
  1932  04AB  0020               	movlb	0	; select bank0
  1933  04AC  0192               	clrf	18	;volatile
  1934                           
  1935                           ;user.c: 420: if (iLimitedFreq<=920)
  1936  04AD  3003               	movlw	3
  1937  04AE  0260               	subwf	PulseOut@iLimitedFreq+1,w
  1938  04AF  3099               	movlw	153
  1939  04B0  1903               	skipnz
  1940  04B1  025F               	subwf	PulseOut@iLimitedFreq,w
  1941  04B2  1803               	skipnc
  1942  04B3  2CF0               	goto	l1815
  1943                           
  1944                           ;user.c: 421: {
  1945                           ;user.c: 422: PR2 = (1/(iLimitedFreq*0.000016)-1);
  1946  04B4  3000               	movlw	0
  1947  04B5  00B3               	movwf	___ftdiv@f1
  1948  04B6  3080               	movlw	128
  1949  04B7  00B4               	movwf	___ftdiv@f1+1
  1950  04B8  303F               	movlw	63
  1951  04B9  00B5               	movwf	___ftdiv@f1+2
  1952  04BA  0860               	movf	PulseOut@iLimitedFreq+1,w
  1953  04BB  00F9               	movwf	___lwtoft@c+1
  1954  04BC  085F               	movf	PulseOut@iLimitedFreq,w
  1955  04BD  00F8               	movwf	___lwtoft@c
  1956  04BE  2119               	fcall	___lwtoft
  1957  04BF  0878               	movf	?___lwtoft,w
  1958  04C0  0020               	movlb	0	; select bank0
  1959  04C1  00A3               	movwf	___ftmul@f2
  1960  04C2  0879               	movf	?___lwtoft+1,w
  1961  04C3  00A4               	movwf	___ftmul@f2+1
  1962  04C4  087A               	movf	?___lwtoft+2,w
  1963  04C5  00A5               	movwf	___ftmul@f2+2
  1964  04C6  3038               	movlw	56
  1965  04C7  00A0               	movwf	___ftmul@f1
  1966  04C8  3086               	movlw	134
  1967  04C9  00A1               	movwf	___ftmul@f1+1
  1968  04CA  3037               	movlw	55
  1969  04CB  00A2               	movwf	___ftmul@f1+2
  1970  04CC  2543               	fcall	___ftmul
  1971  04CD  0020               	movlb	0	; select bank0
  1972  04CE  0820               	movf	?___ftmul,w
  1973  04CF  00B0               	movwf	___ftdiv@f2
  1974  04D0  0821               	movf	?___ftmul+1,w
  1975  04D1  00B1               	movwf	___ftdiv@f2+1
  1976  04D2  0822               	movf	?___ftmul+2,w
  1977  04D3  00B2               	movwf	___ftdiv@f2+2
  1978  04D4  23F3               	fcall	___ftdiv
  1979  04D5  0020               	movlb	0	; select bank0
  1980  04D6  0830               	movf	?___ftdiv,w
  1981  04D7  00C3               	movwf	___ftadd@f2
  1982  04D8  0831               	movf	?___ftdiv+1,w
  1983  04D9  00C4               	movwf	___ftadd@f2+1
  1984  04DA  0832               	movf	?___ftdiv+2,w
  1985  04DB  00C5               	movwf	___ftadd@f2+2
  1986  04DC  3000               	movlw	0
  1987  04DD  00C0               	movwf	___ftadd@f1
  1988  04DE  3080               	movlw	128
  1989  04DF  00C1               	movwf	___ftadd@f1+1
  1990  04E0  30BF               	movlw	191
  1991  04E1  00C2               	movwf	___ftadd@f1+2
  1992  04E2  25F6               	fcall	___ftadd
  1993  04E3  0020               	movlb	0	; select bank0
  1994  04E4  0840               	movf	?___ftadd,w
  1995  04E5  00CD               	movwf	___fttol@f1
  1996  04E6  0841               	movf	?___ftadd+1,w
  1997  04E7  00CE               	movwf	___fttol@f1+1
  1998  04E8  0842               	movf	?___ftadd+2,w
  1999  04E9  00CF               	movwf	___fttol@f1+2
  2000  04EA  236C               	fcall	___fttol
  2001  04EB  0020               	movlb	0	; select bank0
  2002  04EC  084D               	movf	?___fttol,w
  2003  04ED  009B               	movwf	27	;volatile
  2004                           
  2005                           ;user.c: 423: T2CON = 0x07;
  2006  04EE  3007               	movlw	7
  2007  04EF  2D2B               	goto	L1
  2008  04F0                     l1815:	
  2009                           ;user.c: 424: }
  2010                           
  2011                           
  2012                           ;user.c: 425: else
  2013                           ;user.c: 426: {
  2014                           ;user.c: 427: PR2 = (1/(iLimitedFreq*0.000004)-1);
  2015  04F0  3000               	movlw	0
  2016  04F1  00B3               	movwf	___ftdiv@f1
  2017  04F2  3080               	movlw	128
  2018  04F3  00B4               	movwf	___ftdiv@f1+1
  2019  04F4  303F               	movlw	63
  2020  04F5  00B5               	movwf	___ftdiv@f1+2
  2021  04F6  0860               	movf	PulseOut@iLimitedFreq+1,w
  2022  04F7  00F9               	movwf	___lwtoft@c+1
  2023  04F8  085F               	movf	PulseOut@iLimitedFreq,w
  2024  04F9  00F8               	movwf	___lwtoft@c
  2025  04FA  2119               	fcall	___lwtoft
  2026  04FB  0878               	movf	?___lwtoft,w
  2027  04FC  0020               	movlb	0	; select bank0
  2028  04FD  00A3               	movwf	___ftmul@f2
  2029  04FE  0879               	movf	?___lwtoft+1,w
  2030  04FF  00A4               	movwf	___ftmul@f2+1
  2031  0500  087A               	movf	?___lwtoft+2,w
  2032  0501  00A5               	movwf	___ftmul@f2+2
  2033  0502  3038               	movlw	56
  2034  0503  00A0               	movwf	___ftmul@f1
  2035  0504  3086               	movlw	134
  2036  0505  00A1               	movwf	___ftmul@f1+1
  2037  0506  3036               	movlw	54
  2038  0507  00A2               	movwf	___ftmul@f1+2
  2039  0508  2543               	fcall	___ftmul
  2040  0509  0020               	movlb	0	; select bank0
  2041  050A  0820               	movf	?___ftmul,w
  2042  050B  00B0               	movwf	___ftdiv@f2
  2043  050C  0821               	movf	?___ftmul+1,w
  2044  050D  00B1               	movwf	___ftdiv@f2+1
  2045  050E  0822               	movf	?___ftmul+2,w
  2046  050F  00B2               	movwf	___ftdiv@f2+2
  2047  0510  23F3               	fcall	___ftdiv
  2048  0511  0020               	movlb	0	; select bank0
  2049  0512  0830               	movf	?___ftdiv,w
  2050  0513  00C3               	movwf	___ftadd@f2
  2051  0514  0831               	movf	?___ftdiv+1,w
  2052  0515  00C4               	movwf	___ftadd@f2+1
  2053  0516  0832               	movf	?___ftdiv+2,w
  2054  0517  00C5               	movwf	___ftadd@f2+2
  2055  0518  3000               	movlw	0
  2056  0519  00C0               	movwf	___ftadd@f1
  2057  051A  3080               	movlw	128
  2058  051B  00C1               	movwf	___ftadd@f1+1
  2059  051C  30BF               	movlw	191
  2060  051D  00C2               	movwf	___ftadd@f1+2
  2061  051E  25F6               	fcall	___ftadd
  2062  051F  0020               	movlb	0	; select bank0
  2063  0520  0840               	movf	?___ftadd,w
  2064  0521  00CD               	movwf	___fttol@f1
  2065  0522  0841               	movf	?___ftadd+1,w
  2066  0523  00CE               	movwf	___fttol@f1+1
  2067  0524  0842               	movf	?___ftadd+2,w
  2068  0525  00CF               	movwf	___fttol@f1+2
  2069  0526  236C               	fcall	___fttol
  2070  0527  0020               	movlb	0	; select bank0
  2071  0528  084D               	movf	?___fttol,w
  2072  0529  009B               	movwf	27	;volatile
  2073                           
  2074                           ;user.c: 428: T2CON = 0x06;
  2075  052A  3006               	movlw	6
  2076  052B                     L1:	
  2077  052B  009C               	movwf	28	;volatile
  2078                           
  2079                           ;user.c: 429: }
  2080                           ;user.c: 430: iPR2 = PR2;
  2081  052C  081B               	movf	27,w	;volatile
  2082  052D  00FC               	movwf	??_PulseOut
  2083  052E  01FD               	clrf	??_PulseOut+1
  2084  052F  087C               	movf	??_PulseOut,w
  2085  0530  00DD               	movwf	PulseOut@iPR2
  2086  0531  087D               	movf	??_PulseOut+1,w
  2087  0532  00DE               	movwf	PulseOut@iPR2+1
  2088                           
  2089                           ;user.c: 431: iPR2=iPR2/2;
  2090  0533  085E               	movf	PulseOut@iPR2+1,w
  2091  0534  00FD               	movwf	??_PulseOut+1
  2092  0535  085D               	movf	PulseOut@iPR2,w
  2093  0536  00FC               	movwf	??_PulseOut
  2094  0537  36FD               	lsrf	??_PulseOut+1,f
  2095  0538  0CFC               	rrf	??_PulseOut,f
  2096  0539  087C               	movf	??_PulseOut,w
  2097  053A  00DD               	movwf	PulseOut@iPR2
  2098  053B  087D               	movf	??_PulseOut+1,w
  2099  053C  00DE               	movwf	PulseOut@iPR2+1
  2100                           
  2101                           ;user.c: 432: SetPWMDutyCycle(iPR2);
  2102  053D  085E               	movf	PulseOut@iPR2+1,w
  2103  053E  00F1               	movwf	SetPWMDutyCycle@DutyCycle+1
  2104  053F  085D               	movf	PulseOut@iPR2,w
  2105  0540  00F0               	movwf	SetPWMDutyCycle@DutyCycle
  2106  0541  210B               	fcall	_SetPWMDutyCycle
  2107  0542  0008               	return
  2108  0543                     __end_of_PulseOut:	
  2109                           
  2110                           	psect	text8
  2111  0119                     __ptext8:	
  2112 ;; *************** function ___lwtoft *****************
  2113 ;; Defined at:
  2114 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  c               2    8[COMMON] unsigned int 
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  3    8[COMMON] float 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1
  2128 ;;      Params:         3       0       0
  2129 ;;      Locals:         0       0       0
  2130 ;;      Temps:          1       0       0
  2131 ;;      Totals:         4       0       0
  2132 ;;Total ram usage:        4 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    1
  2135 ;; This function calls:
  2136 ;;		___ftpack
  2137 ;; This function is called by:
  2138 ;;		_PulseOut
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function ___lwtoft
  2144  0119                     ___lwtoft:	
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2148  0119  0878               	movf	___lwtoft@c,w
  2149  011A  00F0               	movwf	___ftpack@arg
  2150  011B  0879               	movf	___lwtoft@c+1,w
  2151  011C  00F1               	movwf	___ftpack@arg+1
  2152  011D  01F2               	clrf	___ftpack@arg+2
  2153  011E  308E               	movlw	142
  2154  011F  00FB               	movwf	??___lwtoft
  2155  0120  087B               	movf	??___lwtoft,w
  2156  0121  00F3               	movwf	___ftpack@exp
  2157  0122  01F4               	clrf	___ftpack@sign
  2158  0123  2217               	fcall	___ftpack
  2159  0124  0870               	movf	?___ftpack,w
  2160  0125  00F8               	movwf	?___lwtoft
  2161  0126  0871               	movf	?___ftpack+1,w
  2162  0127  00F9               	movwf	?___lwtoft+1
  2163  0128  0872               	movf	?___ftpack+2,w
  2164  0129  00FA               	movwf	?___lwtoft+2
  2165  012A  0008               	return
  2166  012B                     __end_of___lwtoft:	
  2167                           
  2168                           	psect	text9
  2169  036C                     __ptext9:	
  2170 ;; *************** function ___fttol *****************
  2171 ;; Defined at:
  2172 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  f1              3   45[BANK0 ] float 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  lval            4   54[BANK0 ] unsigned long 
  2177 ;;  exp1            1   58[BANK0 ] unsigned char 
  2178 ;;  sign1           1   53[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  4   45[BANK0 ] long 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMMON   BANK0   BANK1
  2188 ;;      Params:         0       4       0
  2189 ;;      Locals:         0       6       0
  2190 ;;      Temps:          0       4       0
  2191 ;;      Totals:         0      14       0
  2192 ;;Total ram usage:       14 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_PulseOut
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function ___fttol
  2203  036C                     ___fttol:	
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2207  036C  0020               	movlb	0	; select bank0
  2208  036D  084D               	movf	___fttol@f1,w
  2209  036E  00D1               	movwf	??___fttol
  2210  036F  084E               	movf	___fttol@f1+1,w
  2211  0370  00D2               	movwf	??___fttol+1
  2212  0371  084F               	movf	___fttol@f1+2,w
  2213  0372  00D3               	movwf	??___fttol+2
  2214  0373  1003               	clrc
  2215  0374  0D52               	rlf	??___fttol+1,w
  2216  0375  0D53               	rlf	??___fttol+2,w
  2217  0376  00D4               	movwf	??___fttol+3
  2218  0377  0854               	movf	??___fttol+3,w
  2219  0378  00DA               	movwf	___fttol@exp1
  2220  0379  085A               	movf	___fttol@exp1,w
  2221  037A  1D03               	btfss	3,2
  2222  037B  2B85               	goto	l1749
  2223  037C  3000               	movlw	0
  2224  037D  00D0               	movwf	?___fttol+3
  2225  037E  3000               	movlw	0
  2226  037F  00CF               	movwf	?___fttol+2
  2227  0380  3000               	movlw	0
  2228  0381  00CE               	movwf	?___fttol+1
  2229  0382  3000               	movlw	0
  2230  0383  00CD               	movwf	?___fttol
  2231  0384  0008               	return
  2232  0385                     l1749:	
  2233  0385  084D               	movf	___fttol@f1,w
  2234  0386  00D1               	movwf	??___fttol
  2235  0387  084E               	movf	___fttol@f1+1,w
  2236  0388  00D2               	movwf	??___fttol+1
  2237  0389  084F               	movf	___fttol@f1+2,w
  2238  038A  00D3               	movwf	??___fttol+2
  2239  038B  3017               	movlw	23
  2240  038C                     u2055:	
  2241  038C  36D3               	lsrf	??___fttol+2,f
  2242  038D  0CD2               	rrf	??___fttol+1,f
  2243  038E  0CD1               	rrf	??___fttol,f
  2244  038F  0B89               	decfsz	9,f
  2245  0390  2B8C               	goto	u2055
  2246  0391  0851               	movf	??___fttol,w
  2247  0392  00D4               	movwf	??___fttol+3
  2248  0393  0854               	movf	??___fttol+3,w
  2249  0394  00D5               	movwf	___fttol@sign1
  2250  0395  17CE               	bsf	___fttol@f1+1,7
  2251  0396  30FF               	movlw	255
  2252  0397  05CD               	andwf	___fttol@f1,f
  2253  0398  30FF               	movlw	255
  2254  0399  05CE               	andwf	___fttol@f1+1,f
  2255  039A  3000               	movlw	0
  2256  039B  05CF               	andwf	___fttol@f1+2,f
  2257  039C  084D               	movf	___fttol@f1,w
  2258  039D  00D6               	movwf	___fttol@lval
  2259  039E  084E               	movf	___fttol@f1+1,w
  2260  039F  00D7               	movwf	___fttol@lval+1
  2261  03A0  084F               	movf	___fttol@f1+2,w
  2262  03A1  00D8               	movwf	___fttol@lval+2
  2263  03A2  01D9               	clrf	___fttol@lval+3
  2264  03A3  308E               	movlw	142
  2265  03A4  02DA               	subwf	___fttol@exp1,f
  2266  03A5  1FDA               	btfss	___fttol@exp1,7
  2267  03A6  2BC3               	goto	l1769
  2268  03A7  085A               	movf	___fttol@exp1,w
  2269  03A8  3A80               	xorlw	128
  2270  03A9  3E8F               	addlw	143
  2271  03AA  1803               	skipnc
  2272  03AB  2BB5               	goto	l1767
  2273  03AC  3000               	movlw	0
  2274  03AD  00D0               	movwf	?___fttol+3
  2275  03AE  3000               	movlw	0
  2276  03AF  00CF               	movwf	?___fttol+2
  2277  03B0  3000               	movlw	0
  2278  03B1  00CE               	movwf	?___fttol+1
  2279  03B2  3000               	movlw	0
  2280  03B3  00CD               	movwf	?___fttol
  2281  03B4  0008               	return
  2282  03B5                     l1767:	
  2283  03B5  3001               	movlw	1
  2284  03B6                     u2085:	
  2285  03B6  36D9               	lsrf	___fttol@lval+3,f
  2286  03B7  0CD8               	rrf	___fttol@lval+2,f
  2287  03B8  0CD7               	rrf	___fttol@lval+1,f
  2288  03B9  0CD6               	rrf	___fttol@lval,f
  2289  03BA  0B89               	decfsz	9,f
  2290  03BB  2BB6               	goto	u2085
  2291  03BC  3001               	movlw	1
  2292  03BD  00D1               	movwf	??___fttol
  2293  03BE  0851               	movf	??___fttol,w
  2294  03BF  07DA               	addwf	___fttol@exp1,f
  2295  03C0  1903               	btfsc	3,2
  2296  03C1  2BDC               	goto	l1777
  2297  03C2  2BB5               	goto	l1767
  2298  03C3                     l1769:	
  2299  03C3  3018               	movlw	24
  2300  03C4  025A               	subwf	___fttol@exp1,w
  2301  03C5  1C03               	skipc
  2302  03C6  2BD9               	goto	l541
  2303  03C7  3000               	movlw	0
  2304  03C8  00D0               	movwf	?___fttol+3
  2305  03C9  3000               	movlw	0
  2306  03CA  00CF               	movwf	?___fttol+2
  2307  03CB  3000               	movlw	0
  2308  03CC  00CE               	movwf	?___fttol+1
  2309  03CD  3000               	movlw	0
  2310  03CE  00CD               	movwf	?___fttol
  2311  03CF  0008               	return
  2312  03D0                     l1775:	
  2313  03D0  3001               	movlw	1
  2314  03D1                     u2115:	
  2315  03D1  35D6               	lslf	___fttol@lval,f
  2316  03D2  0DD7               	rlf	___fttol@lval+1,f
  2317  03D3  0DD8               	rlf	___fttol@lval+2,f
  2318  03D4  0DD9               	rlf	___fttol@lval+3,f
  2319  03D5  0B89               	decfsz	9,f
  2320  03D6  2BD1               	goto	u2115
  2321  03D7  3001               	movlw	1
  2322  03D8  02DA               	subwf	___fttol@exp1,f
  2323  03D9                     l541:	
  2324  03D9  085A               	movf	___fttol@exp1,w
  2325  03DA  1D03               	btfss	3,2
  2326  03DB  2BD0               	goto	l1775
  2327  03DC                     l1777:	
  2328  03DC  0855               	movf	___fttol@sign1,w
  2329  03DD  1903               	btfsc	3,2
  2330  03DE  2BEA               	goto	l1781
  2331  03DF  09D6               	comf	___fttol@lval,f
  2332  03E0  09D7               	comf	___fttol@lval+1,f
  2333  03E1  09D8               	comf	___fttol@lval+2,f
  2334  03E2  09D9               	comf	___fttol@lval+3,f
  2335  03E3  0AD6               	incf	___fttol@lval,f
  2336  03E4  1903               	skipnz
  2337  03E5  0AD7               	incf	___fttol@lval+1,f
  2338  03E6  1903               	skipnz
  2339  03E7  0AD8               	incf	___fttol@lval+2,f
  2340  03E8  1903               	skipnz
  2341  03E9  0AD9               	incf	___fttol@lval+3,f
  2342  03EA                     l1781:	
  2343  03EA  0859               	movf	___fttol@lval+3,w
  2344  03EB  00D0               	movwf	?___fttol+3
  2345  03EC  0858               	movf	___fttol@lval+2,w
  2346  03ED  00CF               	movwf	?___fttol+2
  2347  03EE  0857               	movf	___fttol@lval+1,w
  2348  03EF  00CE               	movwf	?___fttol+1
  2349  03F0  0856               	movf	___fttol@lval,w
  2350  03F1  00CD               	movwf	?___fttol
  2351  03F2  0008               	return
  2352  03F3                     __end_of___fttol:	
  2353                           
  2354                           	psect	text10
  2355  0543                     __ptext10:	
  2356 ;; *************** function ___ftmul *****************
  2357 ;; Defined at:
  2358 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  f1              3    0[BANK0 ] float 
  2361 ;;  f2              3    3[BANK0 ] float 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2364 ;;  sign            1   15[BANK0 ] unsigned char 
  2365 ;;  cntr            1   14[BANK0 ] unsigned char 
  2366 ;;  exp             1   10[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  3    0[BANK0 ] float 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1
  2376 ;;      Params:         0       6       0
  2377 ;;      Locals:         0       6       0
  2378 ;;      Temps:          0       4       0
  2379 ;;      Totals:         0      16       0
  2380 ;;Total ram usage:       16 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    1
  2383 ;; This function calls:
  2384 ;;		___ftpack
  2385 ;; This function is called by:
  2386 ;;		_PulseOut
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function ___ftmul
  2392  0543                     ___ftmul:	
  2393                           
  2394                           ;incstack = 0
  2395                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2396  0543  0020               	movlb	0	; select bank0
  2397  0544  0820               	movf	___ftmul@f1,w
  2398  0545  00A6               	movwf	??___ftmul
  2399  0546  0821               	movf	___ftmul@f1+1,w
  2400  0547  00A7               	movwf	??___ftmul+1
  2401  0548  0822               	movf	___ftmul@f1+2,w
  2402  0549  00A8               	movwf	??___ftmul+2
  2403  054A  1003               	clrc
  2404  054B  0D27               	rlf	??___ftmul+1,w
  2405  054C  0D28               	rlf	??___ftmul+2,w
  2406  054D  00A9               	movwf	??___ftmul+3
  2407  054E  0829               	movf	??___ftmul+3,w
  2408  054F  00AA               	movwf	___ftmul@exp
  2409  0550  082A               	movf	___ftmul@exp,w
  2410  0551  1D03               	btfss	3,2
  2411  0552  2D5A               	goto	l1699
  2412  0553  3000               	movlw	0
  2413  0554  00A0               	movwf	?___ftmul
  2414  0555  3000               	movlw	0
  2415  0556  00A1               	movwf	?___ftmul+1
  2416  0557  3000               	movlw	0
  2417  0558  00A2               	movwf	?___ftmul+2
  2418  0559  0008               	return
  2419  055A                     l1699:	
  2420  055A  0823               	movf	___ftmul@f2,w
  2421  055B  00A6               	movwf	??___ftmul
  2422  055C  0824               	movf	___ftmul@f2+1,w
  2423  055D  00A7               	movwf	??___ftmul+1
  2424  055E  0825               	movf	___ftmul@f2+2,w
  2425  055F  00A8               	movwf	??___ftmul+2
  2426  0560  1003               	clrc
  2427  0561  0D27               	rlf	??___ftmul+1,w
  2428  0562  0D28               	rlf	??___ftmul+2,w
  2429  0563  00A9               	movwf	??___ftmul+3
  2430  0564  0829               	movf	??___ftmul+3,w
  2431  0565  00AF               	movwf	___ftmul@sign
  2432  0566  082F               	movf	___ftmul@sign,w
  2433  0567  1D03               	btfss	3,2
  2434  0568  2D70               	goto	l1705
  2435  0569  3000               	movlw	0
  2436  056A  00A0               	movwf	?___ftmul
  2437  056B  3000               	movlw	0
  2438  056C  00A1               	movwf	?___ftmul+1
  2439  056D  3000               	movlw	0
  2440  056E  00A2               	movwf	?___ftmul+2
  2441  056F  0008               	return
  2442  0570                     l1705:	
  2443  0570  082F               	movf	___ftmul@sign,w
  2444  0571  3E7B               	addlw	123
  2445  0572  00A6               	movwf	??___ftmul
  2446  0573  0826               	movf	??___ftmul,w
  2447  0574  07AA               	addwf	___ftmul@exp,f
  2448  0575  0820               	movf	___ftmul@f1,w
  2449  0576  00A6               	movwf	??___ftmul
  2450  0577  0821               	movf	___ftmul@f1+1,w
  2451  0578  00A7               	movwf	??___ftmul+1
  2452  0579  0822               	movf	___ftmul@f1+2,w
  2453  057A  00A8               	movwf	??___ftmul+2
  2454  057B  3010               	movlw	16
  2455  057C                     u1945:	
  2456  057C  36A8               	lsrf	??___ftmul+2,f
  2457  057D  0CA7               	rrf	??___ftmul+1,f
  2458  057E  0CA6               	rrf	??___ftmul,f
  2459  057F  0B89               	decfsz	9,f
  2460  0580  2D7C               	goto	u1945
  2461  0581  0826               	movf	??___ftmul,w
  2462  0582  00A9               	movwf	??___ftmul+3
  2463  0583  0829               	movf	??___ftmul+3,w
  2464  0584  00AF               	movwf	___ftmul@sign
  2465  0585  0823               	movf	___ftmul@f2,w
  2466  0586  00A6               	movwf	??___ftmul
  2467  0587  0824               	movf	___ftmul@f2+1,w
  2468  0588  00A7               	movwf	??___ftmul+1
  2469  0589  0825               	movf	___ftmul@f2+2,w
  2470  058A  00A8               	movwf	??___ftmul+2
  2471  058B  3010               	movlw	16
  2472  058C                     u1955:	
  2473  058C  36A8               	lsrf	??___ftmul+2,f
  2474  058D  0CA7               	rrf	??___ftmul+1,f
  2475  058E  0CA6               	rrf	??___ftmul,f
  2476  058F  0B89               	decfsz	9,f
  2477  0590  2D8C               	goto	u1955
  2478  0591  0826               	movf	??___ftmul,w
  2479  0592  00A9               	movwf	??___ftmul+3
  2480  0593  0829               	movf	??___ftmul+3,w
  2481  0594  06AF               	xorwf	___ftmul@sign,f
  2482  0595  3080               	movlw	128
  2483  0596  00A6               	movwf	??___ftmul
  2484  0597  0826               	movf	??___ftmul,w
  2485  0598  05AF               	andwf	___ftmul@sign,f
  2486  0599  17A1               	bsf	___ftmul@f1+1,7
  2487  059A  17A4               	bsf	___ftmul@f2+1,7
  2488  059B  30FF               	movlw	255
  2489  059C  05A3               	andwf	___ftmul@f2,f
  2490  059D  30FF               	movlw	255
  2491  059E  05A4               	andwf	___ftmul@f2+1,f
  2492  059F  3000               	movlw	0
  2493  05A0  05A5               	andwf	___ftmul@f2+2,f
  2494  05A1  3000               	movlw	0
  2495  05A2  00AB               	movwf	___ftmul@f3_as_product
  2496  05A3  3000               	movlw	0
  2497  05A4  00AC               	movwf	___ftmul@f3_as_product+1
  2498  05A5  3000               	movlw	0
  2499  05A6  00AD               	movwf	___ftmul@f3_as_product+2
  2500  05A7  3007               	movlw	7
  2501  05A8  00A6               	movwf	??___ftmul
  2502  05A9  0826               	movf	??___ftmul,w
  2503  05AA  00AE               	movwf	___ftmul@cntr
  2504  05AB                     l1717:	
  2505  05AB  1C20               	btfss	___ftmul@f1,0
  2506  05AC  2DB3               	goto	l1721
  2507  05AD  0823               	movf	___ftmul@f2,w
  2508  05AE  07AB               	addwf	___ftmul@f3_as_product,f
  2509  05AF  0824               	movf	___ftmul@f2+1,w
  2510  05B0  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2511  05B1  0825               	movf	___ftmul@f2+2,w
  2512  05B2  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2513  05B3                     l1721:	
  2514  05B3  3001               	movlw	1
  2515  05B4                     u1975:	
  2516  05B4  36A2               	lsrf	___ftmul@f1+2,f
  2517  05B5  0CA1               	rrf	___ftmul@f1+1,f
  2518  05B6  0CA0               	rrf	___ftmul@f1,f
  2519  05B7  0B89               	decfsz	9,f
  2520  05B8  2DB4               	goto	u1975
  2521  05B9  3001               	movlw	1
  2522  05BA                     u1985:	
  2523  05BA  35A3               	lslf	___ftmul@f2,f
  2524  05BB  0DA4               	rlf	___ftmul@f2+1,f
  2525  05BC  0DA5               	rlf	___ftmul@f2+2,f
  2526  05BD  0B89               	decfsz	9,f
  2527  05BE  2DBA               	goto	u1985
  2528  05BF  3001               	movlw	1
  2529  05C0  02AE               	subwf	___ftmul@cntr,f
  2530  05C1  1D03               	btfss	3,2
  2531  05C2  2DAB               	goto	l1717
  2532  05C3  3009               	movlw	9
  2533  05C4  00A6               	movwf	??___ftmul
  2534  05C5  0826               	movf	??___ftmul,w
  2535  05C6  00AE               	movwf	___ftmul@cntr
  2536  05C7                     l1729:	
  2537  05C7  1C20               	btfss	___ftmul@f1,0
  2538  05C8  2DCF               	goto	l1733
  2539  05C9  0823               	movf	___ftmul@f2,w
  2540  05CA  07AB               	addwf	___ftmul@f3_as_product,f
  2541  05CB  0824               	movf	___ftmul@f2+1,w
  2542  05CC  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  2543  05CD  0825               	movf	___ftmul@f2+2,w
  2544  05CE  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  2545  05CF                     l1733:	
  2546  05CF  3001               	movlw	1
  2547  05D0                     u2015:	
  2548  05D0  36A2               	lsrf	___ftmul@f1+2,f
  2549  05D1  0CA1               	rrf	___ftmul@f1+1,f
  2550  05D2  0CA0               	rrf	___ftmul@f1,f
  2551  05D3  0B89               	decfsz	9,f
  2552  05D4  2DD0               	goto	u2015
  2553  05D5  3001               	movlw	1
  2554  05D6                     u2025:	
  2555  05D6  36AD               	lsrf	___ftmul@f3_as_product+2,f
  2556  05D7  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2557  05D8  0CAB               	rrf	___ftmul@f3_as_product,f
  2558  05D9  0B89               	decfsz	9,f
  2559  05DA  2DD6               	goto	u2025
  2560  05DB  3001               	movlw	1
  2561  05DC  02AE               	subwf	___ftmul@cntr,f
  2562  05DD  1D03               	btfss	3,2
  2563  05DE  2DC7               	goto	l1729
  2564  05DF  082B               	movf	___ftmul@f3_as_product,w
  2565  05E0  00F0               	movwf	___ftpack@arg
  2566  05E1  082C               	movf	___ftmul@f3_as_product+1,w
  2567  05E2  00F1               	movwf	___ftpack@arg+1
  2568  05E3  082D               	movf	___ftmul@f3_as_product+2,w
  2569  05E4  00F2               	movwf	___ftpack@arg+2
  2570  05E5  082A               	movf	___ftmul@exp,w
  2571  05E6  00A6               	movwf	??___ftmul
  2572  05E7  0826               	movf	??___ftmul,w
  2573  05E8  00F3               	movwf	___ftpack@exp
  2574  05E9  082F               	movf	___ftmul@sign,w
  2575  05EA  00A7               	movwf	??___ftmul+1
  2576  05EB  0827               	movf	??___ftmul+1,w
  2577  05EC  00F4               	movwf	___ftpack@sign
  2578  05ED  2217               	fcall	___ftpack
  2579  05EE  0870               	movf	?___ftpack,w
  2580  05EF  0020               	movlb	0	; select bank0
  2581  05F0  00A0               	movwf	?___ftmul
  2582  05F1  0871               	movf	?___ftpack+1,w
  2583  05F2  00A1               	movwf	?___ftmul+1
  2584  05F3  0872               	movf	?___ftpack+2,w
  2585  05F4  00A2               	movwf	?___ftmul+2
  2586  05F5  0008               	return
  2587  05F6                     __end_of___ftmul:	
  2588                           
  2589                           	psect	text11
  2590  03F3                     __ptext11:	
  2591 ;; *************** function ___ftdiv *****************
  2592 ;; Defined at:
  2593 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  f2              3   16[BANK0 ] float 
  2596 ;;  f1              3   19[BANK0 ] float 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  f3              3   27[BANK0 ] float 
  2599 ;;  sign            1   31[BANK0 ] unsigned char 
  2600 ;;  exp             1   30[BANK0 ] unsigned char 
  2601 ;;  cntr            1   26[BANK0 ] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  3   16[BANK0 ] float 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1
  2611 ;;      Params:         0       6       0
  2612 ;;      Locals:         0       6       0
  2613 ;;      Temps:          0       4       0
  2614 ;;      Totals:         0      16       0
  2615 ;;Total ram usage:       16 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    1
  2618 ;; This function calls:
  2619 ;;		___ftpack
  2620 ;; This function is called by:
  2621 ;;		_PulseOut
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function ___ftdiv
  2627  03F3                     ___ftdiv:	
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2631  03F3  0020               	movlb	0	; select bank0
  2632  03F4  0833               	movf	___ftdiv@f1,w
  2633  03F5  00B6               	movwf	??___ftdiv
  2634  03F6  0834               	movf	___ftdiv@f1+1,w
  2635  03F7  00B7               	movwf	??___ftdiv+1
  2636  03F8  0835               	movf	___ftdiv@f1+2,w
  2637  03F9  00B8               	movwf	??___ftdiv+2
  2638  03FA  1003               	clrc
  2639  03FB  0D37               	rlf	??___ftdiv+1,w
  2640  03FC  0D38               	rlf	??___ftdiv+2,w
  2641  03FD  00B9               	movwf	??___ftdiv+3
  2642  03FE  0839               	movf	??___ftdiv+3,w
  2643  03FF  00BE               	movwf	___ftdiv@exp
  2644  0400  083E               	movf	___ftdiv@exp,w
  2645  0401  1D03               	btfss	3,2
  2646  0402  2C0A               	goto	l1657
  2647  0403  3000               	movlw	0
  2648  0404  00B0               	movwf	?___ftdiv
  2649  0405  3000               	movlw	0
  2650  0406  00B1               	movwf	?___ftdiv+1
  2651  0407  3000               	movlw	0
  2652  0408  00B2               	movwf	?___ftdiv+2
  2653  0409  0008               	return
  2654  040A                     l1657:	
  2655  040A  0830               	movf	___ftdiv@f2,w
  2656  040B  00B6               	movwf	??___ftdiv
  2657  040C  0831               	movf	___ftdiv@f2+1,w
  2658  040D  00B7               	movwf	??___ftdiv+1
  2659  040E  0832               	movf	___ftdiv@f2+2,w
  2660  040F  00B8               	movwf	??___ftdiv+2
  2661  0410  1003               	clrc
  2662  0411  0D37               	rlf	??___ftdiv+1,w
  2663  0412  0D38               	rlf	??___ftdiv+2,w
  2664  0413  00B9               	movwf	??___ftdiv+3
  2665  0414  0839               	movf	??___ftdiv+3,w
  2666  0415  00BF               	movwf	___ftdiv@sign
  2667  0416  083F               	movf	___ftdiv@sign,w
  2668  0417  1D03               	btfss	3,2
  2669  0418  2C20               	goto	l1663
  2670  0419  3000               	movlw	0
  2671  041A  00B0               	movwf	?___ftdiv
  2672  041B  3000               	movlw	0
  2673  041C  00B1               	movwf	?___ftdiv+1
  2674  041D  3000               	movlw	0
  2675  041E  00B2               	movwf	?___ftdiv+2
  2676  041F  0008               	return
  2677  0420                     l1663:	
  2678  0420  3000               	movlw	0
  2679  0421  00BB               	movwf	___ftdiv@f3
  2680  0422  3000               	movlw	0
  2681  0423  00BC               	movwf	___ftdiv@f3+1
  2682  0424  3000               	movlw	0
  2683  0425  00BD               	movwf	___ftdiv@f3+2
  2684  0426  3089               	movlw	137
  2685  0427  073F               	addwf	___ftdiv@sign,w
  2686  0428  00B6               	movwf	??___ftdiv
  2687  0429  0836               	movf	??___ftdiv,w
  2688  042A  02BE               	subwf	___ftdiv@exp,f
  2689  042B  0833               	movf	___ftdiv@f1,w
  2690  042C  00B6               	movwf	??___ftdiv
  2691  042D  0834               	movf	___ftdiv@f1+1,w
  2692  042E  00B7               	movwf	??___ftdiv+1
  2693  042F  0835               	movf	___ftdiv@f1+2,w
  2694  0430  00B8               	movwf	??___ftdiv+2
  2695  0431  3010               	movlw	16
  2696  0432                     u1865:	
  2697  0432  36B8               	lsrf	??___ftdiv+2,f
  2698  0433  0CB7               	rrf	??___ftdiv+1,f
  2699  0434  0CB6               	rrf	??___ftdiv,f
  2700  0435  0B89               	decfsz	9,f
  2701  0436  2C32               	goto	u1865
  2702  0437  0836               	movf	??___ftdiv,w
  2703  0438  00B9               	movwf	??___ftdiv+3
  2704  0439  0839               	movf	??___ftdiv+3,w
  2705  043A  00BF               	movwf	___ftdiv@sign
  2706  043B  0830               	movf	___ftdiv@f2,w
  2707  043C  00B6               	movwf	??___ftdiv
  2708  043D  0831               	movf	___ftdiv@f2+1,w
  2709  043E  00B7               	movwf	??___ftdiv+1
  2710  043F  0832               	movf	___ftdiv@f2+2,w
  2711  0440  00B8               	movwf	??___ftdiv+2
  2712  0441  3010               	movlw	16
  2713  0442                     u1875:	
  2714  0442  36B8               	lsrf	??___ftdiv+2,f
  2715  0443  0CB7               	rrf	??___ftdiv+1,f
  2716  0444  0CB6               	rrf	??___ftdiv,f
  2717  0445  0B89               	decfsz	9,f
  2718  0446  2C42               	goto	u1875
  2719  0447  0836               	movf	??___ftdiv,w
  2720  0448  00B9               	movwf	??___ftdiv+3
  2721  0449  0839               	movf	??___ftdiv+3,w
  2722  044A  06BF               	xorwf	___ftdiv@sign,f
  2723  044B  3080               	movlw	128
  2724  044C  00B6               	movwf	??___ftdiv
  2725  044D  0836               	movf	??___ftdiv,w
  2726  044E  05BF               	andwf	___ftdiv@sign,f
  2727  044F  17B4               	bsf	___ftdiv@f1+1,7
  2728  0450  30FF               	movlw	255
  2729  0451  05B3               	andwf	___ftdiv@f1,f
  2730  0452  30FF               	movlw	255
  2731  0453  05B4               	andwf	___ftdiv@f1+1,f
  2732  0454  3000               	movlw	0
  2733  0455  05B5               	andwf	___ftdiv@f1+2,f
  2734  0456  17B1               	bsf	___ftdiv@f2+1,7
  2735  0457  30FF               	movlw	255
  2736  0458  05B0               	andwf	___ftdiv@f2,f
  2737  0459  30FF               	movlw	255
  2738  045A  05B1               	andwf	___ftdiv@f2+1,f
  2739  045B  3000               	movlw	0
  2740  045C  05B2               	andwf	___ftdiv@f2+2,f
  2741  045D  3018               	movlw	24
  2742  045E  00B6               	movwf	??___ftdiv
  2743  045F  0836               	movf	??___ftdiv,w
  2744  0460  00BA               	movwf	___ftdiv@cntr
  2745  0461                     l1677:	
  2746  0461  3001               	movlw	1
  2747  0462                     u1885:	
  2748  0462  35BB               	lslf	___ftdiv@f3,f
  2749  0463  0DBC               	rlf	___ftdiv@f3+1,f
  2750  0464  0DBD               	rlf	___ftdiv@f3+2,f
  2751  0465  0B89               	decfsz	9,f
  2752  0466  2C62               	goto	u1885
  2753  0467  0832               	movf	___ftdiv@f2+2,w
  2754  0468  0235               	subwf	___ftdiv@f1+2,w
  2755  0469  1D03               	skipz
  2756  046A  2C71               	goto	u1895
  2757  046B  0831               	movf	___ftdiv@f2+1,w
  2758  046C  0234               	subwf	___ftdiv@f1+1,w
  2759  046D  1D03               	skipz
  2760  046E  2C71               	goto	u1895
  2761  046F  0830               	movf	___ftdiv@f2,w
  2762  0470  0233               	subwf	___ftdiv@f1,w
  2763  0471                     u1895:	
  2764  0471  1C03               	skipc
  2765  0472  2C7A               	goto	l1685
  2766  0473  0830               	movf	___ftdiv@f2,w
  2767  0474  02B3               	subwf	___ftdiv@f1,f
  2768  0475  0831               	movf	___ftdiv@f2+1,w
  2769  0476  3BB4               	subwfb	___ftdiv@f1+1,f
  2770  0477  0832               	movf	___ftdiv@f2+2,w
  2771  0478  3BB5               	subwfb	___ftdiv@f1+2,f
  2772  0479  143B               	bsf	___ftdiv@f3,0
  2773  047A                     l1685:	
  2774  047A  3001               	movlw	1
  2775  047B                     u1905:	
  2776  047B  35B3               	lslf	___ftdiv@f1,f
  2777  047C  0DB4               	rlf	___ftdiv@f1+1,f
  2778  047D  0DB5               	rlf	___ftdiv@f1+2,f
  2779  047E  0B89               	decfsz	9,f
  2780  047F  2C7B               	goto	u1905
  2781  0480  3001               	movlw	1
  2782  0481  02BA               	subwf	___ftdiv@cntr,f
  2783  0482  1D03               	btfss	3,2
  2784  0483  2C61               	goto	l1677
  2785  0484  083B               	movf	___ftdiv@f3,w
  2786  0485  00F0               	movwf	___ftpack@arg
  2787  0486  083C               	movf	___ftdiv@f3+1,w
  2788  0487  00F1               	movwf	___ftpack@arg+1
  2789  0488  083D               	movf	___ftdiv@f3+2,w
  2790  0489  00F2               	movwf	___ftpack@arg+2
  2791  048A  083E               	movf	___ftdiv@exp,w
  2792  048B  00B6               	movwf	??___ftdiv
  2793  048C  0836               	movf	??___ftdiv,w
  2794  048D  00F3               	movwf	___ftpack@exp
  2795  048E  083F               	movf	___ftdiv@sign,w
  2796  048F  00B7               	movwf	??___ftdiv+1
  2797  0490  0837               	movf	??___ftdiv+1,w
  2798  0491  00F4               	movwf	___ftpack@sign
  2799  0492  2217               	fcall	___ftpack
  2800  0493  0870               	movf	?___ftpack,w
  2801  0494  0020               	movlb	0	; select bank0
  2802  0495  00B0               	movwf	?___ftdiv
  2803  0496  0871               	movf	?___ftpack+1,w
  2804  0497  00B1               	movwf	?___ftdiv+1
  2805  0498  0872               	movf	?___ftpack+2,w
  2806  0499  00B2               	movwf	?___ftdiv+2
  2807  049A  0008               	return
  2808  049B                     __end_of___ftdiv:	
  2809                           
  2810                           	psect	text12
  2811  05F6                     __ptext12:	
  2812 ;; *************** function ___ftadd *****************
  2813 ;; Defined at:
  2814 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  f1              3   32[BANK0 ] float 
  2817 ;;  f2              3   35[BANK0 ] float 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  exp1            1   44[BANK0 ] unsigned char 
  2820 ;;  exp2            1   43[BANK0 ] unsigned char 
  2821 ;;  sign            1   42[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  3   32[BANK0 ] float 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1
  2831 ;;      Params:         0       6       0
  2832 ;;      Locals:         0       3       0
  2833 ;;      Temps:          0       4       0
  2834 ;;      Totals:         0      13       0
  2835 ;;Total ram usage:       13 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    1
  2838 ;; This function calls:
  2839 ;;		___ftpack
  2840 ;; This function is called by:
  2841 ;;		_PulseOut
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function ___ftadd
  2847  05F6                     ___ftadd:	
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2851  05F6  0020               	movlb	0	; select bank0
  2852  05F7  0840               	movf	___ftadd@f1,w
  2853  05F8  00C6               	movwf	??___ftadd
  2854  05F9  0841               	movf	___ftadd@f1+1,w
  2855  05FA  00C7               	movwf	??___ftadd+1
  2856  05FB  0842               	movf	___ftadd@f1+2,w
  2857  05FC  00C8               	movwf	??___ftadd+2
  2858  05FD  1003               	clrc
  2859  05FE  0D47               	rlf	??___ftadd+1,w
  2860  05FF  0D48               	rlf	??___ftadd+2,w
  2861  0600  00C9               	movwf	??___ftadd+3
  2862  0601  0849               	movf	??___ftadd+3,w
  2863  0602  00CC               	movwf	___ftadd@exp1
  2864  0603  0843               	movf	___ftadd@f2,w
  2865  0604  00C6               	movwf	??___ftadd
  2866  0605  0844               	movf	___ftadd@f2+1,w
  2867  0606  00C7               	movwf	??___ftadd+1
  2868  0607  0845               	movf	___ftadd@f2+2,w
  2869  0608  00C8               	movwf	??___ftadd+2
  2870  0609  1003               	clrc
  2871  060A  0D47               	rlf	??___ftadd+1,w
  2872  060B  0D48               	rlf	??___ftadd+2,w
  2873  060C  00C9               	movwf	??___ftadd+3
  2874  060D  0849               	movf	??___ftadd+3,w
  2875  060E  00CB               	movwf	___ftadd@exp2
  2876  060F  084C               	movf	___ftadd@exp1,w
  2877  0610  1903               	btfsc	3,2
  2878  0611  2E1E               	goto	l1587
  2879  0612  084B               	movf	___ftadd@exp2,w
  2880  0613  024C               	subwf	___ftadd@exp1,w
  2881  0614  1803               	skipnc
  2882  0615  2E25               	goto	l1591
  2883  0616  034C               	decf	___ftadd@exp1,w
  2884  0617  3AFF               	xorlw	255
  2885  0618  074B               	addwf	___ftadd@exp2,w
  2886  0619  00C6               	movwf	??___ftadd
  2887  061A  3019               	movlw	25
  2888  061B  0246               	subwf	??___ftadd,w
  2889  061C  1C03               	skipc
  2890  061D  2E25               	goto	l1591
  2891  061E                     l1587:	
  2892  061E  0843               	movf	___ftadd@f2,w
  2893  061F  00C0               	movwf	?___ftadd
  2894  0620  0844               	movf	___ftadd@f2+1,w
  2895  0621  00C1               	movwf	?___ftadd+1
  2896  0622  0845               	movf	___ftadd@f2+2,w
  2897  0623  00C2               	movwf	?___ftadd+2
  2898  0624  0008               	return
  2899  0625                     l1591:	
  2900  0625  084B               	movf	___ftadd@exp2,w
  2901  0626  1903               	btfsc	3,2
  2902  0627  0008               	return
  2903  0628  084C               	movf	___ftadd@exp1,w
  2904  0629  024B               	subwf	___ftadd@exp2,w
  2905  062A  1803               	skipnc
  2906  062B  2E34               	goto	l1597
  2907  062C  034B               	decf	___ftadd@exp2,w
  2908  062D  3AFF               	xorlw	255
  2909  062E  074C               	addwf	___ftadd@exp1,w
  2910  062F  00C6               	movwf	??___ftadd
  2911  0630  3019               	movlw	25
  2912  0631  0246               	subwf	??___ftadd,w
  2913  0632  1803               	btfsc	3,0
  2914  0633  0008               	return
  2915  0634                     l1597:	
  2916  0634  3006               	movlw	6
  2917  0635  00C6               	movwf	??___ftadd
  2918  0636  0846               	movf	??___ftadd,w
  2919  0637  00CA               	movwf	___ftadd@sign
  2920  0638  1BC2               	btfsc	___ftadd@f1+2,7
  2921  0639  17CA               	bsf	___ftadd@sign,7
  2922  063A  1BC5               	btfsc	___ftadd@f2+2,7
  2923  063B  174A               	bsf	___ftadd@sign,6
  2924  063C  17C1               	bsf	___ftadd@f1+1,7
  2925  063D  30FF               	movlw	255
  2926  063E  05C0               	andwf	___ftadd@f1,f
  2927  063F  30FF               	movlw	255
  2928  0640  05C1               	andwf	___ftadd@f1+1,f
  2929  0641  3000               	movlw	0
  2930  0642  05C2               	andwf	___ftadd@f1+2,f
  2931  0643  17C4               	bsf	___ftadd@f2+1,7
  2932  0644  30FF               	movlw	255
  2933  0645  05C3               	andwf	___ftadd@f2,f
  2934  0646  30FF               	movlw	255
  2935  0647  05C4               	andwf	___ftadd@f2+1,f
  2936  0648  3000               	movlw	0
  2937  0649  05C5               	andwf	___ftadd@f2+2,f
  2938  064A  084B               	movf	___ftadd@exp2,w
  2939  064B  024C               	subwf	___ftadd@exp1,w
  2940  064C  1803               	skipnc
  2941  064D  2E70               	goto	l1619
  2942  064E                     l1609:	
  2943  064E  3001               	movlw	1
  2944  064F                     u1705:	
  2945  064F  35C3               	lslf	___ftadd@f2,f
  2946  0650  0DC4               	rlf	___ftadd@f2+1,f
  2947  0651  0DC5               	rlf	___ftadd@f2+2,f
  2948  0652  0B89               	decfsz	9,f
  2949  0653  2E4F               	goto	u1705
  2950  0654  3001               	movlw	1
  2951  0655  02CB               	subwf	___ftadd@exp2,f
  2952  0656  084B               	movf	___ftadd@exp2,w
  2953  0657  064C               	xorwf	___ftadd@exp1,w
  2954  0658  1903               	skipnz
  2955  0659  2E6B               	goto	l1617
  2956  065A  3001               	movlw	1
  2957  065B  02CA               	subwf	___ftadd@sign,f
  2958  065C  084A               	movf	___ftadd@sign,w
  2959  065D  3907               	andlw	7
  2960  065E  1903               	btfsc	3,2
  2961  065F  2E6B               	goto	l1617
  2962  0660  2E4E               	goto	l1609
  2963  0661                     l1615:	
  2964  0661  3001               	movlw	1
  2965  0662                     u1735:	
  2966  0662  36C2               	lsrf	___ftadd@f1+2,f
  2967  0663  0CC1               	rrf	___ftadd@f1+1,f
  2968  0664  0CC0               	rrf	___ftadd@f1,f
  2969  0665  0B89               	decfsz	9,f
  2970  0666  2E62               	goto	u1735
  2971  0667  3001               	movlw	1
  2972  0668  00C6               	movwf	??___ftadd
  2973  0669  0846               	movf	??___ftadd,w
  2974  066A  07CC               	addwf	___ftadd@exp1,f
  2975  066B                     l1617:	
  2976  066B  084C               	movf	___ftadd@exp1,w
  2977  066C  064B               	xorwf	___ftadd@exp2,w
  2978  066D  1903               	btfsc	3,2
  2979  066E  2E95               	goto	l481
  2980  066F  2E61               	goto	l1615
  2981  0670                     l1619:	
  2982  0670  084C               	movf	___ftadd@exp1,w
  2983  0671  024B               	subwf	___ftadd@exp2,w
  2984  0672  1803               	skipnc
  2985  0673  2E95               	goto	l481
  2986  0674                     l1621:	
  2987  0674  3001               	movlw	1
  2988  0675                     u1765:	
  2989  0675  35C0               	lslf	___ftadd@f1,f
  2990  0676  0DC1               	rlf	___ftadd@f1+1,f
  2991  0677  0DC2               	rlf	___ftadd@f1+2,f
  2992  0678  0B89               	decfsz	9,f
  2993  0679  2E75               	goto	u1765
  2994  067A  3001               	movlw	1
  2995  067B  02CC               	subwf	___ftadd@exp1,f
  2996  067C  084B               	movf	___ftadd@exp2,w
  2997  067D  064C               	xorwf	___ftadd@exp1,w
  2998  067E  1903               	skipnz
  2999  067F  2E91               	goto	l1629
  3000  0680  3001               	movlw	1
  3001  0681  02CA               	subwf	___ftadd@sign,f
  3002  0682  084A               	movf	___ftadd@sign,w
  3003  0683  3907               	andlw	7
  3004  0684  1903               	btfsc	3,2
  3005  0685  2E91               	goto	l1629
  3006  0686  2E74               	goto	l1621
  3007  0687                     l1627:	
  3008  0687  3001               	movlw	1
  3009  0688                     u1795:	
  3010  0688  36C5               	lsrf	___ftadd@f2+2,f
  3011  0689  0CC4               	rrf	___ftadd@f2+1,f
  3012  068A  0CC3               	rrf	___ftadd@f2,f
  3013  068B  0B89               	decfsz	9,f
  3014  068C  2E88               	goto	u1795
  3015  068D  3001               	movlw	1
  3016  068E  00C6               	movwf	??___ftadd
  3017  068F  0846               	movf	??___ftadd,w
  3018  0690  07CB               	addwf	___ftadd@exp2,f
  3019  0691                     l1629:	
  3020  0691  084C               	movf	___ftadd@exp1,w
  3021  0692  064B               	xorwf	___ftadd@exp2,w
  3022  0693  1D03               	skipz
  3023  0694  2E87               	goto	l1627
  3024  0695                     l481:	
  3025  0695  1FCA               	btfss	___ftadd@sign,7
  3026  0696  2EA7               	goto	l1633
  3027  0697  30FF               	movlw	255
  3028  0698  06C0               	xorwf	___ftadd@f1,f
  3029  0699  30FF               	movlw	255
  3030  069A  06C1               	xorwf	___ftadd@f1+1,f
  3031  069B  30FF               	movlw	255
  3032  069C  06C2               	xorwf	___ftadd@f1+2,f
  3033  069D  3001               	movlw	1
  3034  069E  07C0               	addwf	___ftadd@f1,f
  3035  069F  3000               	movlw	0
  3036  06A0  1803               	skipnc
  3037  06A1  3001               	movlw	1
  3038  06A2  07C1               	addwf	___ftadd@f1+1,f
  3039  06A3  3000               	movlw	0
  3040  06A4  1803               	skipnc
  3041  06A5  3001               	movlw	1
  3042  06A6  07C2               	addwf	___ftadd@f1+2,f
  3043  06A7                     l1633:	
  3044  06A7  1F4A               	btfss	___ftadd@sign,6
  3045  06A8  2EB9               	goto	l1637
  3046  06A9  30FF               	movlw	255
  3047  06AA  06C3               	xorwf	___ftadd@f2,f
  3048  06AB  30FF               	movlw	255
  3049  06AC  06C4               	xorwf	___ftadd@f2+1,f
  3050  06AD  30FF               	movlw	255
  3051  06AE  06C5               	xorwf	___ftadd@f2+2,f
  3052  06AF  3001               	movlw	1
  3053  06B0  07C3               	addwf	___ftadd@f2,f
  3054  06B1  3000               	movlw	0
  3055  06B2  1803               	skipnc
  3056  06B3  3001               	movlw	1
  3057  06B4  07C4               	addwf	___ftadd@f2+1,f
  3058  06B5  3000               	movlw	0
  3059  06B6  1803               	skipnc
  3060  06B7  3001               	movlw	1
  3061  06B8  07C5               	addwf	___ftadd@f2+2,f
  3062  06B9                     l1637:	
  3063  06B9  01CA               	clrf	___ftadd@sign
  3064  06BA  0840               	movf	___ftadd@f1,w
  3065  06BB  07C3               	addwf	___ftadd@f2,f
  3066  06BC  0841               	movf	___ftadd@f1+1,w
  3067  06BD  3DC4               	addwfc	___ftadd@f2+1,f
  3068  06BE  0842               	movf	___ftadd@f1+2,w
  3069  06BF  3DC5               	addwfc	___ftadd@f2+2,f
  3070  06C0  1FC5               	btfss	___ftadd@f2+2,7
  3071  06C1  2ED4               	goto	l1647
  3072  06C2  30FF               	movlw	255
  3073  06C3  06C3               	xorwf	___ftadd@f2,f
  3074  06C4  30FF               	movlw	255
  3075  06C5  06C4               	xorwf	___ftadd@f2+1,f
  3076  06C6  30FF               	movlw	255
  3077  06C7  06C5               	xorwf	___ftadd@f2+2,f
  3078  06C8  3001               	movlw	1
  3079  06C9  07C3               	addwf	___ftadd@f2,f
  3080  06CA  3000               	movlw	0
  3081  06CB  1803               	skipnc
  3082  06CC  3001               	movlw	1
  3083  06CD  07C4               	addwf	___ftadd@f2+1,f
  3084  06CE  3000               	movlw	0
  3085  06CF  1803               	skipnc
  3086  06D0  3001               	movlw	1
  3087  06D1  07C5               	addwf	___ftadd@f2+2,f
  3088  06D2  01CA               	clrf	___ftadd@sign
  3089  06D3  0ACA               	incf	___ftadd@sign,f
  3090  06D4                     l1647:	
  3091  06D4  0843               	movf	___ftadd@f2,w
  3092  06D5  00F0               	movwf	___ftpack@arg
  3093  06D6  0844               	movf	___ftadd@f2+1,w
  3094  06D7  00F1               	movwf	___ftpack@arg+1
  3095  06D8  0845               	movf	___ftadd@f2+2,w
  3096  06D9  00F2               	movwf	___ftpack@arg+2
  3097  06DA  084C               	movf	___ftadd@exp1,w
  3098  06DB  00C6               	movwf	??___ftadd
  3099  06DC  0846               	movf	??___ftadd,w
  3100  06DD  00F3               	movwf	___ftpack@exp
  3101  06DE  084A               	movf	___ftadd@sign,w
  3102  06DF  00C7               	movwf	??___ftadd+1
  3103  06E0  0847               	movf	??___ftadd+1,w
  3104  06E1  00F4               	movwf	___ftpack@sign
  3105  06E2  2217               	fcall	___ftpack
  3106  06E3  0870               	movf	?___ftpack,w
  3107  06E4  0020               	movlb	0	; select bank0
  3108  06E5  00C0               	movwf	?___ftadd
  3109  06E6  0871               	movf	?___ftpack+1,w
  3110  06E7  00C1               	movwf	?___ftadd+1
  3111  06E8  0872               	movf	?___ftpack+2,w
  3112  06E9  00C2               	movwf	?___ftadd+2
  3113  06EA  0008               	return
  3114  06EB                     __end_of___ftadd:	
  3115                           
  3116                           	psect	text13
  3117  0217                     __ptext13:	
  3118 ;; *************** function ___ftpack *****************
  3119 ;; Defined at:
  3120 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  arg             3    0[COMMON] unsigned um
  3123 ;;  exp             1    3[COMMON] unsigned char 
  3124 ;;  sign            1    4[COMMON] unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  3    0[COMMON] float 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1
  3136 ;;      Params:         5       0       0
  3137 ;;      Locals:         0       0       0
  3138 ;;      Temps:          3       0       0
  3139 ;;      Totals:         8       0       0
  3140 ;;Total ram usage:        8 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		___ftadd
  3146 ;;		___ftdiv
  3147 ;;		___ftmul
  3148 ;;		___lwtoft
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function ___ftpack
  3154  0217                     ___ftpack:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3158  0217  0873               	movf	___ftpack@exp,w
  3159  0218  1903               	btfsc	3,2
  3160  0219  2A1F               	goto	l1455
  3161  021A  0872               	movf	___ftpack@arg+2,w
  3162  021B  0471               	iorwf	___ftpack@arg+1,w
  3163  021C  0470               	iorwf	___ftpack@arg,w
  3164  021D  1D03               	skipz
  3165  021E  2A30               	goto	l1461
  3166  021F                     l1455:	
  3167  021F  3000               	movlw	0
  3168  0220  00F0               	movwf	?___ftpack
  3169  0221  3000               	movlw	0
  3170  0222  00F1               	movwf	?___ftpack+1
  3171  0223  3000               	movlw	0
  3172  0224  00F2               	movwf	?___ftpack+2
  3173  0225  0008               	return
  3174  0226                     l1459:	
  3175  0226  3001               	movlw	1
  3176  0227  00F5               	movwf	??___ftpack
  3177  0228  0875               	movf	??___ftpack,w
  3178  0229  07F3               	addwf	___ftpack@exp,f
  3179  022A  3001               	movlw	1
  3180  022B                     u1315:	
  3181  022B  36F2               	lsrf	___ftpack@arg+2,f
  3182  022C  0CF1               	rrf	___ftpack@arg+1,f
  3183  022D  0CF0               	rrf	___ftpack@arg,f
  3184  022E  0B89               	decfsz	9,f
  3185  022F  2A2B               	goto	u1315
  3186  0230                     l1461:	
  3187  0230  30FE               	movlw	254
  3188  0231  0572               	andwf	___ftpack@arg+2,w
  3189  0232  1903               	btfsc	3,2
  3190  0233  2A49               	goto	l450
  3191  0234  2A26               	goto	l1459
  3192  0235                     l1463:	
  3193  0235  3001               	movlw	1
  3194  0236  00F5               	movwf	??___ftpack
  3195  0237  0875               	movf	??___ftpack,w
  3196  0238  07F3               	addwf	___ftpack@exp,f
  3197  0239  3001               	movlw	1
  3198  023A  07F0               	addwf	___ftpack@arg,f
  3199  023B  3000               	movlw	0
  3200  023C  1803               	skipnc
  3201  023D  3001               	movlw	1
  3202  023E  07F1               	addwf	___ftpack@arg+1,f
  3203  023F  3000               	movlw	0
  3204  0240  1803               	skipnc
  3205  0241  3001               	movlw	1
  3206  0242  07F2               	addwf	___ftpack@arg+2,f
  3207  0243  3001               	movlw	1
  3208  0244                     u1335:	
  3209  0244  36F2               	lsrf	___ftpack@arg+2,f
  3210  0245  0CF1               	rrf	___ftpack@arg+1,f
  3211  0246  0CF0               	rrf	___ftpack@arg,f
  3212  0247  0B89               	decfsz	9,f
  3213  0248  2A44               	goto	u1335
  3214  0249                     l450:	
  3215  0249  30FF               	movlw	255
  3216  024A  0572               	andwf	___ftpack@arg+2,w
  3217  024B  1903               	btfsc	3,2
  3218  024C  2A5A               	goto	l1471
  3219  024D  2A35               	goto	l1463
  3220  024E                     l1473:	
  3221  024E  3002               	movlw	2
  3222  024F  0273               	subwf	___ftpack@exp,w
  3223  0250  1C03               	btfss	3,0
  3224  0251  2A5C               	goto	l457
  3225  0252  3001               	movlw	1
  3226  0253  02F3               	subwf	___ftpack@exp,f
  3227  0254  3001               	movlw	1
  3228  0255                     u1355:	
  3229  0255  35F0               	lslf	___ftpack@arg,f
  3230  0256  0DF1               	rlf	___ftpack@arg+1,f
  3231  0257  0DF2               	rlf	___ftpack@arg+2,f
  3232  0258  0B89               	decfsz	9,f
  3233  0259  2A55               	goto	u1355
  3234  025A                     l1471:	
  3235  025A  1FF1               	btfss	___ftpack@arg+1,7
  3236  025B  2A4E               	goto	l1473
  3237  025C                     l457:	
  3238  025C  1873               	btfsc	___ftpack@exp,0
  3239  025D  2A64               	goto	l458
  3240  025E  30FF               	movlw	255
  3241  025F  05F0               	andwf	___ftpack@arg,f
  3242  0260  307F               	movlw	127
  3243  0261  05F1               	andwf	___ftpack@arg+1,f
  3244  0262  30FF               	movlw	255
  3245  0263  05F2               	andwf	___ftpack@arg+2,f
  3246  0264                     l458:	
  3247  0264  1003               	clrc
  3248  0265  0CF3               	rrf	___ftpack@exp,f
  3249  0266  0873               	movf	___ftpack@exp,w
  3250  0267  00F5               	movwf	??___ftpack
  3251  0268  01F6               	clrf	??___ftpack+1
  3252  0269  01F7               	clrf	??___ftpack+2
  3253  026A  3010               	movlw	16
  3254  026B                     u1395:	
  3255  026B  35F5               	lslf	??___ftpack,f
  3256  026C  0DF6               	rlf	??___ftpack+1,f
  3257  026D  0DF7               	rlf	??___ftpack+2,f
  3258  026E  0B89               	decfsz	9,f
  3259  026F  2A6B               	goto	u1395
  3260  0270  0875               	movf	??___ftpack,w
  3261  0271  04F0               	iorwf	___ftpack@arg,f
  3262  0272  0876               	movf	??___ftpack+1,w
  3263  0273  04F1               	iorwf	___ftpack@arg+1,f
  3264  0274  0877               	movf	??___ftpack+2,w
  3265  0275  04F2               	iorwf	___ftpack@arg+2,f
  3266  0276  0874               	movf	___ftpack@sign,w
  3267  0277  1903               	btfsc	3,2
  3268  0278  0008               	return
  3269  0279  17F2               	bsf	___ftpack@arg+2,7
  3270  027A  0008               	return
  3271  027B                     __end_of___ftpack:	
  3272                           
  3273                           	psect	text14
  3274  010B                     __ptext14:	
  3275 ;; *************** function _SetPWMDutyCycle *****************
  3276 ;; Defined at:
  3277 ;;		line 394 in file "user.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  DutyCycle       2    0[COMMON] unsigned int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;		None               void
  3284 ;; Registers used:
  3285 ;;		wreg, status,2
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1
  3291 ;;      Params:         2       0       0
  3292 ;;      Locals:         0       0       0
  3293 ;;      Temps:          0       0       0
  3294 ;;      Totals:         2       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_PulseOut
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function _SetPWMDutyCycle
  3306  010B                     _SetPWMDutyCycle:	
  3307                           
  3308                           ;user.c: 396: PWM2DCH = DutyCycle;
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in _SetPWMDutyCycle: [wreg+status,2]
  3312  010B  0870               	movf	SetPWMDutyCycle@DutyCycle,w
  3313  010C  002C               	movlb	12	; select bank12
  3314  010D  0095               	movwf	21	;volatile
  3315                           
  3316                           ;user.c: 397: PWM2DCL = 0x00;
  3317  010E  0194               	clrf	20	;volatile
  3318  010F  0008               	return
  3319  0110                     __end_of_SetPWMDutyCycle:	
  3320                           
  3321                           	psect	text15
  3322  01E5                     __ptext15:	
  3323 ;; *************** function _LimitFreq *****************
  3324 ;; Defined at:
  3325 ;;		line 377 in file "user.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  iFreq           2    0[COMMON] unsigned int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  iLimited        2    2[COMMON] unsigned int 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  2    0[COMMON] unsigned int 
  3332 ;; Registers used:
  3333 ;;		wreg
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMMON   BANK0   BANK1
  3339 ;;      Params:         2       0       0
  3340 ;;      Locals:         2       0       0
  3341 ;;      Temps:          0       0       0
  3342 ;;      Totals:         4       0       0
  3343 ;;Total ram usage:        4 bytes
  3344 ;; Hardware stack levels used:    1
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_PulseOut
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _LimitFreq
  3354  01E5                     _LimitFreq:	
  3355                           
  3356                           ;user.c: 379: unsigned int iLimited;
  3357                           ;user.c: 381: if (iFreq <= 245)
  3358                           
  3359                           ;incstack = 0
  3360                           ; Regs used in _LimitFreq: [wreg]
  3361  01E5  3000               	movlw	0
  3362  01E6  0271               	subwf	LimitFreq@iFreq+1,w
  3363  01E7  30F6               	movlw	246
  3364  01E8  1903               	skipnz
  3365  01E9  0270               	subwf	LimitFreq@iFreq,w
  3366  01EA  1803               	skipnc
  3367  01EB  29F0               	goto	l1509
  3368                           
  3369                           ;user.c: 382: iLimited = 250;
  3370  01EC  30FA               	movlw	250
  3371  01ED  00F2               	movwf	LimitFreq@iLimited
  3372  01EE  3000               	movlw	0
  3373  01EF  2A0C               	goto	L3
  3374  01F0                     l1509:	
  3375                           
  3376                           ;user.c: 383: else if ((iFreq >= 920) && (iFreq <= 1000))
  3377  01F0  3003               	movlw	3
  3378  01F1  0271               	subwf	LimitFreq@iFreq+1,w
  3379  01F2  3098               	movlw	152
  3380  01F3  1903               	skipnz
  3381  01F4  0270               	subwf	LimitFreq@iFreq,w
  3382  01F5  1C03               	skipc
  3383  01F6  2A02               	goto	l1515
  3384  01F7  3003               	movlw	3
  3385  01F8  0271               	subwf	LimitFreq@iFreq+1,w
  3386  01F9  30E9               	movlw	233
  3387  01FA  1903               	skipnz
  3388  01FB  0270               	subwf	LimitFreq@iFreq,w
  3389  01FC  1803               	skipnc
  3390  01FD  2A02               	goto	l1515
  3391                           
  3392                           ;user.c: 384: iLimited = 1001;
  3393  01FE  30E9               	movlw	233
  3394  01FF  00F2               	movwf	LimitFreq@iLimited
  3395  0200  3003               	movlw	3
  3396  0201  2A0C               	goto	L3
  3397  0202                     l1515:	
  3398                           
  3399                           ;user.c: 385: else if (iFreq >= 10000)
  3400  0202  3027               	movlw	39
  3401  0203  0271               	subwf	LimitFreq@iFreq+1,w
  3402  0204  3010               	movlw	16
  3403  0205  1903               	skipnz
  3404  0206  0270               	subwf	LimitFreq@iFreq,w
  3405  0207  1C03               	skipc
  3406  0208  2A0E               	goto	l1519
  3407                           
  3408                           ;user.c: 386: iLimited = 10000;
  3409  0209  3010               	movlw	16
  3410  020A  00F2               	movwf	LimitFreq@iLimited
  3411  020B  3027               	movlw	39
  3412  020C                     L3:	
  3413  020C  00F3               	movwf	LimitFreq@iLimited+1
  3414  020D  2A12               	goto	l194
  3415  020E                     l1519:	
  3416                           
  3417                           ;user.c: 387: else
  3418                           ;user.c: 388: iLimited = iFreq;
  3419  020E  0871               	movf	LimitFreq@iFreq+1,w
  3420  020F  00F3               	movwf	LimitFreq@iLimited+1
  3421  0210  0870               	movf	LimitFreq@iFreq,w
  3422  0211  00F2               	movwf	LimitFreq@iLimited
  3423  0212                     l194:	
  3424                           
  3425                           ;user.c: 389: return iLimited;
  3426  0212  0873               	movf	LimitFreq@iLimited+1,w
  3427  0213  00F1               	movwf	?_LimitFreq+1
  3428  0214  0872               	movf	LimitFreq@iLimited,w
  3429  0215  00F0               	movwf	?_LimitFreq
  3430  0216  0008               	return
  3431  0217                     __end_of_LimitFreq:	
  3432                           
  3433                           	psect	text16
  3434  027B                     __ptext16:	
  3435 ;; *************** function _ConvertRpm2Hz *****************
  3436 ;; Defined at:
  3437 ;;		line 104 in file "cleankeeper.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  iRpm            2   14[BANK0 ] int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  iHertz          4   20[BANK0 ] long 
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2   14[BANK0 ] int 
  3444 ;; Registers used:
  3445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1
  3451 ;;      Params:         0       2       0
  3452 ;;      Locals:         0       8       0
  3453 ;;      Temps:          0       0       0
  3454 ;;      Totals:         0      10       0
  3455 ;;Total ram usage:       10 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    1
  3458 ;; This function calls:
  3459 ;;		___aldiv
  3460 ;;		___lmul
  3461 ;; This function is called by:
  3462 ;;		_CleanKeeperInit
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _ConvertRpm2Hz
  3468  027B                     _ConvertRpm2Hz:	
  3469                           
  3470                           ;cleankeeper.c: 106: long int iHertz;
  3471                           ;cleankeeper.c: 107: const long int iScale=100;
  3472                           ;cleankeeper.c: 109: iHertz = ((iRpm*iScale)/60)*200*4;
  3473                           
  3474                           ;incstack = 0
  3475                           ; Regs used in _ConvertRpm2Hz: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3476  027B  3000               	movlw	0
  3477  027C  0020               	movlb	0	; select bank0
  3478  027D  00A3               	movwf	___aldiv@divisor+3
  3479  027E  3000               	movlw	0
  3480  027F  00A2               	movwf	___aldiv@divisor+2
  3481  0280  3000               	movlw	0
  3482  0281  00A1               	movwf	___aldiv@divisor+1
  3483  0282  303C               	movlw	60
  3484  0283  00A0               	movwf	___aldiv@divisor
  3485  0284  082E               	movf	ConvertRpm2Hz@iRpm,w
  3486  0285  00F0               	movwf	___lmul@multiplier
  3487  0286  082F               	movf	ConvertRpm2Hz@iRpm+1,w
  3488  0287  00F1               	movwf	___lmul@multiplier+1
  3489  0288  0D89               	rlf	9,f
  3490  0289  3B89               	subwfb	9,f
  3491  028A  0989               	comf	9,f
  3492  028B  00F2               	movwf	___lmul@multiplier+2
  3493  028C  00F3               	movwf	___lmul@multiplier+3
  3494  028D  3000               	movlw	low (ConvertRpm2Hz@iScale| (0+32768))
  3495  028E  0084               	movwf	4
  3496  028F  3081               	movlw	high (ConvertRpm2Hz@iScale| (0+32768))
  3497  0290  0085               	movwf	5
  3498  0291  3F00               	moviw [0]fsr0
  3499  0292  00F4               	movwf	___lmul@multiplicand
  3500  0293  3F01               	moviw [1]fsr0
  3501  0294  00F5               	movwf	___lmul@multiplicand+1
  3502  0295  3F02               	moviw [2]fsr0
  3503  0296  00F6               	movwf	___lmul@multiplicand+2
  3504  0297  3F03               	moviw [3]fsr0
  3505  0298  00F7               	movwf	___lmul@multiplicand+3
  3506  0299  21B6               	fcall	___lmul
  3507  029A  0873               	movf	?___lmul+3,w
  3508  029B  0020               	movlb	0	; select bank0
  3509  029C  00A7               	movwf	___aldiv@dividend+3
  3510  029D  0872               	movf	?___lmul+2,w
  3511  029E  00A6               	movwf	___aldiv@dividend+2
  3512  029F  0871               	movf	?___lmul+1,w
  3513  02A0  00A5               	movwf	___aldiv@dividend+1
  3514  02A1  0870               	movf	?___lmul,w
  3515  02A2  00A4               	movwf	___aldiv@dividend
  3516  02A3  22EA               	fcall	___aldiv
  3517  02A4  0020               	movlb	0	; select bank0
  3518  02A5  0823               	movf	?___aldiv+3,w
  3519  02A6  00B3               	movwf	_ConvertRpm2Hz$1026+3
  3520  02A7  0822               	movf	?___aldiv+2,w
  3521  02A8  00B2               	movwf	_ConvertRpm2Hz$1026+2
  3522  02A9  0821               	movf	?___aldiv+1,w
  3523  02AA  00B1               	movwf	_ConvertRpm2Hz$1026+1
  3524  02AB  0820               	movf	?___aldiv,w
  3525  02AC  00B0               	movwf	_ConvertRpm2Hz$1026
  3526                           
  3527                           ;cleankeeper.c: 106: long int iHertz;
  3528                           ;cleankeeper.c: 107: const long int iScale=100;
  3529                           ;cleankeeper.c: 109: iHertz = ((iRpm*iScale)/60)*200*4;
  3530  02AD  0833               	movf	_ConvertRpm2Hz$1026+3,w
  3531  02AE  00F3               	movwf	___lmul@multiplier+3
  3532  02AF  0832               	movf	_ConvertRpm2Hz$1026+2,w
  3533  02B0  00F2               	movwf	___lmul@multiplier+2
  3534  02B1  0831               	movf	_ConvertRpm2Hz$1026+1,w
  3535  02B2  00F1               	movwf	___lmul@multiplier+1
  3536  02B3  0830               	movf	_ConvertRpm2Hz$1026,w
  3537  02B4  00F0               	movwf	___lmul@multiplier
  3538  02B5  3000               	movlw	0
  3539  02B6  00F7               	movwf	___lmul@multiplicand+3
  3540  02B7  3000               	movlw	0
  3541  02B8  00F6               	movwf	___lmul@multiplicand+2
  3542  02B9  3003               	movlw	3
  3543  02BA  00F5               	movwf	___lmul@multiplicand+1
  3544  02BB  3020               	movlw	32
  3545  02BC  00F4               	movwf	___lmul@multiplicand
  3546  02BD  21B6               	fcall	___lmul
  3547  02BE  0873               	movf	?___lmul+3,w
  3548  02BF  0020               	movlb	0	; select bank0
  3549  02C0  00B7               	movwf	ConvertRpm2Hz@iHertz+3
  3550  02C1  0872               	movf	?___lmul+2,w
  3551  02C2  00B6               	movwf	ConvertRpm2Hz@iHertz+2
  3552  02C3  0871               	movf	?___lmul+1,w
  3553  02C4  00B5               	movwf	ConvertRpm2Hz@iHertz+1
  3554  02C5  0870               	movf	?___lmul,w
  3555  02C6  00B4               	movwf	ConvertRpm2Hz@iHertz
  3556                           
  3557                           ;cleankeeper.c: 110: iHertz = iHertz/iScale;
  3558  02C7  3000               	movlw	low (ConvertRpm2Hz@iScale| (0+32768))
  3559  02C8  0084               	movwf	4
  3560  02C9  3081               	movlw	high (ConvertRpm2Hz@iScale| (0+32768))
  3561  02CA  0085               	movwf	5
  3562  02CB  3F00               	moviw [0]fsr0
  3563  02CC  00A0               	movwf	___aldiv@divisor
  3564  02CD  3F01               	moviw [1]fsr0
  3565  02CE  00A1               	movwf	___aldiv@divisor+1
  3566  02CF  3F02               	moviw [2]fsr0
  3567  02D0  00A2               	movwf	___aldiv@divisor+2
  3568  02D1  3F03               	moviw [3]fsr0
  3569  02D2  00A3               	movwf	___aldiv@divisor+3
  3570  02D3  0837               	movf	ConvertRpm2Hz@iHertz+3,w
  3571  02D4  00A7               	movwf	___aldiv@dividend+3
  3572  02D5  0836               	movf	ConvertRpm2Hz@iHertz+2,w
  3573  02D6  00A6               	movwf	___aldiv@dividend+2
  3574  02D7  0835               	movf	ConvertRpm2Hz@iHertz+1,w
  3575  02D8  00A5               	movwf	___aldiv@dividend+1
  3576  02D9  0834               	movf	ConvertRpm2Hz@iHertz,w
  3577  02DA  00A4               	movwf	___aldiv@dividend
  3578  02DB  22EA               	fcall	___aldiv
  3579  02DC  0020               	movlb	0	; select bank0
  3580  02DD  0823               	movf	?___aldiv+3,w
  3581  02DE  00B7               	movwf	ConvertRpm2Hz@iHertz+3
  3582  02DF  0822               	movf	?___aldiv+2,w
  3583  02E0  00B6               	movwf	ConvertRpm2Hz@iHertz+2
  3584  02E1  0821               	movf	?___aldiv+1,w
  3585  02E2  00B5               	movwf	ConvertRpm2Hz@iHertz+1
  3586  02E3  0820               	movf	?___aldiv,w
  3587  02E4  00B4               	movwf	ConvertRpm2Hz@iHertz
  3588                           
  3589                           ;cleankeeper.c: 112: return iHertz;
  3590  02E5  0835               	movf	ConvertRpm2Hz@iHertz+1,w
  3591  02E6  00AF               	movwf	?_ConvertRpm2Hz+1
  3592  02E7  0834               	movf	ConvertRpm2Hz@iHertz,w
  3593  02E8  00AE               	movwf	?_ConvertRpm2Hz
  3594  02E9  0008               	return
  3595  02EA                     __end_of_ConvertRpm2Hz:	
  3596                           
  3597                           	psect	text17
  3598  01B6                     __ptext17:	
  3599 ;; *************** function ___lmul *****************
  3600 ;; Defined at:
  3601 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul32.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  multiplier      4    0[COMMON] unsigned long 
  3604 ;;  multiplicand    4    4[COMMON] unsigned long 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  product         4    8[COMMON] unsigned long 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  4    0[COMMON] unsigned long 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1
  3616 ;;      Params:         8       0       0
  3617 ;;      Locals:         4       0       0
  3618 ;;      Temps:          0       0       0
  3619 ;;      Totals:        12       0       0
  3620 ;;Total ram usage:       12 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_ConvertRpm2Hz
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           
  3630                           ;psect for function ___lmul
  3631  01B6                     ___lmul:	
  3632                           
  3633                           ;incstack = 0
  3634                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3635  01B6  3000               	movlw	0
  3636  01B7  00FB               	movwf	___lmul@product+3
  3637  01B8  3000               	movlw	0
  3638  01B9  00FA               	movwf	___lmul@product+2
  3639  01BA  3000               	movlw	0
  3640  01BB  00F9               	movwf	___lmul@product+1
  3641  01BC  3000               	movlw	0
  3642  01BD  00F8               	movwf	___lmul@product
  3643  01BE                     l1529:	
  3644  01BE  1C70               	btfss	___lmul@multiplier,0
  3645  01BF  29C8               	goto	l1533
  3646  01C0  0874               	movf	___lmul@multiplicand,w
  3647  01C1  07F8               	addwf	___lmul@product,f
  3648  01C2  0875               	movf	___lmul@multiplicand+1,w
  3649  01C3  3DF9               	addwfc	___lmul@product+1,f
  3650  01C4  0876               	movf	___lmul@multiplicand+2,w
  3651  01C5  3DFA               	addwfc	___lmul@product+2,f
  3652  01C6  0877               	movf	___lmul@multiplicand+3,w
  3653  01C7  3DFB               	addwfc	___lmul@product+3,f
  3654  01C8                     l1533:	
  3655  01C8  3001               	movlw	1
  3656  01C9                     u1485:	
  3657  01C9  35F4               	lslf	___lmul@multiplicand,f
  3658  01CA  0DF5               	rlf	___lmul@multiplicand+1,f
  3659  01CB  0DF6               	rlf	___lmul@multiplicand+2,f
  3660  01CC  0DF7               	rlf	___lmul@multiplicand+3,f
  3661  01CD  0B89               	decfsz	9,f
  3662  01CE  29C9               	goto	u1485
  3663  01CF  3001               	movlw	1
  3664  01D0                     u1495:	
  3665  01D0  36F3               	lsrf	___lmul@multiplier+3,f
  3666  01D1  0CF2               	rrf	___lmul@multiplier+2,f
  3667  01D2  0CF1               	rrf	___lmul@multiplier+1,f
  3668  01D3  0CF0               	rrf	___lmul@multiplier,f
  3669  01D4  0B89               	decfsz	9,f
  3670  01D5  29D0               	goto	u1495
  3671  01D6  0873               	movf	___lmul@multiplier+3,w
  3672  01D7  0472               	iorwf	___lmul@multiplier+2,w
  3673  01D8  0471               	iorwf	___lmul@multiplier+1,w
  3674  01D9  0470               	iorwf	___lmul@multiplier,w
  3675  01DA  1D03               	skipz
  3676  01DB  29BE               	goto	l1529
  3677  01DC  087B               	movf	___lmul@product+3,w
  3678  01DD  00F3               	movwf	?___lmul+3
  3679  01DE  087A               	movf	___lmul@product+2,w
  3680  01DF  00F2               	movwf	?___lmul+2
  3681  01E0  0879               	movf	___lmul@product+1,w
  3682  01E1  00F1               	movwf	?___lmul+1
  3683  01E2  0878               	movf	___lmul@product,w
  3684  01E3  00F0               	movwf	?___lmul
  3685  01E4  0008               	return
  3686  01E5                     __end_of___lmul:	
  3687                           
  3688                           	psect	text18
  3689  02EA                     __ptext18:	
  3690 ;; *************** function ___aldiv *****************
  3691 ;; Defined at:
  3692 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\aldiv.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  divisor         4    0[BANK0 ] long 
  3695 ;;  dividend        4    4[BANK0 ] long 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  quotient        4   10[BANK0 ] long 
  3698 ;;  sign            1    9[BANK0 ] unsigned char 
  3699 ;;  counter         1    8[BANK0 ] unsigned char 
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  4    0[BANK0 ] long 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1
  3709 ;;      Params:         0       8       0
  3710 ;;      Locals:         0       6       0
  3711 ;;      Temps:          1       0       0
  3712 ;;      Totals:         1      14       0
  3713 ;;Total ram usage:       15 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_ConvertRpm2Hz
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function ___aldiv
  3724  02EA                     ___aldiv:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3728  02EA  0020               	movlb	0	; select bank0
  3729  02EB  01A9               	clrf	___aldiv@sign
  3730  02EC  1FA3               	btfss	___aldiv@divisor+3,7
  3731  02ED  2AFB               	goto	l344
  3732  02EE  09A0               	comf	___aldiv@divisor,f
  3733  02EF  09A1               	comf	___aldiv@divisor+1,f
  3734  02F0  09A2               	comf	___aldiv@divisor+2,f
  3735  02F1  09A3               	comf	___aldiv@divisor+3,f
  3736  02F2  0AA0               	incf	___aldiv@divisor,f
  3737  02F3  1903               	skipnz
  3738  02F4  0AA1               	incf	___aldiv@divisor+1,f
  3739  02F5  1903               	skipnz
  3740  02F6  0AA2               	incf	___aldiv@divisor+2,f
  3741  02F7  1903               	skipnz
  3742  02F8  0AA3               	incf	___aldiv@divisor+3,f
  3743  02F9  01A9               	clrf	___aldiv@sign
  3744  02FA  0AA9               	incf	___aldiv@sign,f
  3745  02FB                     l344:	
  3746  02FB  1FA7               	btfss	___aldiv@dividend+3,7
  3747  02FC  2B0C               	goto	l1551
  3748  02FD  09A4               	comf	___aldiv@dividend,f
  3749  02FE  09A5               	comf	___aldiv@dividend+1,f
  3750  02FF  09A6               	comf	___aldiv@dividend+2,f
  3751  0300  09A7               	comf	___aldiv@dividend+3,f
  3752  0301  0AA4               	incf	___aldiv@dividend,f
  3753  0302  1903               	skipnz
  3754  0303  0AA5               	incf	___aldiv@dividend+1,f
  3755  0304  1903               	skipnz
  3756  0305  0AA6               	incf	___aldiv@dividend+2,f
  3757  0306  1903               	skipnz
  3758  0307  0AA7               	incf	___aldiv@dividend+3,f
  3759  0308  3001               	movlw	1
  3760  0309  00FC               	movwf	??___aldiv
  3761  030A  087C               	movf	??___aldiv,w
  3762  030B  06A9               	xorwf	___aldiv@sign,f
  3763  030C                     l1551:	
  3764  030C  3000               	movlw	0
  3765  030D  00AD               	movwf	___aldiv@quotient+3
  3766  030E  3000               	movlw	0
  3767  030F  00AC               	movwf	___aldiv@quotient+2
  3768  0310  3000               	movlw	0
  3769  0311  00AB               	movwf	___aldiv@quotient+1
  3770  0312  3000               	movlw	0
  3771  0313  00AA               	movwf	___aldiv@quotient
  3772  0314  0823               	movf	___aldiv@divisor+3,w
  3773  0315  0422               	iorwf	___aldiv@divisor+2,w
  3774  0316  0421               	iorwf	___aldiv@divisor+1,w
  3775  0317  0420               	iorwf	___aldiv@divisor,w
  3776  0318  1903               	skipnz
  3777  0319  2B55               	goto	l1573
  3778  031A  01A8               	clrf	___aldiv@counter
  3779  031B  0AA8               	incf	___aldiv@counter,f
  3780  031C                     l1559:	
  3781  031C  1BA3               	btfsc	___aldiv@divisor+3,7
  3782  031D  2B2A               	goto	l1561
  3783  031E  3001               	movlw	1
  3784  031F                     u1545:	
  3785  031F  35A0               	lslf	___aldiv@divisor,f
  3786  0320  0DA1               	rlf	___aldiv@divisor+1,f
  3787  0321  0DA2               	rlf	___aldiv@divisor+2,f
  3788  0322  0DA3               	rlf	___aldiv@divisor+3,f
  3789  0323  0B89               	decfsz	9,f
  3790  0324  2B1F               	goto	u1545
  3791  0325  3001               	movlw	1
  3792  0326  00FC               	movwf	??___aldiv
  3793  0327  087C               	movf	??___aldiv,w
  3794  0328  07A8               	addwf	___aldiv@counter,f
  3795  0329  2B1C               	goto	l1559
  3796  032A                     l1561:	
  3797  032A  3001               	movlw	1
  3798  032B                     u1565:	
  3799  032B  35AA               	lslf	___aldiv@quotient,f
  3800  032C  0DAB               	rlf	___aldiv@quotient+1,f
  3801  032D  0DAC               	rlf	___aldiv@quotient+2,f
  3802  032E  0DAD               	rlf	___aldiv@quotient+3,f
  3803  032F  0B89               	decfsz	9,f
  3804  0330  2B2B               	goto	u1565
  3805  0331  0823               	movf	___aldiv@divisor+3,w
  3806  0332  0227               	subwf	___aldiv@dividend+3,w
  3807  0333  1D03               	skipz
  3808  0334  2B3F               	goto	u1575
  3809  0335  0822               	movf	___aldiv@divisor+2,w
  3810  0336  0226               	subwf	___aldiv@dividend+2,w
  3811  0337  1D03               	skipz
  3812  0338  2B3F               	goto	u1575
  3813  0339  0821               	movf	___aldiv@divisor+1,w
  3814  033A  0225               	subwf	___aldiv@dividend+1,w
  3815  033B  1D03               	skipz
  3816  033C  2B3F               	goto	u1575
  3817  033D  0820               	movf	___aldiv@divisor,w
  3818  033E  0224               	subwf	___aldiv@dividend,w
  3819  033F                     u1575:	
  3820  033F  1C03               	skipc
  3821  0340  2B4A               	goto	l1569
  3822  0341  0820               	movf	___aldiv@divisor,w
  3823  0342  02A4               	subwf	___aldiv@dividend,f
  3824  0343  0821               	movf	___aldiv@divisor+1,w
  3825  0344  3BA5               	subwfb	___aldiv@dividend+1,f
  3826  0345  0822               	movf	___aldiv@divisor+2,w
  3827  0346  3BA6               	subwfb	___aldiv@dividend+2,f
  3828  0347  0823               	movf	___aldiv@divisor+3,w
  3829  0348  3BA7               	subwfb	___aldiv@dividend+3,f
  3830  0349  142A               	bsf	___aldiv@quotient,0
  3831  034A                     l1569:	
  3832  034A  3001               	movlw	1
  3833  034B                     u1585:	
  3834  034B  36A3               	lsrf	___aldiv@divisor+3,f
  3835  034C  0CA2               	rrf	___aldiv@divisor+2,f
  3836  034D  0CA1               	rrf	___aldiv@divisor+1,f
  3837  034E  0CA0               	rrf	___aldiv@divisor,f
  3838  034F  0B89               	decfsz	9,f
  3839  0350  2B4B               	goto	u1585
  3840  0351  3001               	movlw	1
  3841  0352  02A8               	subwf	___aldiv@counter,f
  3842  0353  1D03               	btfss	3,2
  3843  0354  2B2A               	goto	l1561
  3844  0355                     l1573:	
  3845  0355  0829               	movf	___aldiv@sign,w
  3846  0356  1903               	btfsc	3,2
  3847  0357  2B63               	goto	l1577
  3848  0358  09AA               	comf	___aldiv@quotient,f
  3849  0359  09AB               	comf	___aldiv@quotient+1,f
  3850  035A  09AC               	comf	___aldiv@quotient+2,f
  3851  035B  09AD               	comf	___aldiv@quotient+3,f
  3852  035C  0AAA               	incf	___aldiv@quotient,f
  3853  035D  1903               	skipnz
  3854  035E  0AAB               	incf	___aldiv@quotient+1,f
  3855  035F  1903               	skipnz
  3856  0360  0AAC               	incf	___aldiv@quotient+2,f
  3857  0361  1903               	skipnz
  3858  0362  0AAD               	incf	___aldiv@quotient+3,f
  3859  0363                     l1577:	
  3860  0363  082D               	movf	___aldiv@quotient+3,w
  3861  0364  00A3               	movwf	?___aldiv+3
  3862  0365  082C               	movf	___aldiv@quotient+2,w
  3863  0366  00A2               	movwf	?___aldiv+2
  3864  0367  082B               	movf	___aldiv@quotient+1,w
  3865  0368  00A1               	movwf	?___aldiv+1
  3866  0369  082A               	movf	___aldiv@quotient,w
  3867  036A  00A0               	movwf	?___aldiv
  3868  036B  0008               	return
  3869  036C                     __end_of___aldiv:	
  3870                           
  3871                           	psect	text19
  3872  06EB                     __ptext19:	
  3873 ;; *************** function _CleanKeeperController *****************
  3874 ;; Defined at:
  3875 ;;		line 152 in file "cleankeeper.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  bGreen          1    5[COMMON] unsigned char 
  3880 ;;  bRed            1    4[COMMON] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;		None               void
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1
  3890 ;;      Params:         0       0       0
  3891 ;;      Locals:         2       0       0
  3892 ;;      Temps:          4       0       0
  3893 ;;      Totals:         6       0       0
  3894 ;;Total ram usage:        6 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           
  3904                           ;psect for function _CleanKeeperController
  3905  06EB                     _CleanKeeperController:	
  3906                           
  3907                           ;cleankeeper.c: 154: static unsigned int iState;
  3908                           ;cleankeeper.c: 155: static unsigned long iTimer;
  3909                           ;cleankeeper.c: 156: static unsigned char bSignalRelay;
  3910                           ;cleankeeper.c: 157: static unsigned char bSignalDirection;
  3911                           ;cleankeeper.c: 158: static unsigned char bSignalOverload;
  3912                           ;cleankeeper.c: 159: unsigned char bGreen, bRed;
  3913                           ;cleankeeper.c: 160: static long iOverLoadTimer;
  3914                           ;cleankeeper.c: 166: bGreen = PORTAbits.RA0;
  3915                           
  3916                           ;incstack = 0
  3917                           ; Regs used in _CleanKeeperController: [wreg+status,2+status,0]
  3918  06EB  3000               	movlw	0
  3919  06EC  0020               	movlb	0	; select bank0
  3920  06ED  180C               	btfsc	12,0	;volatile
  3921  06EE  3001               	movlw	1
  3922  06EF  00F5               	movwf	CleanKeeperController@bGreen
  3923                           
  3924                           ;cleankeeper.c: 167: bRed = PORTAbits.RA1;
  3925  06F0  3000               	movlw	0
  3926  06F1  188C               	btfsc	12,1	;volatile
  3927  06F2  3001               	movlw	1
  3928  06F3  00F4               	movwf	CleanKeeperController@bRed
  3929                           
  3930                           ;cleankeeper.c: 173: if ((iState == 0) || (iState >5))
  3931  06F4  0867               	movf	CleanKeeperController@iState,w
  3932  06F5  0468               	iorwf	CleanKeeperController@iState+1,w
  3933  06F6  1903               	btfsc	3,2
  3934  06F7  2EFF               	goto	l1897
  3935  06F8  3000               	movlw	0
  3936  06F9  0268               	subwf	CleanKeeperController@iState+1,w
  3937  06FA  3006               	movlw	6
  3938  06FB  1903               	skipnz
  3939  06FC  0267               	subwf	CleanKeeperController@iState,w
  3940  06FD  1C03               	skipc
  3941  06FE  2F09               	goto	l1903
  3942  06FF                     l1897:	
  3943                           
  3944                           ;cleankeeper.c: 174: {
  3945                           ;cleankeeper.c: 175: if ((bGreen == 0) && (bRed == 0))
  3946  06FF  0875               	movf	CleanKeeperController@bGreen,w
  3947  0700  1D03               	btfss	3,2
  3948  0701  2F09               	goto	l1903
  3949  0702  0874               	movf	CleanKeeperController@bRed,w
  3950  0703  1D03               	btfss	3,2
  3951  0704  2F09               	goto	l1903
  3952                           
  3953                           ;cleankeeper.c: 176: {
  3954                           ;cleankeeper.c: 177: iState = 1;
  3955  0705  3001               	movlw	1
  3956  0706  00E7               	movwf	CleanKeeperController@iState
  3957  0707  3000               	movlw	0
  3958  0708  00E8               	movwf	CleanKeeperController@iState+1
  3959  0709                     l1903:	
  3960                           
  3961                           ;cleankeeper.c: 178: }
  3962                           ;cleankeeper.c: 179: }
  3963                           ;cleankeeper.c: 182: if (iState == 1)
  3964  0709  0367               	decf	CleanKeeperController@iState,w
  3965  070A  0468               	iorwf	CleanKeeperController@iState+1,w
  3966  070B  1D03               	btfss	3,2
  3967  070C  2F1D               	goto	l1915
  3968                           
  3969                           ;cleankeeper.c: 183: {
  3970                           ;cleankeeper.c: 184: if ((bGreen == 1) || (bRed == 1))
  3971  070D  0375               	decf	CleanKeeperController@bGreen,w
  3972  070E  1D03               	btfss	3,2
  3973  070F  0374               	decf	CleanKeeperController@bRed,w
  3974  0710  1D03               	btfss	3,2
  3975  0711  2F1D               	goto	l1915
  3976                           
  3977                           ;cleankeeper.c: 185: {
  3978                           ;cleankeeper.c: 188: if (bGreen == 1)
  3979  0712  0375               	decf	CleanKeeperController@bGreen,w
  3980  0713  1D03               	btfss	3,2
  3981  0714  2F17               	goto	l248
  3982                           
  3983                           ;cleankeeper.c: 189: {
  3984                           ;cleankeeper.c: 190: bSignalDirection = 0;
  3985  0715  01E9               	clrf	CleanKeeperController@bSignalDirection
  3986                           
  3987                           ;cleankeeper.c: 191: }
  3988  0716  2F19               	goto	l1913
  3989  0717                     l248:	
  3990                           
  3991                           ;cleankeeper.c: 192: else
  3992                           ;cleankeeper.c: 193: {
  3993                           ;cleankeeper.c: 194: bSignalDirection = 1;
  3994  0717  01E9               	clrf	CleanKeeperController@bSignalDirection
  3995  0718  0AE9               	incf	CleanKeeperController@bSignalDirection,f
  3996  0719                     l1913:	
  3997                           
  3998                           ;cleankeeper.c: 195: }
  3999                           ;cleankeeper.c: 197: iState = 2;
  4000  0719  3002               	movlw	2
  4001  071A  00E7               	movwf	CleanKeeperController@iState
  4002  071B  3000               	movlw	0
  4003  071C  00E8               	movwf	CleanKeeperController@iState+1
  4004  071D                     l1915:	
  4005                           
  4006                           ;cleankeeper.c: 198: }
  4007                           ;cleankeeper.c: 199: }
  4008                           ;cleankeeper.c: 201: if (iState == 2)
  4009  071D  3002               	movlw	2
  4010  071E  0667               	xorwf	CleanKeeperController@iState,w
  4011  071F  0468               	iorwf	CleanKeeperController@iState+1,w
  4012  0720  1D03               	btfss	3,2
  4013  0721  2F38               	goto	l1927
  4014                           
  4015                           ;cleankeeper.c: 202: {
  4016                           ;cleankeeper.c: 204: iTimer = (30120l*20);
  4017  0722  3000               	movlw	0
  4018  0723  0021               	movlb	1	; select bank1
  4019  0724  00A3               	movwf	(CleanKeeperController@iTimer+3)^(0+128)
  4020  0725  3009               	movlw	9
  4021  0726  00A2               	movwf	(CleanKeeperController@iTimer+2)^(0+128)
  4022  0727  3031               	movlw	49
  4023  0728  00A1               	movwf	(CleanKeeperController@iTimer+1)^(0+128)
  4024  0729  3020               	movlw	32
  4025  072A  00A0               	movwf	CleanKeeperController@iTimer^(0+128)
  4026                           
  4027                           ;cleankeeper.c: 206: bSignalRelay = 1;
  4028  072B  0020               	movlb	0	; select bank0
  4029  072C  01EB               	clrf	CleanKeeperController@bSignalRelay
  4030  072D  0AEB               	incf	CleanKeeperController@bSignalRelay,f
  4031                           
  4032                           ;cleankeeper.c: 208: if ((bGreen == 0) && (bRed == 0))
  4033  072E  0875               	movf	CleanKeeperController@bGreen,w
  4034  072F  1D03               	btfss	3,2
  4035  0730  2F38               	goto	l1927
  4036  0731  0874               	movf	CleanKeeperController@bRed,w
  4037  0732  1D03               	btfss	3,2
  4038  0733  2F38               	goto	l1927
  4039                           
  4040                           ;cleankeeper.c: 209: {
  4041                           ;cleankeeper.c: 210: iState = 3;
  4042  0734  3003               	movlw	3
  4043  0735  00E7               	movwf	CleanKeeperController@iState
  4044  0736  3000               	movlw	0
  4045  0737  00E8               	movwf	CleanKeeperController@iState+1
  4046  0738                     l1927:	
  4047                           
  4048                           ;cleankeeper.c: 211: }
  4049                           ;cleankeeper.c: 212: }
  4050                           ;cleankeeper.c: 215: if (iState == 3)
  4051  0738  3003               	movlw	3
  4052  0739  0667               	xorwf	CleanKeeperController@iState,w
  4053  073A  0468               	iorwf	CleanKeeperController@iState+1,w
  4054  073B  1D03               	btfss	3,2
  4055  073C  2F63               	goto	l1939
  4056                           
  4057                           ;cleankeeper.c: 216: {
  4058                           ;cleankeeper.c: 218: iTimer--;
  4059  073D  3001               	movlw	1
  4060  073E  00F0               	movwf	??_CleanKeeperController
  4061  073F  3000               	movlw	0
  4062  0740  00F1               	movwf	??_CleanKeeperController+1
  4063  0741  3000               	movlw	0
  4064  0742  00F2               	movwf	??_CleanKeeperController+2
  4065  0743  3000               	movlw	0
  4066  0744  00F3               	movwf	??_CleanKeeperController+3
  4067  0745  0870               	movf	??_CleanKeeperController,w
  4068  0746  0021               	movlb	1	; select bank1
  4069  0747  02A0               	subwf	CleanKeeperController@iTimer^(0+128),f
  4070  0748  0871               	movf	??_CleanKeeperController+1,w
  4071  0749  3BA1               	subwfb	(CleanKeeperController@iTimer+1)^(0+128),f
  4072  074A  0872               	movf	??_CleanKeeperController+2,w
  4073  074B  3BA2               	subwfb	(CleanKeeperController@iTimer+2)^(0+128),f
  4074  074C  0873               	movf	??_CleanKeeperController+3,w
  4075  074D  3BA3               	subwfb	(CleanKeeperController@iTimer+3)^(0+128),f
  4076                           
  4077                           ;cleankeeper.c: 219: if (iTimer == 0)
  4078  074E  0823               	movf	(CleanKeeperController@iTimer+3)^(0+128),w
  4079  074F  0422               	iorwf	(CleanKeeperController@iTimer+2)^(0+128),w
  4080  0750  0421               	iorwf	(CleanKeeperController@iTimer+1)^(0+128),w
  4081  0751  0420               	iorwf	CleanKeeperController@iTimer^(0+128),w
  4082  0752  1D03               	skipz
  4083  0753  2F59               	goto	l1933
  4084                           
  4085                           ;cleankeeper.c: 220: {
  4086                           ;cleankeeper.c: 221: iState = 4;
  4087  0754  3004               	movlw	4
  4088  0755  0020               	movlb	0	; select bank0
  4089  0756  00E7               	movwf	CleanKeeperController@iState
  4090  0757  3000               	movlw	0
  4091  0758  00E8               	movwf	CleanKeeperController@iState+1
  4092  0759                     l1933:	
  4093                           
  4094                           ;cleankeeper.c: 222: }
  4095                           ;cleankeeper.c: 224: if ((bGreen == 1) || (bRed == 1))
  4096  0759  0375               	decf	CleanKeeperController@bGreen,w
  4097  075A  1D03               	btfss	3,2
  4098  075B  0374               	decf	CleanKeeperController@bRed,w
  4099  075C  1D03               	btfss	3,2
  4100  075D  2F63               	goto	l1939
  4101                           
  4102                           ;cleankeeper.c: 225: {
  4103                           ;cleankeeper.c: 226: iState = 1;
  4104  075E  3001               	movlw	1
  4105  075F  0020               	movlb	0	; select bank0
  4106  0760  00E7               	movwf	CleanKeeperController@iState
  4107  0761  3000               	movlw	0
  4108  0762  00E8               	movwf	CleanKeeperController@iState+1
  4109  0763                     l1939:	
  4110                           
  4111                           ;cleankeeper.c: 227: }
  4112                           ;cleankeeper.c: 228: }
  4113                           ;cleankeeper.c: 230: if (iState == 4)
  4114  0763  3004               	movlw	4
  4115  0764  0020               	movlb	0	; select bank0
  4116  0765  0667               	xorwf	CleanKeeperController@iState,w
  4117  0766  0468               	iorwf	CleanKeeperController@iState+1,w
  4118  0767  1D03               	btfss	3,2
  4119  0768  2F6E               	goto	l1945
  4120                           
  4121                           ;cleankeeper.c: 231: {
  4122                           ;cleankeeper.c: 233: bSignalRelay = 0;
  4123  0769  01EB               	clrf	CleanKeeperController@bSignalRelay
  4124                           
  4125                           ;cleankeeper.c: 235: iState = 1;
  4126  076A  3001               	movlw	1
  4127  076B  00E7               	movwf	CleanKeeperController@iState
  4128  076C  3000               	movlw	0
  4129  076D  00E8               	movwf	CleanKeeperController@iState+1
  4130  076E                     l1945:	
  4131                           
  4132                           ;cleankeeper.c: 236: }
  4133                           ;cleankeeper.c: 239: if (iState == 5)
  4134  076E  3005               	movlw	5
  4135  076F  0667               	xorwf	CleanKeeperController@iState,w
  4136  0770  0468               	iorwf	CleanKeeperController@iState+1,w
  4137  0771  1D03               	btfss	3,2
  4138  0772  2F86               	goto	l1955
  4139                           
  4140                           ;cleankeeper.c: 240: {
  4141                           ;cleankeeper.c: 241: bSignalOverload = 1;
  4142  0773  01EA               	clrf	CleanKeeperController@bSignalOverload
  4143  0774  0AEA               	incf	CleanKeeperController@bSignalOverload,f
  4144                           
  4145                           ;cleankeeper.c: 242: bSignalRelay = 0;
  4146  0775  01EB               	clrf	CleanKeeperController@bSignalRelay
  4147                           
  4148                           ;cleankeeper.c: 245: if ( iOverLoadTimer <= (30120l*540) )
  4149  0776  1BE6               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  4150  0777  2F83               	goto	l1953
  4151  0778  0866               	movf	CleanKeeperController@iOverLoadTimer+3,w
  4152  0779  1D03               	btfss	3,2
  4153  077A  2F86               	goto	l1955
  4154  077B  3061               	movlw	97
  4155  077C  0263               	subwf	CleanKeeperController@iOverLoadTimer,w
  4156  077D  302E               	movlw	46
  4157  077E  3B64               	subwfb	CleanKeeperController@iOverLoadTimer+1,w
  4158  077F  30F8               	movlw	248
  4159  0780  3B65               	subwfb	CleanKeeperController@iOverLoadTimer+2,w
  4160  0781  1803               	btfsc	3,0
  4161  0782  2F86               	goto	l1955
  4162  0783                     l1953:	
  4163                           
  4164                           ;cleankeeper.c: 246: {
  4165                           ;cleankeeper.c: 247: bSignalOverload = 0;
  4166  0783  01EA               	clrf	CleanKeeperController@bSignalOverload
  4167                           
  4168                           ;cleankeeper.c: 248: iState = 0;
  4169  0784  01E7               	clrf	CleanKeeperController@iState
  4170  0785  01E8               	clrf	CleanKeeperController@iState+1
  4171  0786                     l1955:	
  4172                           
  4173                           ;cleankeeper.c: 249: }
  4174                           ;cleankeeper.c: 250: }
  4175                           ;cleankeeper.c: 257: if ( iOverLoadTimer >= (30120l*600) )
  4176  0786  1BE6               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  4177  0787  2F96               	goto	l1959
  4178  0788  30C0               	movlw	192
  4179  0789  0263               	subwf	CleanKeeperController@iOverLoadTimer,w
  4180  078A  30C1               	movlw	193
  4181  078B  3B64               	subwfb	CleanKeeperController@iOverLoadTimer+1,w
  4182  078C  3013               	movlw	19
  4183  078D  3B65               	subwfb	CleanKeeperController@iOverLoadTimer+2,w
  4184  078E  3001               	movlw	1
  4185  078F  3B66               	subwfb	CleanKeeperController@iOverLoadTimer+3,w
  4186  0790  1C03               	btfss	3,0
  4187  0791  2F96               	goto	l1959
  4188                           
  4189                           ;cleankeeper.c: 258: {
  4190                           ;cleankeeper.c: 259: iState = 5;
  4191  0792  3005               	movlw	5
  4192  0793  00E7               	movwf	CleanKeeperController@iState
  4193  0794  3000               	movlw	0
  4194  0795  00E8               	movwf	CleanKeeperController@iState+1
  4195  0796                     l1959:	
  4196                           
  4197                           ;cleankeeper.c: 260: }
  4198                           ;cleankeeper.c: 263: if (bSignalRelay == 1)
  4199  0796  036B               	decf	CleanKeeperController@bSignalRelay,w
  4200  0797  1D03               	btfss	3,2
  4201  0798  2FC1               	goto	l1973
  4202                           
  4203                           ;cleankeeper.c: 264: {
  4204                           ;cleankeeper.c: 266: LATCbits.LATC4 = 1;
  4205  0799  0022               	movlb	2	; select bank2
  4206  079A  160E               	bsf	14,4	;volatile
  4207                           
  4208                           ;cleankeeper.c: 269: if (bSignalDirection == 1)
  4209  079B  0020               	movlb	0	; select bank0
  4210  079C  0369               	decf	CleanKeeperController@bSignalDirection,w
  4211  079D  1D03               	btfss	3,2
  4212  079E  2FA2               	goto	l262
  4213                           
  4214                           ;cleankeeper.c: 270: {
  4215                           ;cleankeeper.c: 271: LATAbits.LATA2 = 1;
  4216  079F  0022               	movlb	2	; select bank2
  4217  07A0  150C               	bsf	12,2	;volatile
  4218                           
  4219                           ;cleankeeper.c: 272: }
  4220  07A1  2FA4               	goto	l1967
  4221  07A2                     l262:	
  4222                           
  4223                           ;cleankeeper.c: 273: else
  4224                           ;cleankeeper.c: 274: {
  4225                           ;cleankeeper.c: 275: LATAbits.LATA2 = 0;
  4226  07A2  0022               	movlb	2	; select bank2
  4227  07A3  110C               	bcf	12,2	;volatile
  4228  07A4                     l1967:	
  4229                           
  4230                           ;cleankeeper.c: 276: }
  4231                           ;cleankeeper.c: 279: iOverLoadTimer++;
  4232  07A4  3001               	movlw	1
  4233  07A5  0020               	movlb	0	; select bank0
  4234  07A6  07E3               	addwf	CleanKeeperController@iOverLoadTimer,f
  4235  07A7  3000               	movlw	0
  4236  07A8  3DE4               	addwfc	CleanKeeperController@iOverLoadTimer+1,f
  4237  07A9  3000               	movlw	0
  4238  07AA  3DE5               	addwfc	CleanKeeperController@iOverLoadTimer+2,f
  4239  07AB  3000               	movlw	0
  4240  07AC  3DE6               	addwfc	CleanKeeperController@iOverLoadTimer+3,f
  4241                           
  4242                           ;cleankeeper.c: 280: if (iOverLoadTimer > (30120l*600))
  4243  07AD  1BE6               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  4244  07AE  2FC1               	goto	l1973
  4245  07AF  30C1               	movlw	193
  4246  07B0  0263               	subwf	CleanKeeperController@iOverLoadTimer,w
  4247  07B1  30C1               	movlw	193
  4248  07B2  3B64               	subwfb	CleanKeeperController@iOverLoadTimer+1,w
  4249  07B3  3013               	movlw	19
  4250  07B4  3B65               	subwfb	CleanKeeperController@iOverLoadTimer+2,w
  4251  07B5  3001               	movlw	1
  4252  07B6  3B66               	subwfb	CleanKeeperController@iOverLoadTimer+3,w
  4253  07B7  1C03               	btfss	3,0
  4254  07B8  2FC1               	goto	l1973
  4255                           
  4256                           ;cleankeeper.c: 281: {
  4257                           ;cleankeeper.c: 282: iOverLoadTimer = (30120l*600);
  4258  07B9  3001               	movlw	1
  4259  07BA  00E6               	movwf	CleanKeeperController@iOverLoadTimer+3
  4260  07BB  3013               	movlw	19
  4261  07BC  00E5               	movwf	CleanKeeperController@iOverLoadTimer+2
  4262  07BD  30C1               	movlw	193
  4263  07BE  00E4               	movwf	CleanKeeperController@iOverLoadTimer+1
  4264  07BF  30C0               	movlw	192
  4265  07C0  00E3               	movwf	CleanKeeperController@iOverLoadTimer
  4266  07C1                     l1973:	
  4267                           
  4268                           ;cleankeeper.c: 283: }
  4269                           ;cleankeeper.c: 284: }
  4270                           ;cleankeeper.c: 286: if (bSignalRelay == 0)
  4271  07C1  086B               	movf	CleanKeeperController@bSignalRelay,w
  4272  07C2  1D03               	btfss	3,2
  4273  07C3  2FE6               	goto	l1983
  4274                           
  4275                           ;cleankeeper.c: 287: {
  4276                           ;cleankeeper.c: 289: LATCbits.LATC4 = 0;
  4277  07C4  0022               	movlb	2	; select bank2
  4278  07C5  120E               	bcf	14,4	;volatile
  4279                           
  4280                           ;cleankeeper.c: 292: iOverLoadTimer--;
  4281  07C6  30FF               	movlw	255
  4282  07C7  0020               	movlb	0	; select bank0
  4283  07C8  07E3               	addwf	CleanKeeperController@iOverLoadTimer,f
  4284  07C9  30FF               	movlw	255
  4285  07CA  3DE4               	addwfc	CleanKeeperController@iOverLoadTimer+1,f
  4286  07CB  30FF               	movlw	255
  4287  07CC  3DE5               	addwfc	CleanKeeperController@iOverLoadTimer+2,f
  4288  07CD  30FF               	movlw	255
  4289  07CE  3DE6               	addwfc	CleanKeeperController@iOverLoadTimer+3,f
  4290                           
  4291                           ;cleankeeper.c: 293: if (iOverLoadTimer <= 0)
  4292  07CF  1BE6               	btfsc	CleanKeeperController@iOverLoadTimer+3,7
  4293  07D0  2FDE               	goto	l1981
  4294  07D1  0866               	movf	CleanKeeperController@iOverLoadTimer+3,w
  4295  07D2  1D03               	btfss	3,2
  4296  07D3  2FE6               	goto	l1983
  4297  07D4  0865               	movf	CleanKeeperController@iOverLoadTimer+2,w
  4298  07D5  1D03               	btfss	3,2
  4299  07D6  2FE6               	goto	l1983
  4300  07D7  0864               	movf	CleanKeeperController@iOverLoadTimer+1,w
  4301  07D8  1D03               	btfss	3,2
  4302  07D9  2FE6               	goto	l1983
  4303  07DA  3001               	movlw	1
  4304  07DB  0263               	subwf	CleanKeeperController@iOverLoadTimer,w
  4305  07DC  1803               	btfsc	3,0
  4306  07DD  2FE6               	goto	l1983
  4307  07DE                     l1981:	
  4308                           
  4309                           ;cleankeeper.c: 294: {
  4310                           ;cleankeeper.c: 295: iOverLoadTimer = 0;
  4311  07DE  3000               	movlw	0
  4312  07DF  00E6               	movwf	CleanKeeperController@iOverLoadTimer+3
  4313  07E0  3000               	movlw	0
  4314  07E1  00E5               	movwf	CleanKeeperController@iOverLoadTimer+2
  4315  07E2  3000               	movlw	0
  4316  07E3  00E4               	movwf	CleanKeeperController@iOverLoadTimer+1
  4317  07E4  3000               	movlw	0
  4318  07E5  00E3               	movwf	CleanKeeperController@iOverLoadTimer
  4319  07E6                     l1983:	
  4320                           
  4321                           ;cleankeeper.c: 296: }
  4322                           ;cleankeeper.c: 297: }
  4323                           ;cleankeeper.c: 299: if (bSignalOverload)
  4324  07E6  086A               	movf	CleanKeeperController@bSignalOverload,w
  4325  07E7  1903               	btfsc	3,2
  4326  07E8  2FEC               	goto	l267
  4327                           
  4328                           ;cleankeeper.c: 300: {
  4329                           ;cleankeeper.c: 301: LATAbits.LATA4 = 1;
  4330  07E9  0022               	movlb	2	; select bank2
  4331  07EA  160C               	bsf	12,4	;volatile
  4332                           
  4333                           ;cleankeeper.c: 302: }
  4334  07EB  0008               	return
  4335  07EC                     l267:	
  4336                           
  4337                           ;cleankeeper.c: 303: else
  4338                           ;cleankeeper.c: 304: {
  4339                           ;cleankeeper.c: 305: LATAbits.LATA4 = 0;
  4340  07EC  0022               	movlb	2	; select bank2
  4341  07ED  120C               	bcf	12,4	;volatile
  4342  07EE  0008               	return
  4343  07EF                     __end_of_CleanKeeperController:	
  4344  007E                     btemp	set	126	;btemp
  4345  007E                     wtemp	set	126
  4346  007E                     wtemp0	set	126
  4347  0080                     wtemp1	set	128
  4348  0082                     wtemp2	set	130
  4349  0084                     wtemp3	set	132
  4350  0086                     wtemp4	set	134
  4351  0088                     wtemp5	set	136
  4352  007F                     wtemp6	set	127
  4353  007E                     ttemp	set	126
  4354  007E                     ttemp0	set	126
  4355  0081                     ttemp1	set	129
  4356  0084                     ttemp2	set	132
  4357  0087                     ttemp3	set	135
  4358  007F                     ttemp4	set	127
  4359  007E                     ltemp	set	126
  4360  007E                     ltemp0	set	126
  4361  0082                     ltemp1	set	130
  4362  0086                     ltemp2	set	134
  4363  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    6
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     67      77
    BANK1            32      0       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _InitApp->_InitAddress
    _InitAddress->_ReadFlash
    _CleanKeeperInit->_PulseOut
    _PulseOut->___lwtoft
    ___lwtoft->___ftpack
    ___fttol->___lwtoft
    ___ftmul->___lwtoft
    ___ftdiv->___lwtoft
    ___ftadd->___lwtoft
    _ConvertRpm2Hz->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_CleanKeeperInit
    _CleanKeeperInit->_PulseOut
    _PulseOut->___fttol
    ___fttol->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftdiv
    _ConvertRpm2Hz->___aldiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13075
              _CleanKeeperController
                    _CleanKeeperInit
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0     180
                        _InitAddress
                           _InitGPIO
 ---------------------------------------------------------------------------------
 (2) _InitGPIO                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAddress                                          4     4      0     180
                                              6 COMMON     4     4      0
                          _ReadFlash
 ---------------------------------------------------------------------------------
 (3) _ReadFlash                                            6     4      2     135
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CleanKeeperInit                                      2     2      0   12695
                                             65 BANK0      2     2      0
                      _ConvertRpm2Hz
                           _PulseOut
 ---------------------------------------------------------------------------------
 (2) _PulseOut                                             8     6      2   11611
                                             12 COMMON     2     2      0
                                             59 BANK0      6     4      2
                          _LimitFreq
                    _SetPWMDutyCycle
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    2220
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     380
                                             45 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2652
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2606
                                             16 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3268
                                             32 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2070
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (3) _SetPWMDutyCycle                                      2     0      2      86
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _LimitFreq                                            4     2      2     200
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ConvertRpm2Hz                                       10     8      2    1059
                                             14 BANK0     10     8      2
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     348
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     556
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _CleanKeeperController                                6     6      0     200
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CleanKeeperController
   _CleanKeeperInit
     _ConvertRpm2Hz
       ___aldiv
         ___lmul (ARG)
       ___lmul
     _PulseOut
       _LimitFreq
       _SetPWMDutyCycle
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft
         ___ftpack
   _ConfigureOscillator
   _InitApp
     _InitAddress
       _ReadFlash
     _InitGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     43      4D       6       96.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       4       8       12.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      5F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Sep 17 11:37:26 2015

                        PulseOut@iFreq 005B                                      l7 0116  
                         ___ftadd@exp1 004C                           ___ftadd@exp2 004B  
                         ___ftadd@sign 004A                                    l262 07A2  
                                  l248 0717                                    l344 02FB  
                                  l194 0212                                    l450 0249  
                                  l267 07EC                                    l541 03D9  
                                  l457 025C                                    l481 0695  
                                  l458 0264                                    _PR2 001B  
                                  wreg 0009                     _ConvertRpm2Hz$1026 0030  
                         ___ftdiv@cntr 003A                           ___ftdiv@sign 003F  
                                 l2015 0109                                   l1515 0202  
                                 l1533 01C8                                   l1509 01F0  
                                 l1461 0230                                   l1621 0674  
                                 l1551 030C                                   l1519 020E  
                                 l1471 025A                                   l1463 0235  
                                 l1455 021F                                   l1615 0661  
                                 l1561 032A                                   l1529 01BE  
                                 l1473 024E                                   l1633 06A7  
                                 l1617 066B                                   l1609 064E  
                                 l1721 05B3                                   l1705 0570  
                                 l1459 0226                                   l1627 0687  
                                 l1619 0670                                   l1573 0355  
                                 l1637 06B9                                   l1629 0691  
                                 l1733 05CF                                   l1717 05AB  
                                 l1903 0709                                   l1559 031C  
                                 l1647 06D4                                   l1591 0625  
                                 l1663 0420                                   l1815 04F0  
                                 l1913 0719                                   l1577 0363  
                                 l1569 034A                                   l1657 040A  
                                 l1729 05C7                                   l1915 071D  
                                 l1587 061E                                   l1933 0759  
                                 l1597 0634                                   l1685 047A  
                                 l1677 0461                                   l1781 03EA  
                                 l1749 0385                                   l1927 0738  
                                 l1775 03D0                                   l1767 03B5  
                                 l1953 0783                                   l1945 076E  
                                 l1777 03DC                                   l1769 03C3  
                                 l1955 0786                                   l1939 0763  
                                 l1699 055A                                   l1795 0144  
                                 l1981 07DE                                   l1973 07C1  
                                 l1885 015E                                   l1983 07E6  
                                 l1967 07A4                                   l1959 0796  
                                 l1897 06FF                                   l1889 0165  
                CleanKeeperInit@iHertz 0061                                   u2015 05D0  
                                 u2025 05D6                                   u1315 022B  
                                 u2115 03D1                                   u2205 015A  
                                 _LATA 010C                                   u1335 0244  
                                 u2055 038C                                   u1415 0193  
                                 _LATC 010E                                   u2225 0161  
                                 u1425 01A6                                   u1355 0255  
                                 u2085 03B6                                   u1545 031F  
                                 u1705 064F                                   u1395 026B  
                                 u1565 032B                                   u1485 01C9  
                                 u1575 033F                                   u1495 01D0  
                                 u1735 0662                                   u1585 034B  
                                 u1905 047B                                   u1765 0675  
                                 u1865 0432                                   u1945 057C  
                                 u1795 0688                                   u1875 0442  
                                 u1955 058C                                   u1885 0462  
                                 u1895 0471                                   u1975 05B4  
                                 u1985 05BA                                   _PIR2 0012  
                        ??_InitAddress 0076                                   _main 0106  
                         ___ftpack@arg 0070                           ___ftpack@exp 0073  
                                 fsr0h 0005                                   fsr0l 0004  
                                 btemp 007E                                   ltemp 007E  
                                 start 0001                                   ttemp 007E  
                                 wtemp 007E                           ___ftmul@cntr 002E  
                         ___ftmul@sign 002F                        InitAddress@addr 0078  
                      __end_of_InitApp 0100                        _SetPWMDutyCycle 010B  
                         ___fttol@exp1 005A                 ?_CleanKeeperController 0070  
                         ___fttol@lval 0056                        __end_of___aldiv 036C  
                                ?_main 0070                        __end_of___ftadd 06EB  
                        __CFG_WDTE$OFF 0000                        __end_of___ftdiv 049B  
                      __end_of___ftmul 05F6                        __end_of___fttol 03F3  
                                _T2CON 001C                                  _TRISA 008C  
                                _TRISC 008E                    _ConfigureOscillator 0111  
                  ___lmul@multiplicand 0074                        ??_ConvertRpm2Hz 007D  
                        __CFG_PWRTE$ON 0000               SetPWMDutyCycle@DutyCycle 0070  
                        ___ftpack@sign 0074                                  ltemp0 007E  
                                ltemp1 0082                                  ltemp2 0086  
                                ltemp3 0080                                  ttemp0 007E  
                                ttemp1 0081                                  ttemp2 0084  
                                ttemp3 0087                                  ttemp4 007F  
                                status 0003                                  wtemp0 007E  
                                wtemp1 0080                                  wtemp2 0082  
                                wtemp3 0084                                  wtemp4 0086  
                                wtemp5 0088                                  wtemp6 007F  
                 ?_ConfigureOscillator 0070                    __end_of_InitAddress 014A  
                      __initialization 07EF                           __end_of_main 010B  
                     __end_of_InitGPIO 018D                                 ??_main 007E  
                        ___fttol@sign1 0055                       ReadFlash@address 0070  
                     __end_of_PulseOut 0543                                 _ADRESH 009C  
                               _ADRESL 009B                                 _ANSELA 018C  
                               _ANSELC 018E                       __end_of___ftpack 027B  
            CleanKeeperController@bRed 0074                                 _PMADRH 0192  
                               _PMADRL 0191                       __end_of___lwtoft 012B  
                               _PMDATH 0194                                 _PMDATL 0193  
                               _PMCON2 0196                     __size_of_ReadFlash 0029  
                               _SSPADD 0212                __end_of_SetPWMDutyCycle 0110  
                            ??_InitApp 007A                  ??_ConfigureOscillator 0070  
                   __size_of_LimitFreq 0032                         LimitFreq@iFreq 0070  
                               ___lmul 01B6                              ??___aldiv 007C  
                            ??___ftadd 0046                              ??___ftdiv 0036  
                            ??___ftmul 0026                              ??___fttol 0051  
                ___ftmul@f3_as_product 002B    CleanKeeperController@iOverLoadTimer 0063  
                          _InitAddress 012B                __end_of__initialization 07FE  
                           ___ftadd@f1 0040                             ___ftadd@f2 0043  
                           ___ftdiv@f1 0033                             ___ftdiv@f2 0030  
                           ___ftdiv@f3 003B                             ___ftmul@f1 0020  
                           ___ftmul@f2 0023                             ___fttol@f1 004D  
                       __pcstackCOMMON 0070                             ___lwtoft@c 0078  
                    __end_of_ReadFlash 01B6                         _OPTION_REGbits 0095  
                    __end_of_LimitFreq 0217            CleanKeeperController@bGreen 0075  
CleanKeeperController@bSignalDirection 0069            CleanKeeperController@iTimer 00A0  
          CleanKeeperController@iState 0067                             __pbssBANK0 0063  
                           __pbssBANK1 00A0                              ?_InitGPIO 0070  
             __size_of_CleanKeeperInit 0021                       ?_SetPWMDutyCycle 0070  
              ??_CleanKeeperController 0070                             __pmaintext 0106  
                              ?___lmul 0070                              ?_PulseOut 005B  
                              _ADDRESS 006C                         ___lmul@product 0078  
                            ?___ftpack 0070                              ?___lwtoft 0078  
                              _PWM2DCH 0615                                _PWM2DCL 0614  
                              _PWM2CON 0616                                _SSPCON1 0215  
                              _SSPCON2 0216                                _SSPCON3 0217  
                              _SSPSTAT 0214                             ??_InitGPIO 0070  
                    ConvertRpm2Hz@iRpm 002E   CleanKeeperController@bSignalOverload 006A  
                              _InitApp 00FD                          ReadFlash@data 0074  
                              ___aldiv 02EA                        __size_of___lmul 002F  
                              ___ftadd 05F6                                ___ftdiv 03F3  
                           ??_PulseOut 007C                                ___ftmul 0543  
                              ___fttol 036C                             ??___ftpack 0075  
                              __ptext1 00FD                                __ptext2 016B  
                              __ptext3 012B                                __ptext4 018D  
                              __ptext5 0111                                __ptext6 014A  
                              __ptext7 049B                                __ptext8 0119  
                              __ptext9 036C                             ??___lwtoft 007B  
                     ___aldiv@dividend 0024                  __end_of_ConvertRpm2Hz 02EA  
                 end_of_initialization 07FE                       ___aldiv@quotient 002A  
                    ??_CleanKeeperInit 007E                           __pstringtext 0100  
                            _PORTAbits 000C                              _PORTCbits 000E  
                     __CFG_FOSC$INTOSC 0000                              _TRISAbits 008C  
                            _TRISCbits 008E      CleanKeeperController@bSignalRelay 006B  
                 PulseOut@iLimitedFreq 005F            __end_of_ConfigureOscillator 0119  
                  ConvertRpm2Hz@iHertz 0034                           ?_InitAddress 0070  
                  ConvertRpm2Hz@iScale 0100                            ___ftdiv@exp 003E  
                          ___ftmul@exp 002A                   __end_ofWait_ms@iWAIT 0106  
                       __end_of___lmul 01E5                    start_initialization 07EF  
                    LimitFreq@iLimited 0072                              _ReadFlash 018D  
                            _LimitFreq 01E5                      __size_of_InitGPIO 0022  
       __size_of_CleanKeeperController 0104                               ??___lmul 0078  
        __end_of_CleanKeeperController 07EF                      __size_of_PulseOut 00A8  
                    __size_of___ftpack 0064                              ___latbits 0000  
                    __size_of___lwtoft 0012                          __pcstackBANK0 0020  
                           ?_ReadFlash 0070                             ?_LimitFreq 0070  
                             ?_InitApp 0070                               ?___aldiv 0020  
                             ?___ftadd 0040                               ?___ftdiv 0030  
                             ?___ftmul 0020                               ?___fttol 004D  
             __size_of_SetPWMDutyCycle 0005                        ___aldiv@divisor 0020  
                      _CleanKeeperInit 014A                        ___aldiv@counter 0028  
                             _LATAbits 010C                               _LATCbits 010E  
                             _PIE1bits 0091                   __size_of_InitAddress 001F  
                             _PIR1bits 0011                             _ADCON0bits 009D  
                           _ADCON1bits 009E                               _WPUAbits 020C  
                          ??_ReadFlash 0072                           Wait_ms@iWAIT 0104  
                          ??_LimitFreq 0072                      ___lmul@multiplier 0070  
                             _InitGPIO 016B                       __size_of_InitApp 0003  
                             _PulseOut 049B                 __size_of_ConvertRpm2Hz 006F  
                     __size_of___aldiv 0082                       __size_of___ftadd 00F5  
                     __size_of___ftdiv 00A8                       __size_of___ftmul 00B3  
                     __size_of___fttol 0087                               ___ftpack 0217  
                           _ANSELAbits 018C                               ___lwtoft 0119  
                           _ANSELCbits 018E                      ??_SetPWMDutyCycle 0072  
              __end_of_CleanKeeperInit 016B                               __ptext10 0543  
                             __ptext11 03F3                               __ptext12 05F6  
                             __ptext13 0217                               __ptext14 010B  
                             __ptext15 01E5                               __ptext16 027B  
                             __ptext17 01B6                               __ptext18 02EA  
                             __ptext19 06EB                          __size_of_main 0005  
         __size_of_ConfigureOscillator 0008                            _OSCSTATbits 009A  
                           _INTCONbits 000B                          _ConvertRpm2Hz 027B  
                           _PMCON1bits 0195                             _OSCCONbits 0099  
          __end_ofConvertRpm2Hz@iScale 0104                  _CleanKeeperController 06EB  
                         ___aldiv@sign 0029                            _SSPCON1bits 0215  
                     ?_CleanKeeperInit 0070                         ?_ConvertRpm2Hz 002E  
                         PulseOut@iPR2 005D  
